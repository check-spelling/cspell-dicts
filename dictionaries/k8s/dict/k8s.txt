
# cspell-tools: keep-case no-split

$ref
$schema
HPA
Port
VPA
acceptedNames
accessModes
acquireTime
action
active
activeDeadlineSeconds
add
additionalItems
additionalPrinterColumns
additionalProperties
address
addressType
addresses
admissionReviewVersions
affinity
aggregationRule
allOf
allocatable
allocateLoadBalancerNodePorts
allocatedResources
allocation
allocationMode
allowPrivilegeEscalation
allowVolumeExpansion
allowed
allowedTopologies
annotations
anyOf
apiGroup
apiGroups
apiServerID
apiVersion
apiVersions
appProtocol
architecture
args
assigned
assuredConcurrencyShares
attachError
attachRequired
attached
attacher
attachmentMetadata
audience
audiences
authenticated
automountServiceAccountToken
availableOnNodes
availableReplicas
averageUtilization
averageValue
awsElasticBlockStore
azureDisk
azureFile
backend
backoffLimit
behavior
binaryData
blockOwnerDeletion
bootID
borrowingLimitPercent
boundObjectRef
buildDate
caBundle
cachingMode
capabilities
capacity
categories
causes
cephfs
certificate
chapAuthDiscovery
chapAuthSession
cidr
cinder
claimName
claimRef
claims
clientCIDR
clientConfig
clientIP
clusterIP
clusterIPs
clusterRoleSelectors
clusterScope
code
collisionCount
command
commonEncodingVersion
compiler
completedIndexes
completionMode
completionTime
completions
component
concurrencyPolicy
conditionType
conditions
config
configMap
configMapKeyRef
configMapRef
configSource
container
containerID
containerName
containerPort
containerResource
containerRuntimeVersion
containerStatuses
containers
continue
controller
controllerExpandSecretRef
controllerPublishSecretRef
conversion
conversionReviewVersions
count
creationTimestamp
csi
current
currentCPUUtilizationPercentage
currentHealthy
currentMetrics
currentNumberScheduled
currentReplicas
currentRevision
daemonEndpoints
data
dataSource
dataSourceRef
datasetName
datasetUUID
deallocationRequested
decodableVersions
default
defaultBackend
defaultMode
defaultRequest
definitions
deleteOptions
deletionGracePeriodSeconds
deletionTimestamp
denied
dependencies
deprecated
deprecatedCount
deprecatedFirstTimestamp
deprecatedLastTimestamp
deprecatedSource
deprecatedTopology
deprecationWarning
describedObject
description
desiredHealthy
desiredNumberScheduled
desiredReplicas
detachError
details
devicePath
directory
diskName
diskURI
disruptedPods
disruptionsAllowed
distinguisherMethod
divisor
dnsConfig
dnsPolicy
downwardAPI
driver
driverName
drivers
drop
dryRun
effect
egress
emptyDir
enableServiceLinks
encodingVersion
endPort
endpoints
endpointsNamespace
enum
env
envFrom
ephemeral
ephemeralContainerStatuses
ephemeralContainers
error
evaluationError
eventTime
example
except
excludeResourceRules
exclusiveMaximum
exclusiveMinimum
exec
exitCode
expectedPods
expirationSeconds
expirationTimestamp
expression
external
externalDocs
externalID
externalIPs
externalName
externalTrafficPolicy
extra
failed
failedJobsHistoryLimit
failurePolicy
failureThreshold
fc
field
fieldPath
fieldRef
fieldsType
fieldsV1
finalizers
finishedAt
firstTimestamp
flexVolume
flocker
forZones
format
from
fsGroup
fsGroupChangePolicy
fsGroupPolicy
fsType
fullyLabeledReplicas
gateway
gcePersistentDisk
generateName
generation
gitCommit
gitRepo
gitTreeState
gitVersion
globalDefault
glusterfs
gmsaCredentialSpec
gmsaCredentialSpecName
goVersion
gracePeriodSeconds
group
groupPriorityMinimum
groupVersion
groups
grpc
handSize
handler
hard
healthCheckNodePort
hints
holderIdentity
host
hostAliases
hostIP
hostIPC
hostNetwork
hostPID
hostPath
hostPort
hostProcess
hostUsers
hostname
hostnames
hosts
http
httpGet
httpHeaders
hyperkube
id
image
imageID
imagePullPolicy
imagePullSecrets
images
immutable
incomplete
ingress
ingressClassName
initContainerStatuses
initContainers
initialDelaySeconds
initiatorName
inlineVolumeSpec
insecureSkipTLSVerify
internalTrafficPolicy
involvedObject
ip
ipBlock
ipFamilies
ipFamilyPolicy
ipv4
ipv6
iqn
iscsi
iscsiInterface
items
jobTemplate
jsonPath
kernelVersion
key
keyring
kind
konnectivity
kube
kubeProxyVersion
kubeadm
kubebuilder
kubectl
kubelet
kubeletConfigKey
kubeletEndpoint
kubeletVersion
kubelets
kubernetes
kustomization
labelSelector
labelSelectorPath
labels
lastHeartbeatTime
lastKnownGood
lastObservedTime
lastProbeTime
lastScaleTime
lastScheduleTime
lastState
lastSuccessfulTime
lastTimestamp
lastTransitionTime
lastUpdateTime
leaseDurationSeconds
leaseTransitions
lendablePercent
level
lifecycle
limitResponse
limited
limits
listKind
livenessProbe
loadBalancer
loadBalancerClass
loadBalancerIP
loadBalancerSourceRanges
local
localhostProfile
lun
machineID
major
managedFields
manager
manualSelector
matchConstraints
matchExpressions
matchFields
matchLabelExpressions
matchLabelKeys
matchLabels
matchPolicy
matchResources
matchingPrecedence
max
maxItems
maxLength
maxLimitRequestRatio
maxProperties
maxReplicas
maxSkew
maxSurge
maxUnavailable
maximum
maximumVolumeSize
medium
message
metadata
metric
metrics
min
minAvailable
minDomains
minItems
minLength
minProperties
minReadySeconds
minReplicas
minimum
minor
mode
monitors
mountOptions
mountPath
mountPropagation
multipleOf
name
names
nameservers
namespace
namespaceSelector
namespaced
namespaces
nfs
nodeAffinity
nodeAffinityPolicy
nodeExpandSecretRef
nodeID
nodeInfo
nodeName
nodePort
nodePublishSecretRef
nodeSelector
nodeSelectorTerms
nodeStageSecretRef
nodeTaintsPolicy
nodeTopology
nominalConcurrencyShares
nominatedNodeName
nonResourceAttributes
nonResourceRules
nonResourceURLs
not
notReadyAddresses
note
nullable
number
numberAvailable
numberMisscheduled
numberReady
numberUnavailable
object
objectSelector
observedGeneration
onExitCodes
onPodConditions
oneOf
openAPIV3Schema
operatingSystem
operation
operations
operator
optional
options
ordinals
orphanDependents
os
osImage
overhead
ownerReferences
parallelism
paramKind
paramRef
parameters
parametersRef
partition
path
pathType
paths
pattern
patternProperties
paused
pdID
pdName
perNodeHostBits
periodSeconds
persistentVolumeClaim
persistentVolumeClaimRetentionPolicy
persistentVolumeName
persistentVolumeReclaimPolicy
phase
photonPersistentDisk
platform
plural
podAffinity
podAffinityTerm
podAntiAffinity
podCIDR
podCIDRs
podFailurePolicy
podFixed
podIP
podIPs
podInfoOnMount
podManagementPolicy
podSelector
pods
policies
policyName
policyTypes
pool
port
portals
ports
portworxVolume
postStart
potentialNodes
preStop
preconditions
preemptionPolicy
preference
preferredDuringSchedulingIgnoredDuringExecution
preferredVersion
prefix
preserveUnknownFields
priority
priorityClassName
priorityLevelConfiguration
privileged
procMount
progressDeadlineSeconds
projected
propagationPolicy
properties
protectionDomain
protocol
providerID
provisioner
publishNotReadyAddresses
qosClass
queueLengthLimit
queues
queuing
quobyte
rbd
readOnly
readOnlyRootFilesystem
readinessGates
readinessProbe
ready
readyReplicas
reason
reclaimPolicy
regarding
registry
reinvocationPolicy
related
remainingItemCount
renewTime
replicas
reportingComponent
reportingController
reportingInstance
repository
request
requests
required
requiredDuringSchedulingIgnoredDuringExecution
requiresRepublish
reservedFor
resizeStatus
resource
resourceAttributes
resourceClaimName
resourceClaimTemplateName
resourceClaims
resourceClassName
resourceFieldRef
resourceHandle
resourceNames
resourceRules
resourceVersion
resources
restartCount
restartPolicy
retryAfterSeconds
revision
revisionHistoryLimit
role
roleRef
rollingUpdate
rule
rules
runAsGroup
runAsNonRoot
runAsUser
runAsUserName
running
runtimeClassName
scale
scaleDown
scaleIO
scaleTargetRef
scaleUp
schedule
schedulerName
scheduling
schedulingGates
schema
scheme
scope
scopeName
scopeSelector
scopes
seLinuxMount
seLinuxOptions
searches
seccompProfile
secret
secretFile
secretKeyRef
secretName
secretNamespace
secretRef
secrets
securityContext
selectPolicy
selectedNode
selector
selfLink
series
served
server
serverAddress
serverAddressByClientCIDRs
service
serviceAccount
serviceAccountName
serviceAccountToken
serviceName
serving
sessionAffinity
sessionAffinityConfig
setHostnameAsFQDN
shareName
shareProcessNamespace
shareable
shortNames
sideEffects
signal
signerName
singular
singularName
sizeBytes
sizeLimit
source
sources
spec
specReplicasPath
sslEnabled
stabilizationWindowSeconds
start
startTime
started
startedAt
startingDeadlineSeconds
startupProbe
state
status
statusReplicasPath
stdin
stdinOnce
storage
storageCapacity
storageClassName
storageMode
storagePolicyID
storagePolicyName
storagePool
storageVersionHash
storageVersions
storageos
storedVersions
strategy
stringData
subPath
subPathExpr
subdomain
subjects
subresource
subresources
subsets
succeeded
successThreshold
successfulJobsHistoryLimit
suitableNodes
supplementalGroups
suspend
sysctls
system
systemUUID
taints
target
targetCPUUtilizationPercentage
targetContainerName
targetPort
targetPortal
targetRef
targetWWNs
tcpSocket
template
tenant
terminated
terminating
terminationGracePeriodSeconds
terminationMessagePath
terminationMessagePolicy
time
timeAdded
timeZone
timeoutSeconds
title
tls
to
token
tokenRequests
tolerationSeconds
tolerations
topologyKey
topologyKeys
topologySpreadConstraints
ttlSecondsAfterFinished
tty
type
uid
unavailableReplicas
uncountedTerminatedPods
unhealthyPodEvictionPolicy
uniqueItems
unschedulable
unsuitableNodes
updateRevision
updateStrategy
updatedNumberScheduled
updatedReplicas
url
usages
used
user
userInfo
username
validations
value
valueFrom
values
verb
verbs
version
versionPriority
versions
volume
volumeAttributes
volumeBindingMode
volumeClaimTemplate
volumeClaimTemplates
volumeDevices
volumeHandle
volumeID
volumeLifecycleModes
volumeMode
volumeMounts
volumeName
volumeNamespace
volumePath
volumes
volumesAttached
volumesInUse
vsphereVolume
waiting
webhook
webhooks
weight
whenDeleted
whenScaled
whenUnsatisfiable
windowsOptions
workingDir
wwids
x-kubernetes-embedded-resource
x-kubernetes-int-or-string
x-kubernetes-list-map-keys
x-kubernetes-list-type
x-kubernetes-map-type
x-kubernetes-preserve-unknown-fields
x-kubernetes-validations
zone
{ AuditAnnotation =
    ./types/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
, ExpressionWarning =
    ./types/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
, MatchCondition =
    ./types/io.k8s.api.admissionregistration.v1.MatchCondition.dhall
, MatchResources =
    ./types/io.k8s.api.admissionregistration.v1.MatchResources.dhall
, MutatingWebhook =
    ./types/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
, MutatingWebhookConfiguration =
    ./types/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
, MutatingWebhookConfigurationList =
    ./types/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList.dhall
, NamedRuleWithOperations =
    ./types/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
, ParamKind =
    ./types/io.k8s.api.admissionregistration.v1.ParamKind.dhall
, ParamRef =
    ./types/io.k8s.api.admissionregistration.v1.ParamRef.dhall
, RuleWithOperations =
    ./types/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
, TypeChecking =
    ./types/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
, ValidatingAdmissionPolicy =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
, ValidatingAdmissionPolicyBinding =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
, ValidatingAdmissionPolicyBindingList =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList.dhall
, ValidatingAdmissionPolicyBindingSpec =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
, ValidatingAdmissionPolicyList =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList.dhall
, ValidatingAdmissionPolicySpec =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
, ValidatingAdmissionPolicyStatus =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
, ValidatingWebhook =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
, ValidatingWebhookConfiguration =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
, ValidatingWebhookConfigurationList =
    ./types/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList.dhall
, Validation =
    ./types/io.k8s.api.admissionregistration.v1.Validation.dhall
, Variable =
    ./types/io.k8s.api.admissionregistration.v1.Variable.dhall
, ServerStorageVersion =
    ./types/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
, StorageVersion =
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
, StorageVersionCondition =
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
, StorageVersionList =
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList.dhall
, StorageVersionSpec =
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec.dhall
, StorageVersionStatus =
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
, ControllerRevision =
    ./types/io.k8s.api.apps.v1.ControllerRevision.dhall
, ControllerRevisionList =
    ./types/io.k8s.api.apps.v1.ControllerRevisionList.dhall
, DaemonSet =
    ./types/io.k8s.api.apps.v1.DaemonSet.dhall
, DaemonSetCondition =
    ./types/io.k8s.api.apps.v1.DaemonSetCondition.dhall
, DaemonSetList =
    ./types/io.k8s.api.apps.v1.DaemonSetList.dhall
, DaemonSetSpec =
    ./types/io.k8s.api.apps.v1.DaemonSetSpec.dhall
, DaemonSetStatus =
    ./types/io.k8s.api.apps.v1.DaemonSetStatus.dhall
, DaemonSetUpdateStrategy =
    ./types/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
, Deployment =
    ./types/io.k8s.api.apps.v1.Deployment.dhall
, DeploymentCondition =
    ./types/io.k8s.api.apps.v1.DeploymentCondition.dhall
, DeploymentList =
    ./types/io.k8s.api.apps.v1.DeploymentList.dhall
, DeploymentSpec =
    ./types/io.k8s.api.apps.v1.DeploymentSpec.dhall
, DeploymentStatus =
    ./types/io.k8s.api.apps.v1.DeploymentStatus.dhall
, DeploymentStrategy =
    ./types/io.k8s.api.apps.v1.DeploymentStrategy.dhall
, ReplicaSet =
    ./types/io.k8s.api.apps.v1.ReplicaSet.dhall
, ReplicaSetCondition =
    ./types/io.k8s.api.apps.v1.ReplicaSetCondition.dhall
, ReplicaSetList =
    ./types/io.k8s.api.apps.v1.ReplicaSetList.dhall
, ReplicaSetSpec =
    ./types/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
, ReplicaSetStatus =
    ./types/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
, RollingUpdateDaemonSet =
    ./types/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
, RollingUpdateDeployment =
    ./types/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
, RollingUpdateStatefulSetStrategy =
    ./types/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
, StatefulSet =
    ./types/io.k8s.api.apps.v1.StatefulSet.dhall
, StatefulSetCondition =
    ./types/io.k8s.api.apps.v1.StatefulSetCondition.dhall
, StatefulSetList =
    ./types/io.k8s.api.apps.v1.StatefulSetList.dhall
, StatefulSetOrdinals =
    ./types/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
, StatefulSetPersistentVolumeClaimRetentionPolicy =
    ./types/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
, StatefulSetSpec =
    ./types/io.k8s.api.apps.v1.StatefulSetSpec.dhall
, StatefulSetStatus =
    ./types/io.k8s.api.apps.v1.StatefulSetStatus.dhall
, StatefulSetUpdateStrategy =
    ./types/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
, BoundObjectReference =
    ./types/io.k8s.api.authentication.v1.BoundObjectReference.dhall
, SelfSubjectReview =
    ./types/io.k8s.api.authentication.v1.SelfSubjectReview.dhall
, SelfSubjectReviewStatus =
    ./types/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
, TokenRequestSpec =
    ./types/io.k8s.api.authentication.v1.TokenRequestSpec.dhall
, TokenRequestStatus =
    ./types/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
, TokenReview =
    ./types/io.k8s.api.authentication.v1.TokenReview.dhall
, TokenReviewSpec =
    ./types/io.k8s.api.authentication.v1.TokenReviewSpec.dhall
, TokenReviewStatus =
    ./types/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
, UserInfo =
    ./types/io.k8s.api.authentication.v1.UserInfo.dhall
, FieldSelectorAttributes =
    ./types/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
, LabelSelectorAttributes =
    ./types/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
, LocalSubjectAccessReview =
    ./types/io.k8s.api.authorization.v1.LocalSubjectAccessReview.dhall
, NonResourceAttributes =
    ./types/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, NonResourceRule =
    ./types/io.k8s.api.authorization.v1.NonResourceRule.dhall
, ResourceAttributes =
    ./types/io.k8s.api.authorization.v1.ResourceAttributes.dhall
, ResourceRule =
    ./types/io.k8s.api.authorization.v1.ResourceRule.dhall
, SelfSubjectAccessReview =
    ./types/io.k8s.api.authorization.v1.SelfSubjectAccessReview.dhall
, SelfSubjectAccessReviewSpec =
    ./types/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
, SelfSubjectRulesReview =
    ./types/io.k8s.api.authorization.v1.SelfSubjectRulesReview.dhall
, SelfSubjectRulesReviewSpec =
    ./types/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
, SubjectAccessReview =
    ./types/io.k8s.api.authorization.v1.SubjectAccessReview.dhall
, SubjectAccessReviewSpec =
    ./types/io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
, SubjectAccessReviewStatus =
    ./types/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
, SubjectRulesReviewStatus =
    ./types/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
, Scale =
    ./types/io.k8s.api.autoscaling.v1.Scale.dhall
, ScaleSpec =
    ./types/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
, ScaleStatus =
    ./types/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
, ContainerResourceMetricSource =
    ./types/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
, ContainerResourceMetricStatus =
    ./types/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
, CrossVersionObjectReference =
    ./types/io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, ExternalMetricSource =
    ./types/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
, ExternalMetricStatus =
    ./types/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
, HPAScalingPolicy =
    ./types/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall
, HPAScalingRules =
    ./types/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
, HorizontalPodAutoscaler =
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
, HorizontalPodAutoscalerBehavior =
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
, HorizontalPodAutoscalerCondition =
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
, HorizontalPodAutoscalerList =
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList.dhall
, HorizontalPodAutoscalerSpec =
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
, HorizontalPodAutoscalerStatus =
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
, MetricIdentifier =
    ./types/io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, MetricSpec =
    ./types/io.k8s.api.autoscaling.v2.MetricSpec.dhall
, MetricStatus =
    ./types/io.k8s.api.autoscaling.v2.MetricStatus.dhall
, MetricTarget =
    ./types/io.k8s.api.autoscaling.v2.MetricTarget.dhall
, MetricValueStatus =
    ./types/io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, ObjectMetricSource =
    ./types/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
, ObjectMetricStatus =
    ./types/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
, PodsMetricSource =
    ./types/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
, PodsMetricStatus =
    ./types/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
, ResourceMetricSource =
    ./types/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
, ResourceMetricStatus =
    ./types/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
, CronJob =
    ./types/io.k8s.api.batch.v1.CronJob.dhall
, CronJobList =
    ./types/io.k8s.api.batch.v1.CronJobList.dhall
, CronJobSpec =
    ./types/io.k8s.api.batch.v1.CronJobSpec.dhall
, CronJobStatus =
    ./types/io.k8s.api.batch.v1.CronJobStatus.dhall
, Job =
    ./types/io.k8s.api.batch.v1.Job.dhall
, JobCondition =
    ./types/io.k8s.api.batch.v1.JobCondition.dhall
, JobList =
    ./types/io.k8s.api.batch.v1.JobList.dhall
, JobSpec =
    ./types/io.k8s.api.batch.v1.JobSpec.dhall
, JobStatus =
    ./types/io.k8s.api.batch.v1.JobStatus.dhall
, JobTemplateSpec =
    ./types/io.k8s.api.batch.v1.JobTemplateSpec.dhall
, PodFailurePolicy =
    ./types/io.k8s.api.batch.v1.PodFailurePolicy.dhall
, PodFailurePolicyOnExitCodesRequirement =
    ./types/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
, PodFailurePolicyOnPodConditionsPattern =
    ./types/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
, PodFailurePolicyRule =
    ./types/io.k8s.api.batch.v1.PodFailurePolicyRule.dhall
, SuccessPolicy =
    ./types/io.k8s.api.batch.v1.SuccessPolicy.dhall
, SuccessPolicyRule =
    ./types/io.k8s.api.batch.v1.SuccessPolicyRule.dhall
, UncountedTerminatedPods =
    ./types/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
, CertificateSigningRequest =
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
, CertificateSigningRequestCondition =
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
, CertificateSigningRequestList =
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestList.dhall
, CertificateSigningRequestSpec =
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
, CertificateSigningRequestStatus =
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
, ClusterTrustBundle =
    ./types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
, ClusterTrustBundleList =
    ./types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList.dhall
, ClusterTrustBundleSpec =
    ./types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
, Lease =
    ./types/io.k8s.api.coordination.v1.Lease.dhall
, LeaseList =
    ./types/io.k8s.api.coordination.v1.LeaseList.dhall
, LeaseSpec =
    ./types/io.k8s.api.coordination.v1.LeaseSpec.dhall
, LeaseCandidate =
    ./types/io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
, LeaseCandidateList =
    ./types/io.k8s.api.coordination.v1alpha1.LeaseCandidateList.dhall
, LeaseCandidateSpec =
    ./types/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
, AWSElasticBlockStoreVolumeSource =
    ./types/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, Affinity =
    ./types/io.k8s.api.core.v1.Affinity.dhall
, AppArmorProfile =
    ./types/io.k8s.api.core.v1.AppArmorProfile.dhall
, AttachedVolume =
    ./types/io.k8s.api.core.v1.AttachedVolume.dhall
, AzureDiskVolumeSource =
    ./types/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, AzureFilePersistentVolumeSource =
    ./types/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
, AzureFileVolumeSource =
    ./types/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
, Binding =
    ./types/io.k8s.api.core.v1.Binding.dhall
, CSIPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
, CSIVolumeSource =
    ./types/io.k8s.api.core.v1.CSIVolumeSource.dhall
, Capabilities =
    ./types/io.k8s.api.core.v1.Capabilities.dhall
, CephFSPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
, CephFSVolumeSource =
    ./types/io.k8s.api.core.v1.CephFSVolumeSource.dhall
, CinderPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
, CinderVolumeSource =
    ./types/io.k8s.api.core.v1.CinderVolumeSource.dhall
, ClientIPConfig =
    ./types/io.k8s.api.core.v1.ClientIPConfig.dhall
, ClusterTrustBundleProjection =
    ./types/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
, ComponentCondition =
    ./types/io.k8s.api.core.v1.ComponentCondition.dhall
, ComponentStatus =
    ./types/io.k8s.api.core.v1.ComponentStatus.dhall
, ComponentStatusList =
    ./types/io.k8s.api.core.v1.ComponentStatusList.dhall
, ConfigMap =
    ./types/io.k8s.api.core.v1.ConfigMap.dhall
, ConfigMapEnvSource =
    ./types/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
, ConfigMapKeySelector =
    ./types/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
, ConfigMapList =
    ./types/io.k8s.api.core.v1.ConfigMapList.dhall
, ConfigMapNodeConfigSource =
    ./types/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
, ConfigMapProjection =
    ./types/io.k8s.api.core.v1.ConfigMapProjection.dhall
, ConfigMapVolumeSource =
    ./types/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
, Container =
    ./types/io.k8s.api.core.v1.Container.dhall
, ContainerImage =
    ./types/io.k8s.api.core.v1.ContainerImage.dhall
, ContainerPort =
    ./types/io.k8s.api.core.v1.ContainerPort.dhall
, ContainerResizePolicy =
    ./types/io.k8s.api.core.v1.ContainerResizePolicy.dhall
, ContainerState =
    ./types/io.k8s.api.core.v1.ContainerState.dhall
, ContainerStateRunning =
    ./types/io.k8s.api.core.v1.ContainerStateRunning.dhall
, ContainerStateTerminated =
    ./types/io.k8s.api.core.v1.ContainerStateTerminated.dhall
, ContainerStateWaiting =
    ./types/io.k8s.api.core.v1.ContainerStateWaiting.dhall
, ContainerStatus =
    ./types/io.k8s.api.core.v1.ContainerStatus.dhall
, ContainerUser =
    ./types/io.k8s.api.core.v1.ContainerUser.dhall
, DaemonEndpoint =
    ./types/io.k8s.api.core.v1.DaemonEndpoint.dhall
, DownwardAPIProjection =
    ./types/io.k8s.api.core.v1.DownwardAPIProjection.dhall
, DownwardAPIVolumeFile =
    ./types/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall
, DownwardAPIVolumeSource =
    ./types/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
, EmptyDirVolumeSource =
    ./types/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
, EndpointAddress =
    ./types/io.k8s.api.core.v1.EndpointAddress.dhall
, EndpointSubset =
    ./types/io.k8s.api.core.v1.EndpointSubset.dhall
, Endpoints =
    ./types/io.k8s.api.core.v1.Endpoints.dhall
, EndpointsList =
    ./types/io.k8s.api.core.v1.EndpointsList.dhall
, EnvFromSource =
    ./types/io.k8s.api.core.v1.EnvFromSource.dhall
, EnvVar =
    ./types/io.k8s.api.core.v1.EnvVar.dhall
, EnvVarSource =
    ./types/io.k8s.api.core.v1.EnvVarSource.dhall
, EphemeralContainer =
    ./types/io.k8s.api.core.v1.EphemeralContainer.dhall
, EphemeralVolumeSource =
    ./types/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
, EventSource =
    ./types/io.k8s.api.core.v1.EventSource.dhall
, ExecAction =
    ./types/io.k8s.api.core.v1.ExecAction.dhall
, FCVolumeSource =
    ./types/io.k8s.api.core.v1.FCVolumeSource.dhall
, FlexPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
, FlexVolumeSource =
    ./types/io.k8s.api.core.v1.FlexVolumeSource.dhall
, FlockerVolumeSource =
    ./types/io.k8s.api.core.v1.FlockerVolumeSource.dhall
, GCEPersistentDiskVolumeSource =
    ./types/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, GRPCAction =
    ./types/io.k8s.api.core.v1.GRPCAction.dhall
, GitRepoVolumeSource =
    ./types/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
, GlusterfsPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
, GlusterfsVolumeSource =
    ./types/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
, HTTPGetAction =
    ./types/io.k8s.api.core.v1.HTTPGetAction.dhall
, HTTPHeader =
    ./types/io.k8s.api.core.v1.HTTPHeader.dhall
, HostAlias =
    ./types/io.k8s.api.core.v1.HostAlias.dhall
, HostIP =
    ./types/io.k8s.api.core.v1.HostIP.dhall
, HostPathVolumeSource =
    ./types/io.k8s.api.core.v1.HostPathVolumeSource.dhall
, ISCSIPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
, ISCSIVolumeSource =
    ./types/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
, ImageVolumeSource =
    ./types/io.k8s.api.core.v1.ImageVolumeSource.dhall
, KeyToPath =
    ./types/io.k8s.api.core.v1.KeyToPath.dhall
, Lifecycle =
    ./types/io.k8s.api.core.v1.Lifecycle.dhall
, LifecycleHandler =
    ./types/io.k8s.api.core.v1.LifecycleHandler.dhall
, LimitRange =
    ./types/io.k8s.api.core.v1.LimitRange.dhall
, LimitRangeItem =
    ./types/io.k8s.api.core.v1.LimitRangeItem.dhall
, LimitRangeList =
    ./types/io.k8s.api.core.v1.LimitRangeList.dhall
, LimitRangeSpec =
    ./types/io.k8s.api.core.v1.LimitRangeSpec.dhall
, LinuxContainerUser =
    ./types/io.k8s.api.core.v1.LinuxContainerUser.dhall
, LoadBalancerIngress =
    ./types/io.k8s.api.core.v1.LoadBalancerIngress.dhall
, LoadBalancerStatus =
    ./types/io.k8s.api.core.v1.LoadBalancerStatus.dhall
, LocalObjectReference =
    ./types/io.k8s.api.core.v1.LocalObjectReference.dhall
, LocalVolumeSource =
    ./types/io.k8s.api.core.v1.LocalVolumeSource.dhall
, ModifyVolumeStatus =
    ./types/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
, NFSVolumeSource =
    ./types/io.k8s.api.core.v1.NFSVolumeSource.dhall
, Namespace =
    ./types/io.k8s.api.core.v1.Namespace.dhall
, NamespaceCondition =
    ./types/io.k8s.api.core.v1.NamespaceCondition.dhall
, NamespaceList =
    ./types/io.k8s.api.core.v1.NamespaceList.dhall
, NamespaceSpec =
    ./types/io.k8s.api.core.v1.NamespaceSpec.dhall
, NamespaceStatus =
    ./types/io.k8s.api.core.v1.NamespaceStatus.dhall
, Node =
    ./types/io.k8s.api.core.v1.Node.dhall
, NodeAddress =
    ./types/io.k8s.api.core.v1.NodeAddress.dhall
, NodeAffinity =
    ./types/io.k8s.api.core.v1.NodeAffinity.dhall
, NodeCondition =
    ./types/io.k8s.api.core.v1.NodeCondition.dhall
, NodeConfigSource =
    ./types/io.k8s.api.core.v1.NodeConfigSource.dhall
, NodeConfigStatus =
    ./types/io.k8s.api.core.v1.NodeConfigStatus.dhall
, NodeDaemonEndpoints =
    ./types/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
, NodeFeatures =
    ./types/io.k8s.api.core.v1.NodeFeatures.dhall
, NodeList =
    ./types/io.k8s.api.core.v1.NodeList.dhall
, NodeRuntimeHandler =
    ./types/io.k8s.api.core.v1.NodeRuntimeHandler.dhall
, NodeRuntimeHandlerFeatures =
    ./types/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
, NodeSelector =
    ./types/io.k8s.api.core.v1.NodeSelector.dhall
, NodeSelectorRequirement =
    ./types/io.k8s.api.core.v1.NodeSelectorRequirement.dhall
, NodeSelectorTerm =
    ./types/io.k8s.api.core.v1.NodeSelectorTerm.dhall
, NodeSpec =
    ./types/io.k8s.api.core.v1.NodeSpec.dhall
, NodeStatus =
    ./types/io.k8s.api.core.v1.NodeStatus.dhall
, NodeSystemInfo =
    ./types/io.k8s.api.core.v1.NodeSystemInfo.dhall
, ObjectFieldSelector =
    ./types/io.k8s.api.core.v1.ObjectFieldSelector.dhall
, ObjectReference =
    ./types/io.k8s.api.core.v1.ObjectReference.dhall
, PersistentVolume =
    ./types/io.k8s.api.core.v1.PersistentVolume.dhall
, PersistentVolumeClaim =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaim.dhall
, PersistentVolumeClaimCondition =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall
, PersistentVolumeClaimList =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimList.dhall
, PersistentVolumeClaimSpec =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
, PersistentVolumeClaimStatus =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
, PersistentVolumeClaimTemplate =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
, PersistentVolumeClaimVolumeSource =
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
, PersistentVolumeList =
    ./types/io.k8s.api.core.v1.PersistentVolumeList.dhall
, PersistentVolumeSpec =
    ./types/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, PersistentVolumeStatus =
    ./types/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
, PhotonPersistentDiskVolumeSource =
    ./types/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, Pod =
    ./types/io.k8s.api.core.v1.Pod.dhall
, PodAffinity =
    ./types/io.k8s.api.core.v1.PodAffinity.dhall
, PodAffinityTerm =
    ./types/io.k8s.api.core.v1.PodAffinityTerm.dhall
, PodAntiAffinity =
    ./types/io.k8s.api.core.v1.PodAntiAffinity.dhall
, PodCondition =
    ./types/io.k8s.api.core.v1.PodCondition.dhall
, PodDNSConfig =
    ./types/io.k8s.api.core.v1.PodDNSConfig.dhall
, PodDNSConfigOption =
    ./types/io.k8s.api.core.v1.PodDNSConfigOption.dhall
, PodIP =
    ./types/io.k8s.api.core.v1.PodIP.dhall
, PodList =
    ./types/io.k8s.api.core.v1.PodList.dhall
, PodOS =
    ./types/io.k8s.api.core.v1.PodOS.dhall
, PodReadinessGate =
    ./types/io.k8s.api.core.v1.PodReadinessGate.dhall
, PodResourceClaim =
    ./types/io.k8s.api.core.v1.PodResourceClaim.dhall
, PodResourceClaimStatus =
    ./types/io.k8s.api.core.v1.PodResourceClaimStatus.dhall
, PodSchedulingGate =
    ./types/io.k8s.api.core.v1.PodSchedulingGate.dhall
, PodSecurityContext =
    ./types/io.k8s.api.core.v1.PodSecurityContext.dhall
, PodSpec =
    ./types/io.k8s.api.core.v1.PodSpec.dhall
, PodStatus =
    ./types/io.k8s.api.core.v1.PodStatus.dhall
, PodTemplate =
    ./types/io.k8s.api.core.v1.PodTemplate.dhall
, PodTemplateList =
    ./types/io.k8s.api.core.v1.PodTemplateList.dhall
, PodTemplateSpec =
    ./types/io.k8s.api.core.v1.PodTemplateSpec.dhall
, PortStatus =
    ./types/io.k8s.api.core.v1.PortStatus.dhall
, PortworxVolumeSource =
    ./types/io.k8s.api.core.v1.PortworxVolumeSource.dhall
, PreferredSchedulingTerm =
    ./types/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall
, Probe =
    ./types/io.k8s.api.core.v1.Probe.dhall
, ProjectedVolumeSource =
    ./types/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
, QuobyteVolumeSource =
    ./types/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, RBDPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
, RBDVolumeSource =
    ./types/io.k8s.api.core.v1.RBDVolumeSource.dhall
, ReplicationController =
    ./types/io.k8s.api.core.v1.ReplicationController.dhall
, ReplicationControllerCondition =
    ./types/io.k8s.api.core.v1.ReplicationControllerCondition.dhall
, ReplicationControllerList =
    ./types/io.k8s.api.core.v1.ReplicationControllerList.dhall
, ReplicationControllerSpec =
    ./types/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
, ReplicationControllerStatus =
    ./types/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
, ResourceClaim =
    ./types/io.k8s.api.core.v1.ResourceClaim.dhall
, ResourceFieldSelector =
    ./types/io.k8s.api.core.v1.ResourceFieldSelector.dhall
, ResourceHealth =
    ./types/io.k8s.api.core.v1.ResourceHealth.dhall
, ResourceQuota =
    ./types/io.k8s.api.core.v1.ResourceQuota.dhall
, ResourceQuotaList =
    ./types/io.k8s.api.core.v1.ResourceQuotaList.dhall
, ResourceQuotaSpec =
    ./types/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
, ResourceQuotaStatus =
    ./types/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
, ResourceRequirements =
    ./types/io.k8s.api.core.v1.ResourceRequirements.dhall
, ResourceStatus =
    ./types/io.k8s.api.core.v1.ResourceStatus.dhall
, SELinuxOptions =
    ./types/io.k8s.api.core.v1.SELinuxOptions.dhall
, ScaleIOPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
, ScaleIOVolumeSource =
    ./types/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
, ScopeSelector =
    ./types/io.k8s.api.core.v1.ScopeSelector.dhall
, ScopedResourceSelectorRequirement =
    ./types/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
, SeccompProfile =
    ./types/io.k8s.api.core.v1.SeccompProfile.dhall
, Secret =
    ./types/io.k8s.api.core.v1.Secret.dhall
, SecretEnvSource =
    ./types/io.k8s.api.core.v1.SecretEnvSource.dhall
, SecretKeySelector =
    ./types/io.k8s.api.core.v1.SecretKeySelector.dhall
, SecretList =
    ./types/io.k8s.api.core.v1.SecretList.dhall
, SecretProjection =
    ./types/io.k8s.api.core.v1.SecretProjection.dhall
, SecretReference =
    ./types/io.k8s.api.core.v1.SecretReference.dhall
, SecretVolumeSource =
    ./types/io.k8s.api.core.v1.SecretVolumeSource.dhall
, SecurityContext =
    ./types/io.k8s.api.core.v1.SecurityContext.dhall
, Service =
    ./types/io.k8s.api.core.v1.Service.dhall
, ServiceAccount =
    ./types/io.k8s.api.core.v1.ServiceAccount.dhall
, ServiceAccountList =
    ./types/io.k8s.api.core.v1.ServiceAccountList.dhall
, ServiceAccountTokenProjection =
    ./types/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
, ServiceList =
    ./types/io.k8s.api.core.v1.ServiceList.dhall
, ServicePort =
    ./types/io.k8s.api.core.v1.ServicePort.dhall
, ServiceSpec =
    ./types/io.k8s.api.core.v1.ServiceSpec.dhall
, ServiceStatus =
    ./types/io.k8s.api.core.v1.ServiceStatus.dhall
, SessionAffinityConfig =
    ./types/io.k8s.api.core.v1.SessionAffinityConfig.dhall
, SleepAction =
    ./types/io.k8s.api.core.v1.SleepAction.dhall
, StorageOSPersistentVolumeSource =
    ./types/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
, StorageOSVolumeSource =
    ./types/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
, Sysctl =
    ./types/io.k8s.api.core.v1.Sysctl.dhall
, TCPSocketAction =
    ./types/io.k8s.api.core.v1.TCPSocketAction.dhall
, Taint =
    ./types/io.k8s.api.core.v1.Taint.dhall
, Toleration =
    ./types/io.k8s.api.core.v1.Toleration.dhall
, TopologySelectorLabelRequirement =
    ./types/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
, TopologySelectorTerm =
    ./types/io.k8s.api.core.v1.TopologySelectorTerm.dhall
, TopologySpreadConstraint =
    ./types/io.k8s.api.core.v1.TopologySpreadConstraint.dhall
, TypedLocalObjectReference =
    ./types/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, TypedObjectReference =
    ./types/io.k8s.api.core.v1.TypedObjectReference.dhall
, Volume =
    ./types/io.k8s.api.core.v1.Volume.dhall
, VolumeDevice =
    ./types/io.k8s.api.core.v1.VolumeDevice.dhall
, VolumeMount =
    ./types/io.k8s.api.core.v1.VolumeMount.dhall
, VolumeMountStatus =
    ./types/io.k8s.api.core.v1.VolumeMountStatus.dhall
, VolumeNodeAffinity =
    ./types/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
, VolumeProjection =
    ./types/io.k8s.api.core.v1.VolumeProjection.dhall
, VolumeResourceRequirements =
    ./types/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
, VsphereVirtualDiskVolumeSource =
    ./types/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
, WeightedPodAffinityTerm =
    ./types/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall
, WindowsSecurityContextOptions =
    ./types/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
, Endpoint =
    ./types/io.k8s.api.discovery.v1.Endpoint.dhall
, EndpointConditions =
    ./types/io.k8s.api.discovery.v1.EndpointConditions.dhall
, EndpointHints =
    ./types/io.k8s.api.discovery.v1.EndpointHints.dhall
, EndpointPort =
    ./types/io.k8s.api.discovery.v1.EndpointPort.dhall
, EndpointSlice =
    ./types/io.k8s.api.discovery.v1.EndpointSlice.dhall
, EndpointSliceList =
    ./types/io.k8s.api.discovery.v1.EndpointSliceList.dhall
, ForZone =
    ./types/io.k8s.api.discovery.v1.ForZone.dhall
, Event =
    ./types/io.k8s.api.events.v1.Event.dhall
, EventList =
    ./types/io.k8s.api.events.v1.EventList.dhall
, EventSeries =
    ./types/io.k8s.api.events.v1.EventSeries.dhall
, ExemptPriorityLevelConfiguration =
    ./types/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
, FlowDistinguisherMethod =
    ./types/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
, FlowSchema =
    ./types/io.k8s.api.flowcontrol.v1.FlowSchema.dhall
, FlowSchemaCondition =
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall
, FlowSchemaList =
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaList.dhall
, FlowSchemaSpec =
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
, FlowSchemaStatus =
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
, GroupSubject =
    ./types/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
, LimitResponse =
    ./types/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
, LimitedPriorityLevelConfiguration =
    ./types/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
, NonResourcePolicyRule =
    ./types/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall
, PolicyRulesWithSubjects =
    ./types/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall
, PriorityLevelConfiguration =
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
, PriorityLevelConfigurationCondition =
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
, PriorityLevelConfigurationList =
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList.dhall
, PriorityLevelConfigurationReference =
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
, PriorityLevelConfigurationSpec =
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
, PriorityLevelConfigurationStatus =
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
, QueuingConfiguration =
    ./types/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
, ResourcePolicyRule =
    ./types/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall
, ServiceAccountSubject =
    ./types/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
, UserSubject =
    ./types/io.k8s.api.flowcontrol.v1.UserSubject.dhall
, HTTPIngressPath =
    ./types/io.k8s.api.networking.v1.HTTPIngressPath.dhall
, HTTPIngressRuleValue =
    ./types/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
, IPBlock =
    ./types/io.k8s.api.networking.v1.IPBlock.dhall
, Ingress =
    ./types/io.k8s.api.networking.v1.Ingress.dhall
, IngressBackend =
    ./types/io.k8s.api.networking.v1.IngressBackend.dhall
, IngressClass =
    ./types/io.k8s.api.networking.v1.IngressClass.dhall
, IngressClassList =
    ./types/io.k8s.api.networking.v1.IngressClassList.dhall
, IngressClassParametersReference =
    ./types/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
, IngressClassSpec =
    ./types/io.k8s.api.networking.v1.IngressClassSpec.dhall
, IngressList =
    ./types/io.k8s.api.networking.v1.IngressList.dhall
, IngressLoadBalancerIngress =
    ./types/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
, IngressLoadBalancerStatus =
    ./types/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
, IngressPortStatus =
    ./types/io.k8s.api.networking.v1.IngressPortStatus.dhall
, IngressRule =
    ./types/io.k8s.api.networking.v1.IngressRule.dhall
, IngressServiceBackend =
    ./types/io.k8s.api.networking.v1.IngressServiceBackend.dhall
, IngressSpec =
    ./types/io.k8s.api.networking.v1.IngressSpec.dhall
, IngressStatus =
    ./types/io.k8s.api.networking.v1.IngressStatus.dhall
, IngressTLS =
    ./types/io.k8s.api.networking.v1.IngressTLS.dhall
, NetworkPolicy =
    ./types/io.k8s.api.networking.v1.NetworkPolicy.dhall
, NetworkPolicyEgressRule =
    ./types/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall
, NetworkPolicyIngressRule =
    ./types/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall
, NetworkPolicyList =
    ./types/io.k8s.api.networking.v1.NetworkPolicyList.dhall
, NetworkPolicyPeer =
    ./types/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall
, NetworkPolicyPort =
    ./types/io.k8s.api.networking.v1.NetworkPolicyPort.dhall
, NetworkPolicySpec =
    ./types/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
, ServiceBackendPort =
    ./types/io.k8s.api.networking.v1.ServiceBackendPort.dhall
, IPAddress =
    ./types/io.k8s.api.networking.v1beta1.IPAddress.dhall
, IPAddressList =
    ./types/io.k8s.api.networking.v1beta1.IPAddressList.dhall
, IPAddressSpec =
    ./types/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
, ParentReference =
    ./types/io.k8s.api.networking.v1beta1.ParentReference.dhall
, ServiceCIDR =
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
, ServiceCIDRList =
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDRList.dhall
, ServiceCIDRSpec =
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
, ServiceCIDRStatus =
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
, Overhead =
    ./types/io.k8s.api.node.v1.Overhead.dhall
, RuntimeClass =
    ./types/io.k8s.api.node.v1.RuntimeClass.dhall
, RuntimeClassList =
    ./types/io.k8s.api.node.v1.RuntimeClassList.dhall
, Scheduling =
    ./types/io.k8s.api.node.v1.Scheduling.dhall
, Eviction =
    ./types/io.k8s.api.policy.v1.Eviction.dhall
, PodDisruptionBudget =
    ./types/io.k8s.api.policy.v1.PodDisruptionBudget.dhall
, PodDisruptionBudgetList =
    ./types/io.k8s.api.policy.v1.PodDisruptionBudgetList.dhall
, PodDisruptionBudgetSpec =
    ./types/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
, PodDisruptionBudgetStatus =
    ./types/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
, AggregationRule =
    ./types/io.k8s.api.rbac.v1.AggregationRule.dhall
, ClusterRole =
    ./types/io.k8s.api.rbac.v1.ClusterRole.dhall
, ClusterRoleBinding =
    ./types/io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
, ClusterRoleBindingList =
    ./types/io.k8s.api.rbac.v1.ClusterRoleBindingList.dhall
, ClusterRoleList =
    ./types/io.k8s.api.rbac.v1.ClusterRoleList.dhall
, PolicyRule =
    ./types/io.k8s.api.rbac.v1.PolicyRule.dhall
, Role =
    ./types/io.k8s.api.rbac.v1.Role.dhall
, RoleBinding =
    ./types/io.k8s.api.rbac.v1.RoleBinding.dhall
, RoleBindingList =
    ./types/io.k8s.api.rbac.v1.RoleBindingList.dhall
, RoleList =
    ./types/io.k8s.api.rbac.v1.RoleList.dhall
, RoleRef =
    ./types/io.k8s.api.rbac.v1.RoleRef.dhall
, Subject =
    ./types/io.k8s.api.rbac.v1.Subject.dhall
, AllocationResult =
    ./types/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
, BasicDevice =
    ./types/io.k8s.api.resource.v1alpha3.BasicDevice.dhall
, CELDeviceSelector =
    ./types/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall
, Device =
    ./types/io.k8s.api.resource.v1alpha3.Device.dhall
, DeviceAllocationConfiguration =
    ./types/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
, DeviceAllocationResult =
    ./types/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
, DeviceAttribute =
    ./types/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
, DeviceClaim =
    ./types/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
, DeviceClaimConfiguration =
    ./types/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
, DeviceClass =
    ./types/io.k8s.api.resource.v1alpha3.DeviceClass.dhall
, DeviceClassConfiguration =
    ./types/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
, DeviceClassList =
    ./types/io.k8s.api.resource.v1alpha3.DeviceClassList.dhall
, DeviceClassSpec =
    ./types/io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
, DeviceConstraint =
    ./types/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall
, DeviceRequest =
    ./types/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall
, DeviceRequestAllocationResult =
    ./types/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
, DeviceSelector =
    ./types/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall
, OpaqueDeviceConfiguration =
    ./types/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, PodSchedulingContext =
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
, PodSchedulingContextList =
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContextList.dhall
, PodSchedulingContextSpec =
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
, PodSchedulingContextStatus =
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
, ResourceClaimConsumerReference =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
, ResourceClaimList =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimList.dhall
, ResourceClaimSchedulingStatus =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
, ResourceClaimSpec =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
, ResourceClaimStatus =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
, ResourceClaimTemplate =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
, ResourceClaimTemplateList =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList.dhall
, ResourceClaimTemplateSpec =
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
, ResourcePool =
    ./types/io.k8s.api.resource.v1alpha3.ResourcePool.dhall
, ResourceSlice =
    ./types/io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
, ResourceSliceList =
    ./types/io.k8s.api.resource.v1alpha3.ResourceSliceList.dhall
, ResourceSliceSpec =
    ./types/io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
, PriorityClass =
    ./types/io.k8s.api.scheduling.v1.PriorityClass.dhall
, PriorityClassList =
    ./types/io.k8s.api.scheduling.v1.PriorityClassList.dhall
, CSIDriver =
    ./types/io.k8s.api.storage.v1.CSIDriver.dhall
, CSIDriverList =
    ./types/io.k8s.api.storage.v1.CSIDriverList.dhall
, CSIDriverSpec =
    ./types/io.k8s.api.storage.v1.CSIDriverSpec.dhall
, CSINode =
    ./types/io.k8s.api.storage.v1.CSINode.dhall
, CSINodeDriver =
    ./types/io.k8s.api.storage.v1.CSINodeDriver.dhall
, CSINodeList =
    ./types/io.k8s.api.storage.v1.CSINodeList.dhall
, CSINodeSpec =
    ./types/io.k8s.api.storage.v1.CSINodeSpec.dhall
, CSIStorageCapacity =
    ./types/io.k8s.api.storage.v1.CSIStorageCapacity.dhall
, CSIStorageCapacityList =
    ./types/io.k8s.api.storage.v1.CSIStorageCapacityList.dhall
, StorageClass =
    ./types/io.k8s.api.storage.v1.StorageClass.dhall
, StorageClassList =
    ./types/io.k8s.api.storage.v1.StorageClassList.dhall
, TokenRequest =
    ./types/io.k8s.api.storage.v1.TokenRequest.dhall
, VolumeAttachment =
    ./types/io.k8s.api.storage.v1.VolumeAttachment.dhall
, VolumeAttachmentList =
    ./types/io.k8s.api.storage.v1.VolumeAttachmentList.dhall
, VolumeAttachmentSource =
    ./types/io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
, VolumeAttachmentSpec =
    ./types/io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
, VolumeAttachmentStatus =
    ./types/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
, VolumeError =
    ./types/io.k8s.api.storage.v1.VolumeError.dhall
, VolumeNodeResources =
    ./types/io.k8s.api.storage.v1.VolumeNodeResources.dhall
, VolumeAttributesClass =
    ./types/io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
, VolumeAttributesClassList =
    ./types/io.k8s.api.storage.v1beta1.VolumeAttributesClassList.dhall
, GroupVersionResource =
    ./types/io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
, MigrationCondition =
    ./types/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
, StorageVersionMigration =
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
, StorageVersionMigrationList =
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList.dhall
, StorageVersionMigrationSpec =
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
, StorageVersionMigrationStatus =
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
, CustomResourceColumnDefinition =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
, CustomResourceConversion =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
, CustomResourceDefinition =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
, CustomResourceDefinitionCondition =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
, CustomResourceDefinitionList =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList.dhall
, CustomResourceDefinitionNames =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, CustomResourceDefinitionSpec =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
, CustomResourceDefinitionStatus =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
, CustomResourceDefinitionVersion =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
, CustomResourceSubresourceScale =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
, CustomResourceSubresourceStatus =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus.dhall
, CustomResourceSubresources =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
, CustomResourceValidation =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
, ExternalDocumentation =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
, JSON =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, JSONSchemaProps =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
, JSONSchemaPropsOrArray =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray.dhall
, JSONSchemaPropsOrBool =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool.dhall
, JSONSchemaPropsOrStringArray =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray.dhall
, SelectableField =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
, ValidationRule =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
, WebhookClientConfig =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
, WebhookConversion =
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
, Quantity =
    ./types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, APIGroup =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
, APIGroupList =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList.dhall
, APIResource =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
, APIResourceList =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList.dhall
, APIVersions =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions.dhall
, Condition =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall
, DeleteOptions =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
, FieldSelectorRequirement =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
, FieldsV1 =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1.dhall
, GroupVersionForDiscovery =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, LabelSelector =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, LabelSelectorRequirement =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
, ListMeta =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
, ManagedFieldsEntry =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
, MicroTime =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, ObjectMeta =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, OwnerReference =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
, Patch =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Patch.dhall
, Preconditions =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
, ServerAddressByClientCIDR =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
, Status =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Status.dhall
, StatusCause =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall
, StatusDetails =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
, Time =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, WatchEvent =
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent.dhall
, RawExtension =
    ./types/io.k8s.apimachinery.pkg.runtime.RawExtension.dhall
, IntOrString =
    ./types/io.k8s.apimachinery.pkg.util.intstr.IntOrString.dhall
, NatOrString =
    ./types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, Info =
    ./types/io.k8s.apimachinery.pkg.version.Info.dhall
, APIService =
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
, APIServiceCondition =
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
, APIServiceList =
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList.dhall
, APIServiceSpec =
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
, APIServiceStatus =
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
, ServiceReference =
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
}
{ containers : List ./io.k8s.api.core.v1.Container.dhall
, activeDeadlineSeconds : Optional Natural
, affinity : Optional ./io.k8s.api.core.v1.Affinity.dhall
, automountServiceAccountToken : Optional Bool
, dnsConfig : Optional ./io.k8s.api.core.v1.PodDNSConfig.dhall
, dnsPolicy : Optional Text
, enableServiceLinks : Optional Bool
, ephemeralContainers :
    Optional (List ./io.k8s.api.core.v1.EphemeralContainer.dhall)
, hostAliases : Optional (List ./io.k8s.api.core.v1.HostAlias.dhall)
, hostIPC : Optional Bool
, hostNetwork : Optional Bool
, hostPID : Optional Bool
, hostUsers : Optional Bool
, hostname : Optional Text
, imagePullSecrets :
    Optional (List ./io.k8s.api.core.v1.LocalObjectReference.dhall)
, initContainers : Optional (List ./io.k8s.api.core.v1.Container.dhall)
, nodeName : Optional Text
, nodeSelector : Optional (List { mapKey : Text, mapValue : Text })
, os : Optional ./io.k8s.api.core.v1.PodOS.dhall
, overhead :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, preemptionPolicy : Optional Text
, priority : Optional Integer
, priorityClassName : Optional Text
, readinessGates : Optional (List ./io.k8s.api.core.v1.PodReadinessGate.dhall)
, resourceClaims : Optional (List ./io.k8s.api.core.v1.PodResourceClaim.dhall)
, restartPolicy : Optional Text
, runtimeClassName : Optional Text
, schedulerName : Optional Text
, schedulingGates : Optional (List ./io.k8s.api.core.v1.PodSchedulingGate.dhall)
, securityContext : Optional ./io.k8s.api.core.v1.PodSecurityContext.dhall
, serviceAccount : Optional Text
, serviceAccountName : Optional Text
, setHostnameAsFQDN : Optional Bool
, shareProcessNamespace : Optional Bool
, subdomain : Optional Text
, terminationGracePeriodSeconds : Optional Natural
, tolerations : Optional (List ./io.k8s.api.core.v1.Toleration.dhall)
, topologySpreadConstraints :
    Optional (List ./io.k8s.api.core.v1.TopologySpreadConstraint.dhall)
, volumes : Optional (List ./io.k8s.api.core.v1.Volume.dhall)
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.ComponentStatus.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ names : Optional (List Text), sizeBytes : Optional Natural }
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ matchExpressions :
    Optional (List ./io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall)
}
{ port : Natural, protocol : Text, error : Optional Text }
{ count : Optional Natural
, lastObservedTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
}
{ specReplicasPath : Text
, statusReplicasPath : Text
, labelSelectorPath : Optional Text
}
{ type : Text
, default :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, defaultRequest :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, max :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, maxLimitRequestRatio :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, min :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ running : Optional ./io.k8s.api.core.v1.ContainerStateRunning.dhall
, terminated : Optional ./io.k8s.api.core.v1.ContainerStateTerminated.dhall
, waiting : Optional ./io.k8s.api.core.v1.ContainerStateWaiting.dhall
}
{ resource : ./io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
, continueToken : Optional Text
}
{ type : Text
, queuing : Optional ./io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration.dhall
}
{ path : Text, audience : Optional Text, expirationSeconds : Optional Natural }
{ devicePath : Text, name : Text }
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.ResourceQuota.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ nonResourceAttributes :
    Optional ./io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, resourceAttributes :
    Optional ./io.k8s.api.authorization.v1.ResourceAttributes.dhall
}
{ conditions :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, observedGeneration : Optional Natural
, typeChecking :
    Optional ./io.k8s.api.admissionregistration.v1.TypeChecking.dhall
}
{ volumeID : Text
, fsType : Optional Text
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
}
List { mapKey : Text, mapValue : Text }
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ rawSelector : Optional Text
, requirements :
    Optional
      ( List
          ./io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
      )
}
{ auditAnnotations :
    Optional (List ./io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall)
, failurePolicy : Optional Text
, matchConditions :
    Optional (List ./io.k8s.api.admissionregistration.v1.MatchCondition.dhall)
, matchConstraints :
    Optional ./io.k8s.api.admissionregistration.v1.MatchResources.dhall
, paramKind : Optional ./io.k8s.api.admissionregistration.v1.ParamKind.dhall
, validations :
    Optional (List ./io.k8s.api.admissionregistration.v1.Validation.dhall)
, variables :
    Optional (List ./io.k8s.api.admissionregistration.v1.Variable.dhall)
}
{ apiVersion : Text
, groups : List ./io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
, kind : Text
}
{ message : Text
, reason : Text
, status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, observedGeneration : Optional Natural
}
{ userInfo : Optional ./io.k8s.api.authentication.v1.UserInfo.dhall }
{ selector : ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, template : ./io.k8s.api.core.v1.PodTemplateSpec.dhall
, minReadySeconds : Optional Natural
, paused : Optional Bool
, progressDeadlineSeconds : Optional Natural
, replicas : Optional Natural
, revisionHistoryLimit : Optional Natural
, strategy : Optional ./io.k8s.api.apps.v1.DeploymentStrategy.dhall
}
{ replicas : Optional Natural }
{ scale :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
, status :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, aggregationRule : Optional ./io.k8s.api.rbac.v1.AggregationRule.dhall
, rules : Optional (List ./io.k8s.api.rbac.v1.PolicyRule.dhall)
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Endpoints.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ exec : Optional ./io.k8s.api.core.v1.ExecAction.dhall
, httpGet : Optional ./io.k8s.api.core.v1.HTTPGetAction.dhall
, sleep : Optional ./io.k8s.api.core.v1.SleepAction.dhall
, tcpSocket : Optional ./io.k8s.api.core.v1.TCPSocketAction.dhall
}
{ key : Text, name : Optional Text, optional : Optional Bool }
{ apiVersion : Text
, items :
    List ./io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ lendablePercent : Optional Natural
, nominalConcurrencyShares : Optional Natural
}
{ expirationTimestamp : ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, token : Text
}
{ message : Optional Text, reason : Optional Text }
{ items : Optional (List ./io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall) }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec.dhall
, status :
    Optional
      ./io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus.dhall
}
{ name : Optional Text
, namespace : Optional Text
, parameterNotFoundAction : Optional Text
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
List { mapKey : Text, mapValue : Text }
{ loadBalancer :
    Optional ./io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
}
{ active : Optional (List ./io.k8s.api.core.v1.ObjectReference.dhall)
, lastScheduleTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastSuccessfulTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ key : Text, name : Optional Text, optional : Optional Bool }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Pod.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
, status :
    Optional ./io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
}
{ lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
, status : Optional Text
, type : Optional Text
}
{ name : Optional Text, namespace : Optional Text, port : Optional Natural }
{ resource : Optional ./io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, service : Optional ./io.k8s.api.networking.v1.IngressServiceBackend.dhall
}
{ status : Text, targetVolumeAttributesClassName : Optional Text }
{ fieldRef : Text, warning : Text }
{ hard :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, scopeSelector : Optional ./io.k8s.api.core.v1.ScopeSelector.dhall
, scopes : Optional (List Text)
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, revision : Natural
, data : Optional ./io.k8s.apimachinery.pkg.runtime.RawExtension.dhall
}
{ port : Natural
, appProtocol : Optional Text
, name : Optional Text
, protocol : Optional Text
}
{ metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, apiVersion : Optional Text
, kind : Optional Text
, spec : Optional ./io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
, status : Optional ./io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
}
{ currentReplicas : Natural
, desiredReplicas : Natural
, currentCPUUtilizationPercentage : Optional Natural
, lastScaleTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, observedGeneration : Optional Natural
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, subsets : Optional (List ./io.k8s.api.core.v1.EndpointSubset.dhall)
}
{ current : ./io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, metric : ./io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
}
{ expression : Text, name : Text }
{ replicas : Natural
, availableReplicas : Optional Natural
, conditions :
    Optional (List ./io.k8s.api.core.v1.ReplicationControllerCondition.dhall)
, fullyLabeledReplicas : Optional Natural
, observedGeneration : Optional Natural
, readyReplicas : Optional Natural
}
{ auditAnnotations :
    Optional
      (List ./io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation.dhall)
, failurePolicy : Optional Text
, matchConditions :
    Optional
      (List ./io.k8s.api.admissionregistration.v1alpha1.MatchCondition.dhall)
, matchConstraints :
    Optional ./io.k8s.api.admissionregistration.v1alpha1.MatchResources.dhall
, paramKind :
    Optional ./io.k8s.api.admissionregistration.v1alpha1.ParamKind.dhall
, validations :
    Optional (List ./io.k8s.api.admissionregistration.v1alpha1.Validation.dhall)
, variables :
    Optional (List ./io.k8s.api.admissionregistration.v1alpha1.Variable.dhall)
}
{ apiVersion : Text
, items :
    List ./io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ linux : Optional ./io.k8s.api.core.v1.LinuxContainerUser.dhall }
{ matchExpressions :
    Optional (List ./io.k8s.api.core.v1.NodeSelectorRequirement.dhall)
, matchFields :
    Optional (List ./io.k8s.api.core.v1.NodeSelectorRequirement.dhall)
}
{ apiVersion : Text
, items : List ./io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.ServiceAccount.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ claimName : Text, readOnly : Optional Bool }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.ReplicationControllerSpec.dhall
, status : Optional ./io.k8s.api.core.v1.ReplicationControllerStatus.dhall
}
{ conditions :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, observedGeneration : Optional Natural
, typeChecking :
    Optional ./io.k8s.api.admissionregistration.v1beta1.TypeChecking.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, deleteOptions :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
}
{ addresses : List Text
, conditions : Optional ./io.k8s.api.discovery.v1.EndpointConditions.dhall
, deprecatedTopology : Optional (List { mapKey : Text, mapValue : Text })
, hints : Optional ./io.k8s.api.discovery.v1.EndpointHints.dhall
, hostname : Optional Text
, nodeName : Optional Text
, targetRef : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
, zone : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec.dhall
, status :
    Optional
      ./io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.apps.v1.Deployment.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, value : Integer
, description : Optional Text
, globalDefault : Optional Bool
, preemptionPolicy : Optional Text
}
{ apiVersion : Text, kind : Text }
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1.CSIDriver.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.coordination.v1.LeaseSpec.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.PodSpec.dhall
, status : Optional ./io.k8s.api.core.v1.PodStatus.dhall
}
{ effect : Text
, key : Text
, timeAdded : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, value : Optional Text
}
{ items : Optional (List ./io.k8s.api.core.v1.KeyToPath.dhall)
, name : Optional Text
, optional : Optional Bool
}
{ seconds : Natural }
{ apiVersion : Text
, items : List ./io.k8s.api.coordination.v1.Lease.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ selector : ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, serviceName : Text
, template : ./io.k8s.api.core.v1.PodTemplateSpec.dhall
, minReadySeconds : Optional Natural
, ordinals : Optional ./io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
, persistentVolumeClaimRetentionPolicy :
    Optional
      ./io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
, podManagementPolicy : Optional Text
, replicas : Optional Natural
, revisionHistoryLimit : Optional Natural
, updateStrategy : Optional ./io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
, volumeClaimTemplates :
    Optional (List ./io.k8s.api.core.v1.PersistentVolumeClaim.dhall)
}
{ maxReplicas : Natural
, scaleTargetRef : ./io.k8s.api.autoscaling.v1.CrossVersionObjectReference.dhall
, minReplicas : Optional Natural
, targetCPUUtilizationPercentage : Optional Natural
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
, status :
    Optional
      ./io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
}
{ key : Text, values : List Text }
{ path : Text
, labelSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, name : Optional Text
, optional : Optional Bool
, signerName : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec.dhall
, status :
    Optional ./io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ current : ./io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, describedObject :
    ./io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, metric : ./io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
}
{ path : Text
, fieldRef : Optional ./io.k8s.api.core.v1.ObjectFieldSelector.dhall
, mode : Optional Natural
, resourceFieldRef : Optional ./io.k8s.api.core.v1.ResourceFieldSelector.dhall
}
{ apiGroups : Optional (List Text)
, apiVersions : Optional (List Text)
, operations : Optional (List Text)
, resourceNames : Optional (List Text)
, resources : Optional (List Text)
, scope : Optional Text
}
{ matchAttribute : Optional Text, requests : Optional (List Text) }
{ controller : Optional Text
, devices : Optional ./io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
, nodeSelector : Optional ./io.k8s.api.core.v1.NodeSelector.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
, code : Optional Natural
, details : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
, message : Optional Text
, reason : Optional Text
, status : Optional Text
}
{ name : Text
, resources : Optional (List ./io.k8s.api.core.v1.ResourceHealth.dhall)
}
{ preferredDuringSchedulingIgnoredDuringExecution :
    Optional (List ./io.k8s.api.core.v1.PreferredSchedulingTerm.dhall)
, requiredDuringSchedulingIgnoredDuringExecution :
    Optional ./io.k8s.api.core.v1.NodeSelector.dhall
}
{ namespace : Optional Text }
{ endPort : Optional Natural
, port : Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, protocol : Optional Text
}
{ audiences : Optional (List Text)
, authenticated : Optional Bool
, error : Optional Text
, user : Optional ./io.k8s.api.authentication.v1.UserInfo.dhall
}
{ clusterTrustBundle :
    Optional ./io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
, configMap : Optional ./io.k8s.api.core.v1.ConfigMapProjection.dhall
, downwardAPI : Optional ./io.k8s.api.core.v1.DownwardAPIProjection.dhall
, secret : Optional ./io.k8s.api.core.v1.SecretProjection.dhall
, serviceAccountToken :
    Optional ./io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, template : Optional ./io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ incomplete : Bool
, nonResourceRules : List ./io.k8s.api.authorization.v1.NonResourceRule.dhall
, resourceRules : List ./io.k8s.api.authorization.v1.ResourceRule.dhall
, evaluationError : Optional Text
}
{ iqn : Text
, lun : Natural
, targetPortal : Text
, chapAuthDiscovery : Optional Bool
, chapAuthSession : Optional Bool
, fsType : Optional Text
, initiatorName : Optional Text
, iscsiInterface : Optional Text
, portals : Optional (List Text)
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
}
{ add : Optional (List Text), drop : Optional (List Text) }
{ features : Optional ./io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
, name : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, automountServiceAccountToken : Optional Bool
, imagePullSecrets :
    Optional (List ./io.k8s.api.core.v1.LocalObjectReference.dhall)
, secrets : Optional (List ./io.k8s.api.core.v1.ObjectReference.dhall)
}
{ template : ./io.k8s.api.core.v1.PodTemplateSpec.dhall
, activeDeadlineSeconds : Optional Natural
, backoffLimit : Optional Natural
, backoffLimitPerIndex : Optional Natural
, completionMode : Optional Text
, completions : Optional Natural
, managedBy : Optional Text
, manualSelector : Optional Bool
, maxFailedIndexes : Optional Natural
, parallelism : Optional Natural
, podFailurePolicy : Optional ./io.k8s.api.batch.v1.PodFailurePolicy.dhall
, podReplacementPolicy : Optional Text
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, successPolicy : Optional ./io.k8s.api.batch.v1.SuccessPolicy.dhall
, suspend : Optional Bool
, ttlSecondsAfterFinished : Optional Natural
}
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ expressionWarnings :
    Optional
      (List ./io.k8s.api.admissionregistration.v1beta1.ExpressionWarning.dhall)
}
{ opaque :
    Optional ./io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, requests : Optional (List Text)
}
{ volumeClaimTemplate :
    Optional ./io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
}
{ rollingUpdate :
    Optional ./io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
, type : Optional Text
}
{ apiVersion : Text
, kind : Text
, fieldPath : Optional Text
, name : Optional Text
, namespace : Optional Text
, resourceVersion : Optional Text
, uid : Optional Text
}
{ attachRequired : Optional Bool
, fsGroupPolicy : Optional Text
, podInfoOnMount : Optional Bool
, requiresRepublish : Optional Bool
, seLinuxMount : Optional Bool
, storageCapacity : Optional Bool
, tokenRequests : Optional (List ./io.k8s.api.storage.v1.TokenRequest.dhall)
, volumeLifecycleModes : Optional (List Text)
}
{ name : Optional Text, value : Optional Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.storage.v1.CSIDriverSpec.dhall
}
{ podFixed :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ container : Text
, name : Text
, target : ./io.k8s.api.autoscaling.v2.MetricTarget.dhall
}
{ object : ./io.k8s.apimachinery.pkg.runtime.RawExtension.dhall, type : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.authentication.v1.TokenRequestSpec.dhall
, status : Optional ./io.k8s.api.authentication.v1.TokenRequestStatus.dhall
}
{ desiredReplicas : Natural
, conditions :
    Optional
      (List ./io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall)
, currentMetrics :
    Optional (List ./io.k8s.api.autoscaling.v2.MetricStatus.dhall)
, currentReplicas : Optional Natural
, lastScaleTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, observedGeneration : Optional Natural
}
{ apiVersion : Text
, items : List ./io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ kind : Text
, name : Text
, apiGroup : Optional Text
, namespace : Optional Text
, scope : Optional Text
}
{ gateway : Text
, secretRef : ./io.k8s.api.core.v1.LocalObjectReference.dhall
, system : Text
, fsType : Optional Text
, protectionDomain : Optional Text
, readOnly : Optional Bool
, sslEnabled : Optional Bool
, storageMode : Optional Text
, storagePool : Optional Text
, volumeName : Optional Text
}
{ succeededCount : Optional Natural, succeededIndexes : Optional Text }
{ apiVersion : Text
, items : List ./io.k8s.api.apps.v1.StatefulSet.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ key : Text, valueExpression : Text }
{ acquireTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, holderIdentity : Optional Text
, leaseDurationSeconds : Optional Natural
, leaseTransitions : Optional Natural
, preferredHolder : Optional Text
, renewTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, strategy : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
}
{ volumeID : Text, fsType : Optional Text, readOnly : Optional Bool }
{ configMap : Optional ./io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall }
{ rollingUpdate : Optional ./io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
, type : Optional Text
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ audience : Text, expirationSeconds : Optional Natural }
{ conditions :
    Optional
      ( List
          ./io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition.dhall
      )
}
{ apiVersion : Text
, items : List ./io.k8s.api.batch.v1.Job.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ port : Natural, service : Optional Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
, status : Optional ./io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, webhooks :
    Optional (List ./io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall)
}
{ name : Text, namespace : Text }
{ name : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.apps.v1.DaemonSetSpec.dhall
, status : Optional ./io.k8s.api.apps.v1.DaemonSetStatus.dhall
}
{ name : Text }
{ preference : ./io.k8s.api.core.v1.NodeSelectorTerm.dhall, weight : Natural }
{ group : Text
, names :
    ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, scope : Text
, versions :
    List
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
, conversion :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
, preserveUnknownFields : Optional Bool
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.apps.v1.DeploymentSpec.dhall
, status : Optional ./io.k8s.api.apps.v1.DeploymentStatus.dhall
}
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ fsType : Optional Text
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
, volumeName : Optional Text
, volumeNamespace : Optional Text
}
{ apiVersion : Text
, handler : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, overhead : Optional ./io.k8s.api.node.v1.Overhead.dhall
, scheduling : Optional ./io.k8s.api.node.v1.Scheduling.dhall
}
{ status : Text
, type : Text
, lastProbeTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ name : Text }
{ ip : Text, hostnames : Optional (List Text) }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, provisioner : Text
, allowVolumeExpansion : Optional Bool
, allowedTopologies :
    Optional (List ./io.k8s.api.core.v1.TopologySelectorTerm.dhall)
, mountOptions : Optional (List Text)
, parameters : Optional (List { mapKey : Text, mapValue : Text })
, reclaimPolicy : Optional Text
, volumeBindingMode : Optional Text
}
{ driver : Text
, pool : ./io.k8s.api.resource.v1alpha3.ResourcePool.dhall
, allNodes : Optional Bool
, devices : Optional (List ./io.k8s.api.resource.v1alpha3.Device.dhall)
, nodeName : Optional Text
, nodeSelector : Optional ./io.k8s.api.core.v1.NodeSelector.dhall
}
{ expression : Text
, message : Optional Text
, messageExpression : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.networking.v1.NetworkPolicySpec.dhall
}
{ generation : Natural, name : Text, resourceSliceCount : Natural }
{ fieldPath : Text, apiVersion : Optional Text }
{ name : Text }
{ driver : Text
, fsType : Optional Text
, nodePublishSecretRef :
    Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
, readOnly : Optional Bool
, volumeAttributes : Optional (List { mapKey : Text, mapValue : Text })
}
{ name : Text, resource : Text, uid : Text, apiGroup : Optional Text }
{ preferredDuringSchedulingIgnoredDuringExecution :
    Optional (List ./io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall)
, requiredDuringSchedulingIgnoredDuringExecution :
    Optional (List ./io.k8s.api.core.v1.PodAffinityTerm.dhall)
}
{ ip : Text
, hostname : Optional Text
, nodeName : Optional Text
, targetRef : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
}
{ name : Text, value : Text }
{ apiVersion : Text
, items :
    List ./io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.storage.v1.CSINodeSpec.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.ConfigMap.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ type : Text
, exempt :
    Optional ./io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
, limited :
    Optional ./io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
}
{ defaultMode : Optional Natural
, items : Optional (List ./io.k8s.api.core.v1.KeyToPath.dhall)
, optional : Optional Bool
, secretName : Optional Text
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1.CSIStorageCapacity.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ current : ./io.k8s.api.autoscaling.v2.MetricValueStatus.dhall, name : Text }
{ name : Text, unsuitableNodes : Optional (List Text) }
{ name : Text }
{ groupVersion : Text, version : Text }
{ apiVersion : Text
, items : List ./io.k8s.api.apps.v1.ControllerRevision.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ expressionWarnings :
    Optional
      (List ./io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning.dhall)
}
{ apiVersion : Text
, items : List ./io.k8s.api.batch.v1.CronJob.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.flowcontrol.v1.FlowSchema.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiGroups : Optional (List Text)
, apiVersions : Optional (List Text)
, operations : Optional (List Text)
, resourceNames : Optional (List Text)
, resources : Optional (List Text)
, scope : Optional Text
}
{ matchLabelExpressions :
    Optional (List ./io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall)
}
{ matchResources :
    Optional ./io.k8s.api.admissionregistration.v1alpha1.MatchResources.dhall
, paramRef : Optional ./io.k8s.api.admissionregistration.v1alpha1.ParamRef.dhall
, policyName : Optional Text
, validationActions : Optional (List Text)
}
{ apiVersion : Text
, items :
    List
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ userInfo : Optional ./io.k8s.api.authentication.v1.UserInfo.dhall }
{ apiVersion : Text
, groupVersion : Text
, kind : Text
, resources : List ./io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.networking.v1.IngressSpec.dhall
, status : Optional ./io.k8s.api.networking.v1.IngressStatus.dhall
}
{ kind : Text
, name : Text
, apiGroup : Optional Text
, namespace : Optional Text
}
{ topologyKey : Text
, labelSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, matchLabelKeys : Optional (List Text)
, mismatchLabelKeys : Optional (List Text)
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, namespaces : Optional (List Text)
}
{ nameservers : Optional (List Text)
, options : Optional (List ./io.k8s.api.core.v1.PodDNSConfigOption.dhall)
, searches : Optional (List Text)
}
{ gmsaCredentialSpec : Optional Text
, gmsaCredentialSpecName : Optional Text
, hostProcess : Optional Bool
, runAsUserName : Optional Text
}
Text
{ excludeResourceRules :
    Optional
      (List ./io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall)
, matchPolicy : Optional Text
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, resourceRules :
    Optional
      (List ./io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall)
}
{ lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
, status : Optional Text
, type : Optional Text
}
List { mapKey : Text, mapValue : Text }
{ allowPrivilegeEscalation : Optional Bool
, appArmorProfile : Optional ./io.k8s.api.core.v1.AppArmorProfile.dhall
, capabilities : Optional ./io.k8s.api.core.v1.Capabilities.dhall
, privileged : Optional Bool
, procMount : Optional Text
, readOnlyRootFilesystem : Optional Bool
, runAsGroup : Optional Natural
, runAsNonRoot : Optional Bool
, runAsUser : Optional Natural
, seLinuxOptions : Optional ./io.k8s.api.core.v1.SELinuxOptions.dhall
, seccompProfile : Optional ./io.k8s.api.core.v1.SeccompProfile.dhall
, windowsOptions :
    Optional ./io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ key : Text, operator : Text, values : Optional (List Text) }
{ conditions :
    Optional
      ( List
          ./io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
      )
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ registry : Text
, volume : Text
, group : Optional Text
, readOnly : Optional Bool
, tenant : Optional Text
, user : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ port : Natural, protocol : Text, error : Optional Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
, status :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
}
{ buildDate : Text
, compiler : Text
, gitCommit : Text
, gitTreeState : Text
, gitVersion : Text
, goVersion : Text
, major : Text
, minor : Text
, platform : Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.ResourceQuotaSpec.dhall
, status : Optional ./io.k8s.api.core.v1.ResourceQuotaStatus.dhall
}
{ groupPriorityMinimum : Natural
, versionPriority : Natural
, caBundle : Optional Text
, group : Optional Text
, insecureSkipTLSVerify : Optional Bool
, service :
    Optional
      ./io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
, version : Optional Text
}
{ path : Optional Text, verb : Optional Text }
{ containerPort : Natural
, hostIP : Optional Text
, hostPort : Optional Natural
, name : Optional Text
, protocol : Optional Text
}
List { mapKey : Text, mapValue : Text }
{ ingress :
    Optional (List ./io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall)
}
{ command : Optional (List Text) }
{ priorityLevelConfiguration :
    ./io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
, distinguisherMethod :
    Optional ./io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
, matchingPrecedence : Optional Natural
, rules :
    Optional (List ./io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall)
}
{ jobTemplate : ./io.k8s.api.batch.v1.JobTemplateSpec.dhall
, schedule : Text
, concurrencyPolicy : Optional Text
, failedJobsHistoryLimit : Optional Natural
, startingDeadlineSeconds : Optional Natural
, successfulJobsHistoryLimit : Optional Natural
, suspend : Optional Bool
, timeZone : Optional Text
}
{ expression : Text, name : Text }
{ maxReplicas : Natural
, scaleTargetRef : ./io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, behavior :
    Optional ./io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
, metrics : Optional (List ./io.k8s.api.autoscaling.v2.MetricSpec.dhall)
, minReplicas : Optional Natural
}
{ conditions :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, loadBalancer : Optional ./io.k8s.api.core.v1.LoadBalancerStatus.dhall
}
{ name : Optional Text
, namespace : Optional Text
, parameterNotFoundAction : Optional Text
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ ip : Text }
{ apiGroups : Optional (List Text)
, apiVersions : Optional (List Text)
, operations : Optional (List Text)
, resources : Optional (List Text)
, scope : Optional Text
}
{ name : Optional Text, optional : Optional Bool }
{ driver : Text
, volumeHandle : Text
, controllerExpandSecretRef :
    Optional ./io.k8s.api.core.v1.SecretReference.dhall
, controllerPublishSecretRef :
    Optional ./io.k8s.api.core.v1.SecretReference.dhall
, fsType : Optional Text
, nodeExpandSecretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
, nodePublishSecretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
, nodeStageSecretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
, readOnly : Optional Bool
, volumeAttributes : Optional (List { mapKey : Text, mapValue : Text })
}
{ apiVersion : Text
, items : List ./io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ continue : Optional Text
, remainingItemCount : Optional Natural
, resourceVersion : Optional Text
, selfLink : Optional Text
}
{ current : ./io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, metric : ./io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
}
{ ip : Text }
{ component : Optional Text, host : Optional Text }
{ apiVersion : Text
, eventTime : ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, action : Optional Text
, deprecatedCount : Optional Natural
, deprecatedFirstTimestamp :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, deprecatedLastTimestamp :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, deprecatedSource : Optional ./io.k8s.api.core.v1.EventSource.dhall
, note : Optional Text
, reason : Optional Text
, regarding : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
, related : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
, reportingController : Optional Text
, reportingInstance : Optional Text
, series : Optional ./io.k8s.api.events.v1.EventSeries.dhall
, type : Optional Text
}
{ effect : Optional Text
, key : Optional Text
, operator : Optional Text
, tolerationSeconds : Optional Natural
, value : Optional Text
}
{ port : Natural
, appProtocol : Optional Text
, name : Optional Text
, nodePort : Optional Natural
, protocol : Optional Text
, targetPort : Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
}
{ openAPIV3Schema :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
}
{ jsonPath : Text }
{ gateway : Text
, secretRef : ./io.k8s.api.core.v1.SecretReference.dhall
, system : Text
, fsType : Optional Text
, protectionDomain : Optional Text
, readOnly : Optional Bool
, sslEnabled : Optional Bool
, storageMode : Optional Text
, storagePool : Optional Text
, volumeName : Optional Text
}
{ handSize : Optional Natural
, queueLengthLimit : Optional Natural
, queues : Optional Natural
}
{ type : Text
, averageUtilization : Optional Natural
, averageValue : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, value : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{ currentHealthy : Natural
, desiredHealthy : Natural
, disruptionsAllowed : Natural
, expectedPods : Natural
, conditions :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, disruptedPods :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
          }
      )
, observedGeneration : Optional Natural
}
{ name : Text
, basic : Optional ./io.k8s.api.resource.v1alpha3.BasicDevice.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1.VolumeAttachment.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, status :
    Optional ./io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Namespace.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ expression : Text, name : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, status : Optional ./io.k8s.api.core.v1.PersistentVolumeStatus.dhall
}
{ controller : Optional Text
, parameters :
    Optional ./io.k8s.api.networking.v1.IngressClassParametersReference.dhall
}
{ name : Text, value : Text }
{ audiences : Optional (List Text), token : Optional Text }
{ kubeletEndpoint : Optional ./io.k8s.api.core.v1.DaemonEndpoint.dhall }
{ kind : Text
, group : Optional ./io.k8s.api.flowcontrol.v1beta3.GroupSubject.dhall
, serviceAccount :
    Optional ./io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject.dhall
, user : Optional ./io.k8s.api.flowcontrol.v1beta3.UserSubject.dhall
}
{ from : Optional (List ./io.k8s.api.networking.v1.NetworkPolicyPeer.dhall)
, ports : Optional (List ./io.k8s.api.networking.v1.NetworkPolicyPort.dhall)
}
{ volumeID : Text
, fsType : Optional Text
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ causes :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall)
, group : Optional Text
, kind : Optional Text
, name : Optional Text
, retryAfterSeconds : Optional Natural
, uid : Optional Text
}
{ addressType : Text
, apiVersion : Text
, endpoints : List ./io.k8s.api.discovery.v1.Endpoint.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, ports : Optional (List ./io.k8s.api.discovery.v1.EndpointPort.dhall)
}
{ path : Text, type : Optional Text }
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.PersistentVolumeClaim.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ status : Text, type : Text }
{ deviceClassName : Text
, name : Text
, adminAccess : Optional Bool
, allocationMode : Optional Text
, count : Optional Natural
, selectors :
    Optional (List ./io.k8s.api.resource.v1alpha3.DeviceSelector.dhall)
}
{ name : Text
, args : Optional (List Text)
, command : Optional (List Text)
, env : Optional (List ./io.k8s.api.core.v1.EnvVar.dhall)
, envFrom : Optional (List ./io.k8s.api.core.v1.EnvFromSource.dhall)
, image : Optional Text
, imagePullPolicy : Optional Text
, lifecycle : Optional ./io.k8s.api.core.v1.Lifecycle.dhall
, livenessProbe : Optional ./io.k8s.api.core.v1.Probe.dhall
, ports : Optional (List ./io.k8s.api.core.v1.ContainerPort.dhall)
, readinessProbe : Optional ./io.k8s.api.core.v1.Probe.dhall
, resizePolicy :
    Optional (List ./io.k8s.api.core.v1.ContainerResizePolicy.dhall)
, resources : Optional ./io.k8s.api.core.v1.ResourceRequirements.dhall
, restartPolicy : Optional Text
, securityContext : Optional ./io.k8s.api.core.v1.SecurityContext.dhall
, startupProbe : Optional ./io.k8s.api.core.v1.Probe.dhall
, stdin : Optional Bool
, stdinOnce : Optional Bool
, terminationMessagePath : Optional Text
, terminationMessagePolicy : Optional Text
, tty : Optional Bool
, volumeDevices : Optional (List ./io.k8s.api.core.v1.VolumeDevice.dhall)
, volumeMounts : Optional (List ./io.k8s.api.core.v1.VolumeMount.dhall)
, workingDir : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
}
{ apiVersion : Text, kind : Text, name : Optional Text, uid : Optional Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.apps.v1.ReplicaSetSpec.dhall
, status : Optional ./io.k8s.api.apps.v1.ReplicaSetStatus.dhall
}
{ name : Text }
{ hosts : Optional (List Text), secretName : Optional Text }
{ currentNumberScheduled : Natural
, desiredNumberScheduled : Natural
, numberMisscheduled : Natural
, numberReady : Natural
, collisionCount : Optional Natural
, conditions : Optional (List ./io.k8s.api.apps.v1.DaemonSetCondition.dhall)
, numberAvailable : Optional Natural
, numberUnavailable : Optional Natural
, observedGeneration : Optional Natural
, updatedNumberScheduled : Optional Natural
}
{ name : Text }
{ apiGroups : Optional (List Text)
, apiVersions : Optional (List Text)
, operations : Optional (List Text)
, resourceNames : Optional (List Text)
, resources : Optional (List Text)
, scope : Optional Text
}
{ acceptedNames :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, conditions :
    Optional
      ( List
          ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
      )
, storedVersions : Optional (List Text)
}
{ appArmorProfile : Optional ./io.k8s.api.core.v1.AppArmorProfile.dhall
, fsGroup : Optional Natural
, fsGroupChangePolicy : Optional Text
, runAsGroup : Optional Natural
, runAsNonRoot : Optional Bool
, runAsUser : Optional Natural
, seLinuxOptions : Optional ./io.k8s.api.core.v1.SELinuxOptions.dhall
, seccompProfile : Optional ./io.k8s.api.core.v1.SeccompProfile.dhall
, supplementalGroups : Optional (List Natural)
, supplementalGroupsPolicy : Optional Text
, sysctls : Optional (List ./io.k8s.api.core.v1.Sysctl.dhall)
, windowsOptions :
    Optional ./io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
}
{ kubeletConfigKey : Text
, name : Text
, namespace : Text
, resourceVersion : Optional Text
, uid : Optional Text
}
{ trustBundle : Text, signerName : Optional Text }
{ defaultMode : Optional Natural
, items : Optional (List ./io.k8s.api.core.v1.KeyToPath.dhall)
, name : Optional Text
, optional : Optional Bool
}
{ apiVersion : Text
, items : List ./io.k8s.api.networking.v1.IngressClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ policies : Optional (List ./io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall)
, selectPolicy : Optional Text
, stabilizationWindowSeconds : Optional Natural
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
, status :
    Optional ./io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ inlineVolumeSpec : Optional ./io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, persistentVolumeName : Optional Text
}
{ attacher : Text
, nodeName : Text
, source : ./io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
}
{ finalizers : Optional (List Text) }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec.dhall
, status :
    Optional
      ./io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, roleRef : ./io.k8s.api.rbac.v1.RoleRef.dhall
, subjects : Optional (List ./io.k8s.api.rbac.v1.Subject.dhall)
}
{ extra : Optional (List { mapKey : Text, mapValue : List Text })
, groups : Optional (List Text)
, uid : Optional Text
, username : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, data : Optional (List { mapKey : Text, mapValue : Text })
, immutable : Optional Bool
, stringData : Optional (List { mapKey : Text, mapValue : Text })
, type : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional ./io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
, status :
    Optional ./io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.networking.v1.IngressClassSpec.dhall
}
{ resourceVersion : Optional Text, uid : Optional Text }
{ nonResourceURLs : List Text, verbs : List Text }
{ monitors : List Text
, path : Optional Text
, readOnly : Optional Bool
, secretFile : Optional Text
, secretRef : Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
, user : Optional Text
}
{ paths : List ./io.k8s.api.networking.v1.HTTPIngressPath.dhall }
{ expressionWarnings :
    Optional
      (List ./io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall)
}
{ type : Text }
{ endpoints : Text, path : Text, readOnly : Optional Bool }
{ `$ref` : Optional Text
, `$schema` : Optional Text
, default :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, description : Optional Text
, enum :
    Optional
      ( List
          ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
      )
, example :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, exclusiveMaximum : Optional Bool
, exclusiveMinimum : Optional Bool
, externalDocs :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
, format : Optional Text
, id : Optional Text
, maxItems : Optional Natural
, maxLength : Optional Natural
, maxProperties : Optional Natural
, maximum : Optional Double
, minItems : Optional Natural
, minLength : Optional Natural
, minProperties : Optional Natural
, minimum : Optional Double
, multipleOf : Optional Double
, nullable : Optional Bool
, pattern : Optional Text
, required : Optional (List Text)
, title : Optional Text
, type : Optional Text
, uniqueItems : Optional Bool
, x-kubernetes-embedded-resource : Optional Bool
, x-kubernetes-int-or-string : Optional Bool
, x-kubernetes-list-map-keys : Optional (List Text)
, x-kubernetes-list-type : Optional Text
, x-kubernetes-map-type : Optional Text
, x-kubernetes-preserve-unknown-fields : Optional Bool
, x-kubernetes-validations :
    Optional
      ( List
          ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
      )
}
{ image : Text
, imageID : Text
, name : Text
, ready : Bool
, restartCount : Natural
, allocatedResources :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, allocatedResourcesStatus :
    Optional (List ./io.k8s.api.core.v1.ResourceStatus.dhall)
, containerID : Optional Text
, lastState : Optional ./io.k8s.api.core.v1.ContainerState.dhall
, resources : Optional ./io.k8s.api.core.v1.ResourceRequirements.dhall
, started : Optional Bool
, state : Optional ./io.k8s.api.core.v1.ContainerState.dhall
, user : Optional ./io.k8s.api.core.v1.ContainerUser.dhall
, volumeMounts : Optional (List ./io.k8s.api.core.v1.VolumeMountStatus.dhall)
}
{ matchExpressions :
    Optional
      ( List
          ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
      )
, matchLabels : Optional (List { mapKey : Text, mapValue : Text })
}
{ nodeSelectorTerms : List ./io.k8s.api.core.v1.NodeSelectorTerm.dhall }
{ verbs : List Text
, apiGroups : Optional (List Text)
, resourceNames : Optional (List Text)
, resources : Optional (List Text)
}
{ whenDeleted : Optional Text, whenScaled : Optional Text }
{ image : Text
, monitors : List Text
, fsType : Optional Text
, keyring : Optional Text
, pool : Optional Text
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
, user : Optional Text
}
{ pullPolicy : Optional Text, reference : Optional Text }
{ type : Text }
{ accessModes : Optional (List Text)
, dataSource : Optional ./io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, dataSourceRef : Optional ./io.k8s.api.core.v1.TypedObjectReference.dhall
, resources : Optional ./io.k8s.api.core.v1.VolumeResourceRequirements.dhall
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, storageClassName : Optional Text
, volumeAttributesClassName : Optional Text
, volumeMode : Optional Text
, volumeName : Optional Text
}
{ apiVersion : Text, kind : Text, name : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
, status :
    Optional ./io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ path : Text, fsType : Optional Text }
< Nat : Natural | String : Text >
{ replicas : Natural, selector : Optional Text }
{ operator : Text, values : List Natural, containerName : Optional Text }
{ availableReplicas : Optional Natural
, collisionCount : Optional Natural
, conditions : Optional (List ./io.k8s.api.apps.v1.DeploymentCondition.dhall)
, observedGeneration : Optional Natural
, readyReplicas : Optional Natural
, replicas : Optional Natural
, unavailableReplicas : Optional Natural
, updatedReplicas : Optional Natural
}
{ verbs : List Text
, apiGroups : Optional (List Text)
, nonResourceURLs : Optional (List Text)
, resourceNames : Optional (List Text)
, resources : Optional (List Text)
}
{ postStart : Optional ./io.k8s.api.core.v1.LifecycleHandler.dhall
, preStop : Optional ./io.k8s.api.core.v1.LifecycleHandler.dhall
}
{ annotations : Optional (List { mapKey : Text, mapValue : Text })
, creationTimestamp : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, deletionGracePeriodSeconds : Optional Natural
, deletionTimestamp : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, finalizers : Optional (List Text)
, generateName : Optional Text
, generation : Optional Natural
, labels : Optional (List { mapKey : Text, mapValue : Text })
, managedFields :
    Optional
      (List ./io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall)
, name : Optional Text
, namespace : Optional Text
, ownerReferences :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall)
, resourceVersion : Optional Text
, selfLink : Optional Text
, uid : Optional Text
}
{ podSelector : ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, egress :
    Optional (List ./io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall)
, ingress :
    Optional (List ./io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall)
, policyTypes : Optional (List Text)
}
{ apiVersion : Text
, driverName : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, parameters : Optional (List { mapKey : Text, mapValue : Text })
}
{ status : Text, type : Text, error : Optional Text, message : Optional Text }
{ key : Text, path : Text, mode : Optional Natural }
{ auditAnnotations :
    Optional
      (List ./io.k8s.api.admissionregistration.v1beta1.AuditAnnotation.dhall)
, failurePolicy : Optional Text
, matchConditions :
    Optional
      (List ./io.k8s.api.admissionregistration.v1beta1.MatchCondition.dhall)
, matchConstraints :
    Optional ./io.k8s.api.admissionregistration.v1beta1.MatchResources.dhall
, paramKind :
    Optional ./io.k8s.api.admissionregistration.v1beta1.ParamKind.dhall
, validations :
    Optional (List ./io.k8s.api.admissionregistration.v1beta1.Validation.dhall)
, variables :
    Optional (List ./io.k8s.api.admissionregistration.v1beta1.Variable.dhall)
}
{ diskName : Text
, diskURI : Text
, kind : Text
, cachingMode : Optional Text
, fsType : Optional Text
, readOnly : Optional Bool
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.PodTemplate.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ matchResources :
    Optional ./io.k8s.api.admissionregistration.v1beta1.MatchResources.dhall
, paramRef : Optional ./io.k8s.api.admissionregistration.v1beta1.ParamRef.dhall
, policyName : Optional Text
, validationActions : Optional (List Text)
}
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1.CSINode.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ config :
    Optional
      (List ./io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall)
, constraints :
    Optional (List ./io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall)
, requests : Optional (List ./io.k8s.api.resource.v1alpha3.DeviceRequest.dhall)
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, status : Optional ./io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
}
{ apiServerID : Optional Text
, decodableVersions : Optional (List Text)
, encodingVersion : Optional Text
, servedVersions : Optional (List Text)
}
{ name : Optional Text
, namespace : Optional Text
, parameterNotFoundAction : Optional Text
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ scaleDown : Optional ./io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
, scaleUp : Optional ./io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
}
{ iqn : Text
, lun : Natural
, targetPortal : Text
, chapAuthDiscovery : Optional Bool
, chapAuthSession : Optional Bool
, fsType : Optional Text
, initiatorName : Optional Text
, iscsiInterface : Optional Text
, portals : Optional (List Text)
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ medium : Optional Text
, sizeLimit : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{ nodeAffinity : Optional ./io.k8s.api.core.v1.NodeAffinity.dhall
, podAffinity : Optional ./io.k8s.api.core.v1.PodAffinity.dhall
, podAntiAffinity : Optional ./io.k8s.api.core.v1.PodAntiAffinity.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec.dhall
, status : Optional ./io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus.dhall
}
{ caBundle : Optional Text
, service :
    Optional ./io.k8s.api.admissionregistration.v1.ServiceReference.dhall
, url : Optional Text
}
{ controller : Optional Text
, devices : Optional ./io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
}
{ verbs : List Text, nonResourceURLs : Optional (List Text) }
{ level : Optional Text
, role : Optional Text
, type : Optional Text
, user : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
, status :
    Optional
      ./io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
}
{ name : Text, target : ./io.k8s.api.autoscaling.v2.MetricTarget.dhall }
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ limits :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, requests :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ commonEncodingVersion : Optional Text
, conditions :
    Optional
      ( List
          ./io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
      )
, storageVersions :
    Optional
      (List ./io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall)
}
{ excludeResourceRules :
    Optional
      ( List
          ./io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations.dhall
      )
, matchPolicy : Optional Text
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, resourceRules :
    Optional
      ( List
          ./io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations.dhall
      )
}
{ maxSurge : Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, maxUnavailable :
    Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Event.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1.StorageClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ bool : Optional Bool
, int : Optional Natural
, string : Optional Text
, version : Optional Text
}
{ conditions : Optional (List ./io.k8s.api.core.v1.NamespaceCondition.dhall)
, phase : Optional Text
}
{ conditions : Optional (List ./io.k8s.api.core.v1.PodCondition.dhall)
, containerStatuses : Optional (List ./io.k8s.api.core.v1.ContainerStatus.dhall)
, ephemeralContainerStatuses :
    Optional (List ./io.k8s.api.core.v1.ContainerStatus.dhall)
, hostIP : Optional Text
, hostIPs : Optional (List ./io.k8s.api.core.v1.HostIP.dhall)
, initContainerStatuses :
    Optional (List ./io.k8s.api.core.v1.ContainerStatus.dhall)
, message : Optional Text
, nominatedNodeName : Optional Text
, phase : Optional Text
, podIP : Optional Text
, podIPs : Optional (List ./io.k8s.api.core.v1.PodIP.dhall)
, qosClass : Optional Text
, reason : Optional Text
, resize : Optional Text
, resourceClaimStatuses :
    Optional (List ./io.k8s.api.core.v1.PodResourceClaimStatus.dhall)
, startTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ status : Text
, type : Text
, lastProbeTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ field : Optional Text, message : Optional Text, reason : Optional Text }
{ name : Text
, args : Optional (List Text)
, command : Optional (List Text)
, env : Optional (List ./io.k8s.api.core.v1.EnvVar.dhall)
, envFrom : Optional (List ./io.k8s.api.core.v1.EnvFromSource.dhall)
, image : Optional Text
, imagePullPolicy : Optional Text
, lifecycle : Optional ./io.k8s.api.core.v1.Lifecycle.dhall
, livenessProbe : Optional ./io.k8s.api.core.v1.Probe.dhall
, ports : Optional (List ./io.k8s.api.core.v1.ContainerPort.dhall)
, readinessProbe : Optional ./io.k8s.api.core.v1.Probe.dhall
, resizePolicy :
    Optional (List ./io.k8s.api.core.v1.ContainerResizePolicy.dhall)
, resources : Optional ./io.k8s.api.core.v1.ResourceRequirements.dhall
, restartPolicy : Optional Text
, securityContext : Optional ./io.k8s.api.core.v1.SecurityContext.dhall
, startupProbe : Optional ./io.k8s.api.core.v1.Probe.dhall
, stdin : Optional Bool
, stdinOnce : Optional Bool
, targetContainerName : Optional Text
, terminationMessagePath : Optional Text
, terminationMessagePolicy : Optional Text
, tty : Optional Bool
, volumeDevices : Optional (List ./io.k8s.api.core.v1.VolumeDevice.dhall)
, volumeMounts : Optional (List ./io.k8s.api.core.v1.VolumeMount.dhall)
, workingDir : Optional Text
}
{ metadata : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.PodSpec.dhall
}
{ supplementalGroupsPolicy : Optional Bool }
{ type : Text
, queuing : Optional ./io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.NamespaceSpec.dhall
, status : Optional ./io.k8s.api.core.v1.NamespaceStatus.dhall
}
{ addresses : Optional (List ./io.k8s.api.core.v1.NodeAddress.dhall)
, allocatable :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, capacity :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, conditions : Optional (List ./io.k8s.api.core.v1.NodeCondition.dhall)
, config : Optional ./io.k8s.api.core.v1.NodeConfigStatus.dhall
, daemonEndpoints : Optional ./io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
, features : Optional ./io.k8s.api.core.v1.NodeFeatures.dhall
, images : Optional (List ./io.k8s.api.core.v1.ContainerImage.dhall)
, nodeInfo : Optional ./io.k8s.api.core.v1.NodeSystemInfo.dhall
, phase : Optional Text
, runtimeHandlers :
    Optional (List ./io.k8s.api.core.v1.NodeRuntimeHandler.dhall)
, volumesAttached : Optional (List ./io.k8s.api.core.v1.AttachedVolume.dhall)
, volumesInUse : Optional (List Text)
}
{ status : Text
, type : Text
, lastProbeTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ rules : List ./io.k8s.api.batch.v1.PodFailurePolicyRule.dhall }
{ fieldRef : Text, warning : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.ServiceSpec.dhall
, status : Optional ./io.k8s.api.core.v1.ServiceStatus.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.networking.v1.NetworkPolicy.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
}
{ name : Text
, nodeID : Text
, allocatable : Optional ./io.k8s.api.storage.v1.VolumeNodeResources.dhall
, topologyKeys : Optional (List Text)
}
{ conditions :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
}
Text
{ device : Text, driver : Text, pool : Text, request : Text }
{ drivers : List ./io.k8s.api.storage.v1.CSINodeDriver.dhall }
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ allocation : Optional ./io.k8s.api.resource.v1alpha3.AllocationResult.dhall
, deallocationRequested : Optional Bool
, reservedFor :
    Optional
      (List ./io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall)
}
{ replicas : Natural
, availableReplicas : Optional Natural
, conditions : Optional (List ./io.k8s.api.apps.v1.ReplicaSetCondition.dhall)
, fullyLabeledReplicas : Optional Natural
, observedGeneration : Optional Natural
, readyReplicas : Optional Natural
}
{ borrowingLimitPercent : Optional Natural
, lendablePercent : Optional Natural
, limitResponse : Optional ./io.k8s.api.flowcontrol.v1beta3.LimitResponse.dhall
, nominalConcurrencyShares : Optional Natural
}
{ devicePath : Text, name : Text }
{ name : Text
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ caBundle : Optional Text
, service :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference.dhall
, url : Optional Text
}
{ accessModes : Optional (List Text)
, allocatedResourceStatuses : Optional (List { mapKey : Text, mapValue : Text })
, allocatedResources :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, capacity :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, conditions :
    Optional (List ./io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall)
, currentVolumeAttributesClassName : Optional Text
, modifyVolumeStatus : Optional ./io.k8s.api.core.v1.ModifyVolumeStatus.dhall
, phase : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.storage.v1alpha1.VolumeAttributesClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ defaultMode : Optional Natural
, sources : Optional (List ./io.k8s.api.core.v1.VolumeProjection.dhall)
}
{ lendablePercent : Optional Natural
, nominalConcurrencyShares : Optional Natural
}
{ group : Optional Text, resource : Optional Text, version : Optional Text }
{ apiVersion : Text, kind : Text }
{ apiVersion : Text
, items : List ./io.k8s.api.resource.v1alpha3.ResourceClaim.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
, status : Optional ./io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
}
{ allowed : Bool
, denied : Optional Bool
, evaluationError : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, driverName : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, parameters : Optional (List { mapKey : Text, mapValue : Text })
}
{ hard :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, used :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
}
{ lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
, status : Optional Text
, type : Optional Text
}
{ start : Optional Natural }
{ apiGroups : List Text
, resources : List Text
, verbs : List Text
, clusterScope : Optional Bool
, namespaces : Optional (List Text)
}
{ expression : Text
, message : Optional Text
, messageExpression : Optional Text
, reason : Optional Text
}
{ rawSelector : Optional Text
, requirements :
    Optional
      ( List
          ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
      )
}
{ name : Text
, resourceClaimName : Optional Text
, resourceClaimTemplateName : Optional Text
}
{ nonResourceURLs : List Text, verbs : List Text }
{ apiVersion : Text
, items : List ./io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
< Int : Integer | String : Text >
{ source : Text
, opaque :
    Optional ./io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, requests : Optional (List Text)
}
{ name : Optional Text, number : Optional Natural }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec.dhall
, status : ./io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
}
{ metric : ./io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, target : ./io.k8s.api.autoscaling.v2.MetricTarget.dhall
}
{ kind : Text
, name : Text
, namespaced : Bool
, singularName : Text
, verbs : List Text
, categories : Optional (List Text)
, group : Optional Text
, shortNames : Optional (List Text)
, storageVersionHash : Optional Text
, version : Optional Text
}
Text
{ apiVersion : Text, kind : Text }
{ name : Optional Text, namespace : Optional Text }
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.PersistentVolume.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ hostname : Optional Text
, ip : Optional Text
, ports : Optional (List ./io.k8s.api.networking.v1.IngressPortStatus.dhall)
}
{ metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.batch.v1.JobSpec.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.apps.v1.DaemonSet.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ cel : Optional ./io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall }
{ rules : List ./io.k8s.api.batch.v1.SuccessPolicyRule.dhall }
{ apiVersion : Text
, items : List ./io.k8s.api.rbac.v1.RoleBinding.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ type : Text
, exempt :
    Optional
      ./io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration.dhall
, limited :
    Optional
      ./io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration.dhall
}
{ timeoutSeconds : Optional Natural }
{ averageUtilization : Optional Natural
, averageValue : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, value : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{}
{ maxSkew : Natural
, topologyKey : Text
, whenUnsatisfiable : Text
, labelSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, matchLabelKeys : Optional (List Text)
, minDomains : Optional Natural
, nodeAffinityPolicy : Optional Text
, nodeTaintsPolicy : Optional Text
}
{ name : Text, namespace : Text, path : Optional Text, port : Optional Natural }
{ apiVersion : Text
, items : List ./io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
, status : Optional ./io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
}
{ name : Text }
{ clientIP : Optional ./io.k8s.api.core.v1.ClientIPConfig.dhall }
{ secretName : Text
, shareName : Text
, readOnly : Optional Bool
, secretNamespace : Optional Text
}
{ key : Text, operator : Text, values : Optional (List Text) }
{ potentialNodes : Optional (List Text), selectedNode : Optional Text }
{ key : Text, operator : Text, values : Optional (List Text) }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.authentication.v1.TokenReviewSpec.dhall
, status : Optional ./io.k8s.api.authentication.v1.TokenReviewStatus.dhall
}
{ status : Text
, type : Text
, lastHeartbeatTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ name : Text
, port : Optional ./io.k8s.api.networking.v1.ServiceBackendPort.dhall
}
{ attributes :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
          }
      )
, capacity :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ apiVersion : Text
, items : List ./io.k8s.api.rbac.v1.Role.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiGroups : List Text
, resources : List Text
, verbs : List Text
, clusterScope : Optional Bool
, namespaces : Optional (List Text)
}
{ items : Optional (List ./io.k8s.api.core.v1.KeyToPath.dhall)
, name : Optional Text
, optional : Optional Bool
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, storageClassName : Text
, capacity : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, maximumVolumeSize :
    Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, nodeTopology :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ expression : Text, name : Text }
{ conditions :
    Optional
      ( List
          ./io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
      )
}
{ selector : ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, template : ./io.k8s.api.core.v1.PodTemplateSpec.dhall
, minReadySeconds : Optional Natural
, revisionHistoryLimit : Optional Natural
, updateStrategy : Optional ./io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
}
{ nodeSelector : Optional (List { mapKey : Text, mapValue : Text })
, tolerations : Optional (List ./io.k8s.api.core.v1.Toleration.dhall)
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.LimitRangeSpec.dhall
}
{ accessModes : Optional (List Text)
, awsElasticBlockStore :
    Optional ./io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, azureDisk : Optional ./io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, azureFile :
    Optional ./io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
, capacity :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, cephfs : Optional ./io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
, cinder : Optional ./io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
, claimRef : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
, csi : Optional ./io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
, fc : Optional ./io.k8s.api.core.v1.FCVolumeSource.dhall
, flexVolume : Optional ./io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
, flocker : Optional ./io.k8s.api.core.v1.FlockerVolumeSource.dhall
, gcePersistentDisk :
    Optional ./io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, glusterfs :
    Optional ./io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
, hostPath : Optional ./io.k8s.api.core.v1.HostPathVolumeSource.dhall
, iscsi : Optional ./io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
, local : Optional ./io.k8s.api.core.v1.LocalVolumeSource.dhall
, mountOptions : Optional (List Text)
, nfs : Optional ./io.k8s.api.core.v1.NFSVolumeSource.dhall
, nodeAffinity : Optional ./io.k8s.api.core.v1.VolumeNodeAffinity.dhall
, persistentVolumeReclaimPolicy : Optional Text
, photonPersistentDisk :
    Optional ./io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, portworxVolume : Optional ./io.k8s.api.core.v1.PortworxVolumeSource.dhall
, quobyte : Optional ./io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, rbd : Optional ./io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
, scaleIO : Optional ./io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
, storageClassName : Optional Text
, storageos :
    Optional ./io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
, volumeAttributesClassName : Optional Text
, volumeMode : Optional Text
, vsphereVolume :
    Optional ./io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
}
{ attached : Bool
, attachError : Optional ./io.k8s.api.storage.v1.VolumeError.dhall
, attachmentMetadata : Optional (List { mapKey : Text, mapValue : Text })
, detachError : Optional ./io.k8s.api.storage.v1.VolumeError.dhall
}
{ name : Text
, resource : Text
, group : Optional Text
, namespace : Optional Text
}
{ kind : Text, name : Text, apiGroup : Optional Text }
{ admissionReviewVersions : List Text
, clientConfig : ./io.k8s.api.admissionregistration.v1.WebhookClientConfig.dhall
, name : Text
, sideEffects : Text
, failurePolicy : Optional Text
, matchConditions :
    Optional (List ./io.k8s.api.admissionregistration.v1.MatchCondition.dhall)
, matchPolicy : Optional Text
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, reinvocationPolicy : Optional Text
, rules :
    Optional
      (List ./io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall)
, timeoutSeconds : Optional Natural
}
{ ports : Optional (List ./io.k8s.api.networking.v1.NetworkPolicyPort.dhall)
, to : Optional (List ./io.k8s.api.networking.v1.NetworkPolicyPeer.dhall)
}
{ apiVersion : Text
, items : List ./io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, target : ./io.k8s.api.core.v1.ObjectReference.dhall
}
{ required : Optional ./io.k8s.api.core.v1.NodeSelector.dhall }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.core.v1.NodeSpec.dhall
, status : Optional ./io.k8s.api.core.v1.NodeStatus.dhall
}
{ clusterRoleSelectors :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall)
}
{ key : Text, valueExpression : Text }
{ exec : Optional ./io.k8s.api.core.v1.ExecAction.dhall
, failureThreshold : Optional Natural
, grpc : Optional ./io.k8s.api.core.v1.GRPCAction.dhall
, httpGet : Optional ./io.k8s.api.core.v1.HTTPGetAction.dhall
, initialDelaySeconds : Optional Natural
, periodSeconds : Optional Natural
, successThreshold : Optional Natural
, tcpSocket : Optional ./io.k8s.api.core.v1.TCPSocketAction.dhall
, terminationGracePeriodSeconds : Optional Natural
, timeoutSeconds : Optional Natural
}
{ volumeID : Text
, fsType : Optional Text
, partition : Optional Natural
, readOnly : Optional Bool
}
{ borrowingLimitPercent : Optional Natural
, lendablePercent : Optional Natural
, limitResponse : Optional ./io.k8s.api.flowcontrol.v1.LimitResponse.dhall
, nominalConcurrencyShares : Optional Natural
}
{ ingress : Optional (List ./io.k8s.api.core.v1.LoadBalancerIngress.dhall) }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.apps.v1.StatefulSetSpec.dhall
, status : Optional ./io.k8s.api.apps.v1.StatefulSetStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
, status : Optional ./io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
}
{ request : Text
, signerName : Text
, expirationSeconds : Optional Natural
, extra : Optional (List { mapKey : Text, mapValue : List Text })
, groups : Optional (List Text)
, uid : Optional Text
, usages : Optional (List Text)
, username : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, roleRef : ./io.k8s.api.rbac.v1.RoleRef.dhall
, subjects : Optional (List ./io.k8s.api.rbac.v1.Subject.dhall)
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Node.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ name : Text, namespace : Text, path : Optional Text, port : Optional Natural }
{ key : Text, valueExpression : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
, status :
    Optional ./io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, conditions : Optional (List ./io.k8s.api.core.v1.ComponentCondition.dhall)
}
{ subjects : List ./io.k8s.api.flowcontrol.v1.Subject.dhall
, nonResourceRules :
    Optional (List ./io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall)
, resourceRules :
    Optional (List ./io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall)
}
{ apiVersion : Text
, kind : Text
, dryRun : Optional (List Text)
, gracePeriodSeconds : Optional Natural
, orphanDependents : Optional Bool
, preconditions :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
, propagationPolicy : Optional Text
}
{ Port : Natural }
{ apiVersion : Text
, items : List ./io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ limits : List ./io.k8s.api.core.v1.LimitRangeItem.dhall }
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ podAffinityTerm : ./io.k8s.api.core.v1.PodAffinityTerm.dhall
, weight : Natural
}
{ subjects : List ./io.k8s.api.flowcontrol.v1beta3.Subject.dhall
, nonResourceRules :
    Optional (List ./io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule.dhall)
, resourceRules :
    Optional (List ./io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule.dhall)
}
{ minReadySeconds : Optional Natural
, replicas : Optional Natural
, selector : Optional (List { mapKey : Text, mapValue : Text })
, template : Optional ./io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ fsType : Optional Text
, lun : Optional Natural
, readOnly : Optional Bool
, targetWWNs : Optional (List Text)
, wwids : Optional (List Text)
}
{ claims : Optional (List ./io.k8s.api.core.v1.ResourceClaim.dhall)
, limits :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, requests :
    Optional
      ( List
          { mapKey : Text
          , mapValue : ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ secretName : Text, shareName : Text, readOnly : Optional Bool }
{ port : ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, host : Optional Text
}
{ count : Natural
, lastObservedTime : ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
}
{ apiVersion : Text
, kind : Text
, name : Text
, uid : Text
, blockOwnerDeletion : Optional Bool
, controller : Optional Bool
}
{ type : Text, localhostProfile : Optional Text }
{ apiGroup : Text, kind : Text, name : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
, status : Optional ./io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
}
{ startedAt : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, binaryData : Optional (List { mapKey : Text, mapValue : Text })
, data : Optional (List { mapKey : Text, mapValue : Text })
, immutable : Optional Bool
}
{ parentRef : ./io.k8s.api.networking.v1beta1.ParentReference.dhall }
{ apiVersion : Text
, items : List ./io.k8s.api.resource.v1alpha3.DeviceClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ datasetName : Optional Text, datasetUUID : Optional Text }
{ recursiveReadOnlyMounts : Optional Bool, userNamespaces : Optional Bool }
{ pdName : Text
, fsType : Optional Text
, partition : Optional Natural
, readOnly : Optional Bool
}
{ pdID : Text, fsType : Optional Text }
{ clientCIDR : Text, serverAddress : Text }
{ lastPhaseTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, phase : Optional Text
, reason : Optional Text
}
{ resource : Text
, containerName : Optional Text
, divisor : Optional ./io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{ fsType : Optional Text
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
, volumeName : Optional Text
, volumeNamespace : Optional Text
}
{ conditions :
    Optional (List ./io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall)
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastUpdateTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.events.v1.Event.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.policy.v1.PodDisruptionBudget.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, webhooks :
    Optional
      (List ./io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall)
}
{ volumePath : Text
, fsType : Optional Text
, storagePolicyID : Optional Text
, storagePolicyName : Optional Text
}
{ selector : ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, minReadySeconds : Optional Natural
, replicas : Optional Natural
, template : Optional ./io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ configMapKeyRef : Optional ./io.k8s.api.core.v1.ConfigMapKeySelector.dhall
, fieldRef : Optional ./io.k8s.api.core.v1.ObjectFieldSelector.dhall
, resourceFieldRef : Optional ./io.k8s.api.core.v1.ResourceFieldSelector.dhall
, secretKeyRef : Optional ./io.k8s.api.core.v1.SecretKeySelector.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ allocateLoadBalancerNodePorts : Optional Bool
, clusterIP : Optional Text
, clusterIPs : Optional (List Text)
, externalIPs : Optional (List Text)
, externalName : Optional Text
, externalTrafficPolicy : Optional Text
, healthCheckNodePort : Optional Natural
, internalTrafficPolicy : Optional Text
, ipFamilies : Optional (List Text)
, ipFamilyPolicy : Optional Text
, loadBalancerClass : Optional Text
, loadBalancerIP : Optional Text
, loadBalancerSourceRanges : Optional (List Text)
, ports : Optional (List ./io.k8s.api.core.v1.ServicePort.dhall)
, publishNotReadyAddresses : Optional Bool
, selector : Optional (List { mapKey : Text, mapValue : Text })
, sessionAffinity : Optional Text
, sessionAffinityConfig :
    Optional ./io.k8s.api.core.v1.SessionAffinityConfig.dhall
, trafficDistribution : Optional Text
, type : Optional Text
}
{ exitCode : Integer
, containerID : Optional Text
, finishedAt : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
, signal : Optional Natural
, startedAt : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ name : Text
, value : Optional Text
, valueFrom : Optional ./io.k8s.api.core.v1.EnvVarSource.dhall
}
{ config :
    Optional
      (List ./io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall)
, results :
    Optional
      (List ./io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall)
}
{ rollingUpdate : Optional ./io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
, type : Optional Text
}
{ host : Optional Text
, http : Optional ./io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
}
{ conditions :
    Optional
      (List ./io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall)
, resourceVersion : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, rules : Optional (List ./io.k8s.api.rbac.v1.PolicyRule.dhall)
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.batch.v1.JobSpec.dhall
, status : Optional ./io.k8s.api.batch.v1.JobStatus.dhall
}
{ periodSeconds : Natural, type : Text, value : Natural }
{ type : Text, localhostProfile : Optional Text }
{ leaseName : Text
, preferredStrategies : List Text
, binaryVersion : Optional Text
, emulationVersion : Optional Text
, pingTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, renewTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
}
{ failed : Optional (List Text), succeeded : Optional (List Text) }
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.LimitRange.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ name : Text, resourceClaimName : Optional Text }
{ strategy : Text
, webhook :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
}
{ backend : ./io.k8s.api.networking.v1.IngressBackend.dhall
, pathType : Text
, path : Optional Text
}
{ driver : Text
, parameters : ./io.k8s.apimachinery.pkg.runtime.RawExtension.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.rbac.v1.ClusterRole.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ name : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec :
    Optional
      ./io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
, status :
    Optional
      ./io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
}
{ preferredDuringSchedulingIgnoredDuringExecution :
    Optional (List ./io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall)
, requiredDuringSchedulingIgnoredDuringExecution :
    Optional (List ./io.k8s.api.core.v1.PodAffinityTerm.dhall)
}
{ configSource : Optional ./io.k8s.api.core.v1.NodeConfigSource.dhall
, externalID : Optional Text
, podCIDR : Optional Text
, podCIDRs : Optional (List Text)
, providerID : Optional Text
, taints : Optional (List ./io.k8s.api.core.v1.Taint.dhall)
, unschedulable : Optional Bool
}
{ handSize : Optional Natural
, queueLengthLimit : Optional Natural
, queues : Optional Natural
}
{ message : Optional Text
, time : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.networking.v1beta1.IPAddress.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ config :
    Optional
      (List ./io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall)
, selectors :
    Optional (List ./io.k8s.api.resource.v1alpha3.DeviceSelector.dhall)
, suitableNodes : Optional ./io.k8s.api.core.v1.NodeSelector.dhall
}
{ address : Text, type : Text }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
, status :
    Optional ./io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ description : Optional Text, url : Optional Text }
{ excludeResourceRules :
    Optional
      ( List
          ./io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations.dhall
      )
, matchPolicy : Optional Text
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, resourceRules :
    Optional
      ( List
          ./io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations.dhall
      )
}
{ name : Text
, awsElasticBlockStore :
    Optional ./io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, azureDisk : Optional ./io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, azureFile : Optional ./io.k8s.api.core.v1.AzureFileVolumeSource.dhall
, cephfs : Optional ./io.k8s.api.core.v1.CephFSVolumeSource.dhall
, cinder : Optional ./io.k8s.api.core.v1.CinderVolumeSource.dhall
, configMap : Optional ./io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
, csi : Optional ./io.k8s.api.core.v1.CSIVolumeSource.dhall
, downwardAPI : Optional ./io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
, emptyDir : Optional ./io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
, ephemeral : Optional ./io.k8s.api.core.v1.EphemeralVolumeSource.dhall
, fc : Optional ./io.k8s.api.core.v1.FCVolumeSource.dhall
, flexVolume : Optional ./io.k8s.api.core.v1.FlexVolumeSource.dhall
, flocker : Optional ./io.k8s.api.core.v1.FlockerVolumeSource.dhall
, gcePersistentDisk :
    Optional ./io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, gitRepo : Optional ./io.k8s.api.core.v1.GitRepoVolumeSource.dhall
, glusterfs : Optional ./io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
, hostPath : Optional ./io.k8s.api.core.v1.HostPathVolumeSource.dhall
, image : Optional ./io.k8s.api.core.v1.ImageVolumeSource.dhall
, iscsi : Optional ./io.k8s.api.core.v1.ISCSIVolumeSource.dhall
, nfs : Optional ./io.k8s.api.core.v1.NFSVolumeSource.dhall
, persistentVolumeClaim :
    Optional ./io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
, photonPersistentDisk :
    Optional ./io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, portworxVolume : Optional ./io.k8s.api.core.v1.PortworxVolumeSource.dhall
, projected : Optional ./io.k8s.api.core.v1.ProjectedVolumeSource.dhall
, quobyte : Optional ./io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, rbd : Optional ./io.k8s.api.core.v1.RBDVolumeSource.dhall
, scaleIO : Optional ./io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
, secret : Optional ./io.k8s.api.core.v1.SecretVolumeSource.dhall
, storageos : Optional ./io.k8s.api.core.v1.StorageOSVolumeSource.dhall
, vsphereVolume :
    Optional ./io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.ReplicationController.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ certificate : Optional Text
, conditions :
    Optional
      ( List
          ./io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
      )
}
{ expression : Text
, message : Optional Text
, messageExpression : Optional Text
, reason : Optional Text
}
{ opaque :
    Optional ./io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.apps.v1.ReplicaSet.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
List { mapKey : Text, mapValue : Text }
{ maxUnavailable :
    Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, minAvailable :
    Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, selector : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, unhealthyPodEvictionPolicy : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.scheduling.v1.PriorityClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ action : Text
, onExitCodes :
    Optional ./io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
, onPodConditions :
    Optional
      (List ./io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall)
}
{ userInfo : Optional ./io.k8s.api.authentication.v1.UserInfo.dhall }
{ lastTransitionTime : ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Text
, reason : Text
, status : Text
, type : Text
, observedGeneration : Optional Natural
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Secret.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ metric : ./io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, target : ./io.k8s.api.autoscaling.v2.MetricTarget.dhall
}
{ name : Text
, served : Bool
, storage : Bool
, additionalPrinterColumns :
    Optional
      ( List
          ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
      )
, deprecated : Optional Bool
, deprecationWarning : Optional Text
, schema :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
, selectableFields :
    Optional
      ( List
          ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
      )
, subresources :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
}
{ maxUnavailable :
    Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, partition : Optional Natural
}
{ expression : Text, name : Text }
{ mountPath : Text
, name : Text
, readOnly : Optional Bool
, recursiveReadOnly : Optional Text
}
{ conditions :
    Optional (List ./io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, observedGeneration : Optional Natural
, typeChecking :
    Optional ./io.k8s.api.admissionregistration.v1alpha1.TypeChecking.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
}
{ path : Text, server : Text, readOnly : Optional Bool }
{ port : ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, host : Optional Text
, httpHeaders : Optional (List ./io.k8s.api.core.v1.HTTPHeader.dhall)
, path : Optional Text
, scheme : Optional Text
}
{ kind : Text
, name : Text
, apiGroup : Optional Text
, namespace : Optional Text
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
}
{ appProtocol : Optional Text
, name : Optional Text
, port : Optional Natural
, protocol : Optional Text
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastUpdateTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, items : List ./io.k8s.api.core.v1.Service.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ apiVersion : Text
, kind : Text
, name : Text
, versions :
    List ./io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, preferredVersion :
    Optional
      ./io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, serverAddressByClientCIDRs :
    Optional
      ( List
          ./io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
      )
}
{ defaultBackend : Optional ./io.k8s.api.networking.v1.IngressBackend.dhall
, ingressClassName : Optional Text
, rules : Optional (List ./io.k8s.api.networking.v1.IngressRule.dhall)
, tls : Optional (List ./io.k8s.api.networking.v1.IngressTLS.dhall)
}
{ name : Optional Text, optional : Optional Bool }
{ type : Text
, containerResource :
    Optional ./io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
, external : Optional ./io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
, object : Optional ./io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
, pods : Optional ./io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
, resource : Optional ./io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
}
{}
{ hostname : Optional Text
, ip : Optional Text
, ipMode : Optional Text
, ports : Optional (List ./io.k8s.api.core.v1.PortStatus.dhall)
}
{ driver : Text
, fsType : Optional Text
, options : Optional (List { mapKey : Text, mapValue : Text })
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ maxSurge : Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, maxUnavailable :
    Optional ./io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
}
{ describedObject :
    ./io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, metric : ./io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, target : ./io.k8s.api.autoscaling.v2.MetricTarget.dhall
}
{ name : Optional Text }
{ name : Text, namespace : Text }
{ conversionReviewVersions : List Text
, clientConfig :
    Optional
      ./io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
}
{ kind : Text
, group : Optional ./io.k8s.api.flowcontrol.v1.GroupSubject.dhall
, serviceAccount :
    Optional ./io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
, user : Optional ./io.k8s.api.flowcontrol.v1.UserSubject.dhall
}
{}
{ monitors : List Text
, path : Optional Text
, readOnly : Optional Bool
, secretFile : Optional Text
, secretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
, user : Optional Text
}
{ matchResources :
    Optional ./io.k8s.api.admissionregistration.v1.MatchResources.dhall
, paramRef : Optional ./io.k8s.api.admissionregistration.v1.ParamRef.dhall
, policyName : Optional Text
, validationActions : Optional (List Text)
}
{ active : Optional Natural
, completedIndexes : Optional Text
, completionTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, conditions : Optional (List ./io.k8s.api.batch.v1.JobCondition.dhall)
, failed : Optional Natural
, failedIndexes : Optional Text
, ready : Optional Natural
, startTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, succeeded : Optional Natural
, terminating : Optional Natural
, uncountedTerminatedPods :
    Optional ./io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.flowcontrol.v1beta3.FlowSchema.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ fieldRef : Text, warning : Text }
{ ipBlock : Optional ./io.k8s.api.networking.v1.IPBlock.dhall
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, podSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ mountPath : Text
, name : Text
, mountPropagation : Optional Text
, readOnly : Optional Bool
, recursiveReadOnly : Optional Text
, subPath : Optional Text
, subPathExpr : Optional Text
}
{ name : Text, request : Optional Text }
{ cidrs : Optional (List Text) }
{ operator : Text, scopeName : Text, values : Optional (List Text) }
{ repository : Text, directory : Optional Text, revision : Optional Text }
{ status : Text
, type : Text
, lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ audiences : List Text
, boundObjectRef :
    Optional ./io.k8s.api.authentication.v1.BoundObjectReference.dhall
, expirationSeconds : Optional Natural
}
{ cidr : Text, except : Optional (List Text) }
{ apiVersion : Text
, items : List ./io.k8s.api.discovery.v1.EndpointSlice.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ jsonPath : Text
, name : Text
, type : Text
, description : Optional Text
, format : Optional Text
, priority : Optional Integer
}
{ apiVersion : Text
, kind : Text
, serverAddressByClientCIDRs :
    List ./io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
, versions : List Text
}
{ kind : Text
, plural : Text
, categories : Optional (List Text)
, listKind : Optional Text
, shortNames : Optional (List Text)
, singular : Optional Text
}
{ status : Text
, type : Text
, lastUpdateTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
}
{ conditions :
    Optional (List ./io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition.dhall)
}
{ defaultMode : Optional Natural
, items : Optional (List ./io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall)
}
{ image : Text
, monitors : List Text
, fsType : Optional Text
, keyring : Optional Text
, pool : Optional Text
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.LocalObjectReference.dhall
, user : Optional Text
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
, status : Optional ./io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
}
{ gid : Natural, uid : Natural, supplementalGroups : Optional (List Natural) }
{ apiVersion : Text
, items : List ./io.k8s.api.node.v1.RuntimeClass.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
, status :
    Optional ./io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.batch.v1.CronJobSpec.dhall
, status : Optional ./io.k8s.api.batch.v1.CronJobStatus.dhall
}
{ apiVersion : Text
, items : List ./io.k8s.api.networking.v1.Ingress.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ expression : Text }
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ lastTransitionTime :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
, status : Optional Text
, type : Optional Text
}
{ resourceName : Text, restartPolicy : Text }
{ metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : ./io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
}
{ container : Text
, current : ./io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, name : Text
}
{ apiVersion : Text
, fieldsType : Optional Text
, fieldsV1 : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1.dhall
, manager : Optional Text
, operation : Optional Text
, subresource : Optional Text
, time : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ type : Text
, containerResource :
    Optional ./io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
, external : Optional ./io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
, object : Optional ./io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
, pods : Optional ./io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
, resource : Optional ./io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
}
{ resourceClaims :
    Optional
      (List ./io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall)
}
{ resourceID : Text, health : Optional Text }
{ driver : Text
, fsType : Optional Text
, options : Optional (List { mapKey : Text, mapValue : Text })
, readOnly : Optional Bool
, secretRef : Optional ./io.k8s.api.core.v1.SecretReference.dhall
}
{}
{ replicas : Natural
, availableReplicas : Optional Natural
, collisionCount : Optional Natural
, conditions : Optional (List ./io.k8s.api.apps.v1.StatefulSetCondition.dhall)
, currentReplicas : Optional Natural
, currentRevision : Optional Text
, observedGeneration : Optional Natural
, readyReplicas : Optional Natural
, updateRevision : Optional Text
, updatedReplicas : Optional Natural
}
{ apiVersion : Text
, items : List ./io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ admissionReviewVersions : List Text
, clientConfig : ./io.k8s.api.admissionregistration.v1.WebhookClientConfig.dhall
, name : Text
, sideEffects : Text
, failurePolicy : Optional Text
, matchConditions :
    Optional (List ./io.k8s.api.admissionregistration.v1.MatchCondition.dhall)
, matchPolicy : Optional Text
, namespaceSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector :
    Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, rules :
    Optional
      (List ./io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall)
, timeoutSeconds : Optional Natural
}
{ apiVersion : Text
, involvedObject : ./io.k8s.api.core.v1.ObjectReference.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, action : Optional Text
, count : Optional Natural
, eventTime : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, firstTimestamp : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTimestamp : Optional ./io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message : Optional Text
, reason : Optional Text
, related : Optional ./io.k8s.api.core.v1.ObjectReference.dhall
, reportingComponent : Optional Text
, reportingInstance : Optional Text
, series : Optional ./io.k8s.api.core.v1.EventSeries.dhall
, source : Optional ./io.k8s.api.core.v1.EventSource.dhall
, type : Optional Text
}
{ apiVersion : Text
, items :
    List
      ./io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ architecture : Text
, bootID : Text
, containerRuntimeVersion : Text
, kernelVersion : Text
, kubeProxyVersion : Text
, kubeletVersion : Text
, machineID : Text
, operatingSystem : Text
, osImage : Text
, systemUUID : Text
}
{ priorityLevelConfiguration :
    ./io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference.dhall
, distinguisherMethod :
    Optional ./io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod.dhall
, matchingPrecedence : Optional Natural
, rules :
    Optional
      (List ./io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects.dhall)
}
{ extra : Optional (List { mapKey : Text, mapValue : List Text })
, groups : Optional (List Text)
, nonResourceAttributes :
    Optional ./io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, resourceAttributes :
    Optional ./io.k8s.api.authorization.v1.ResourceAttributes.dhall
, uid : Optional Text
, user : Optional Text
}
{ apiVersion : Text, kind : Text, name : Text }
{ active : Optional ./io.k8s.api.core.v1.NodeConfigSource.dhall
, assigned : Optional ./io.k8s.api.core.v1.NodeConfigSource.dhall
, error : Optional Text
, lastKnownGood : Optional ./io.k8s.api.core.v1.NodeConfigSource.dhall
}
{ conditionType : Text }
{ count : Optional Natural }
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec : Optional ./io.k8s.api.autoscaling.v1.ScaleSpec.dhall
, status : Optional ./io.k8s.api.autoscaling.v1.ScaleStatus.dhall
}
{ forZones : Optional (List ./io.k8s.api.discovery.v1.ForZone.dhall) }
{ ready : Optional Bool, serving : Optional Bool, terminating : Optional Bool }
{ rule : Text
, fieldPath : Optional Text
, message : Optional Text
, messageExpression : Optional Text
, optionalOldSelf : Optional Bool
, reason : Optional Text
}
{ endpoints : Text
, path : Text
, endpointsNamespace : Optional Text
, readOnly : Optional Bool
}
{ addresses : Optional (List ./io.k8s.api.core.v1.EndpointAddress.dhall)
, notReadyAddresses : Optional (List ./io.k8s.api.core.v1.EndpointAddress.dhall)
, ports : Optional (List ./io.k8s.api.core.v1.EndpointPort.dhall)
}
{ apiVersion : Text
, kind : Text
, metadata : ./io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, status :
    Optional ./io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus.dhall
}
{ fieldSelector :
    Optional ./io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
, group : Optional Text
, labelSelector :
    Optional ./io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
, name : Optional Text
, namespace : Optional Text
, resource : Optional Text
, subresource : Optional Text
, verb : Optional Text
, version : Optional Text
}
{ configMapRef : Optional ./io.k8s.api.core.v1.ConfigMapEnvSource.dhall
, prefix : Optional Text
, secretRef : Optional ./io.k8s.api.core.v1.SecretEnvSource.dhall
}
{ expression : Text, name : Text }
{ AuditAnnotation =
    ./defaults/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
, ExpressionWarning =
    ./defaults/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
, MatchCondition =
    ./defaults/io.k8s.api.admissionregistration.v1.MatchCondition.dhall
, MatchResources =
    ./defaults/io.k8s.api.admissionregistration.v1.MatchResources.dhall
, MutatingWebhook =
    ./defaults/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
, MutatingWebhookConfiguration =
    ./defaults/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
, MutatingWebhookConfigurationList =
    ./defaults/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList.dhall
, NamedRuleWithOperations =
    ./defaults/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
, ParamKind =
    ./defaults/io.k8s.api.admissionregistration.v1.ParamKind.dhall
, ParamRef =
    ./defaults/io.k8s.api.admissionregistration.v1.ParamRef.dhall
, RuleWithOperations =
    ./defaults/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
, TypeChecking =
    ./defaults/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
, ValidatingAdmissionPolicy =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
, ValidatingAdmissionPolicyBinding =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
, ValidatingAdmissionPolicyBindingList =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList.dhall
, ValidatingAdmissionPolicyBindingSpec =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
, ValidatingAdmissionPolicyList =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList.dhall
, ValidatingAdmissionPolicySpec =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
, ValidatingAdmissionPolicyStatus =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
, ValidatingWebhook =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
, ValidatingWebhookConfiguration =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
, ValidatingWebhookConfigurationList =
    ./defaults/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList.dhall
, Validation =
    ./defaults/io.k8s.api.admissionregistration.v1.Validation.dhall
, Variable =
    ./defaults/io.k8s.api.admissionregistration.v1.Variable.dhall
, ServerStorageVersion =
    ./defaults/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
, StorageVersion =
    ./defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
, StorageVersionCondition =
    ./defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
, StorageVersionList =
    ./defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList.dhall
, StorageVersionStatus =
    ./defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
, ControllerRevision =
    ./defaults/io.k8s.api.apps.v1.ControllerRevision.dhall
, ControllerRevisionList =
    ./defaults/io.k8s.api.apps.v1.ControllerRevisionList.dhall
, DaemonSet =
    ./defaults/io.k8s.api.apps.v1.DaemonSet.dhall
, DaemonSetCondition =
    ./defaults/io.k8s.api.apps.v1.DaemonSetCondition.dhall
, DaemonSetList =
    ./defaults/io.k8s.api.apps.v1.DaemonSetList.dhall
, DaemonSetSpec =
    ./defaults/io.k8s.api.apps.v1.DaemonSetSpec.dhall
, DaemonSetStatus =
    ./defaults/io.k8s.api.apps.v1.DaemonSetStatus.dhall
, DaemonSetUpdateStrategy =
    ./defaults/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
, Deployment =
    ./defaults/io.k8s.api.apps.v1.Deployment.dhall
, DeploymentCondition =
    ./defaults/io.k8s.api.apps.v1.DeploymentCondition.dhall
, DeploymentList =
    ./defaults/io.k8s.api.apps.v1.DeploymentList.dhall
, DeploymentSpec =
    ./defaults/io.k8s.api.apps.v1.DeploymentSpec.dhall
, DeploymentStatus =
    ./defaults/io.k8s.api.apps.v1.DeploymentStatus.dhall
, DeploymentStrategy =
    ./defaults/io.k8s.api.apps.v1.DeploymentStrategy.dhall
, ReplicaSet =
    ./defaults/io.k8s.api.apps.v1.ReplicaSet.dhall
, ReplicaSetCondition =
    ./defaults/io.k8s.api.apps.v1.ReplicaSetCondition.dhall
, ReplicaSetList =
    ./defaults/io.k8s.api.apps.v1.ReplicaSetList.dhall
, ReplicaSetSpec =
    ./defaults/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
, ReplicaSetStatus =
    ./defaults/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
, RollingUpdateDaemonSet =
    ./defaults/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
, RollingUpdateDeployment =
    ./defaults/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
, RollingUpdateStatefulSetStrategy =
    ./defaults/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
, StatefulSet =
    ./defaults/io.k8s.api.apps.v1.StatefulSet.dhall
, StatefulSetCondition =
    ./defaults/io.k8s.api.apps.v1.StatefulSetCondition.dhall
, StatefulSetList =
    ./defaults/io.k8s.api.apps.v1.StatefulSetList.dhall
, StatefulSetOrdinals =
    ./defaults/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
, StatefulSetPersistentVolumeClaimRetentionPolicy =
    ./defaults/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
, StatefulSetSpec =
    ./defaults/io.k8s.api.apps.v1.StatefulSetSpec.dhall
, StatefulSetStatus =
    ./defaults/io.k8s.api.apps.v1.StatefulSetStatus.dhall
, StatefulSetUpdateStrategy =
    ./defaults/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
, BoundObjectReference =
    ./defaults/io.k8s.api.authentication.v1.BoundObjectReference.dhall
, SelfSubjectReview =
    ./defaults/io.k8s.api.authentication.v1.SelfSubjectReview.dhall
, SelfSubjectReviewStatus =
    ./defaults/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
, TokenRequestSpec =
    ./defaults/io.k8s.api.authentication.v1.TokenRequestSpec.dhall
, TokenRequestStatus =
    ./defaults/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
, TokenReview =
    ./defaults/io.k8s.api.authentication.v1.TokenReview.dhall
, TokenReviewSpec =
    ./defaults/io.k8s.api.authentication.v1.TokenReviewSpec.dhall
, TokenReviewStatus =
    ./defaults/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
, UserInfo =
    ./defaults/io.k8s.api.authentication.v1.UserInfo.dhall
, FieldSelectorAttributes =
    ./defaults/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
, LabelSelectorAttributes =
    ./defaults/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
, LocalSubjectAccessReview =
    ./defaults/io.k8s.api.authorization.v1.LocalSubjectAccessReview.dhall
, NonResourceAttributes =
    ./defaults/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, NonResourceRule =
    ./defaults/io.k8s.api.authorization.v1.NonResourceRule.dhall
, ResourceAttributes =
    ./defaults/io.k8s.api.authorization.v1.ResourceAttributes.dhall
, ResourceRule =
    ./defaults/io.k8s.api.authorization.v1.ResourceRule.dhall
, SelfSubjectAccessReview =
    ./defaults/io.k8s.api.authorization.v1.SelfSubjectAccessReview.dhall
, SelfSubjectAccessReviewSpec =
    ./defaults/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
, SelfSubjectRulesReview =
    ./defaults/io.k8s.api.authorization.v1.SelfSubjectRulesReview.dhall
, SelfSubjectRulesReviewSpec =
    ./defaults/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
, SubjectAccessReview =
    ./defaults/io.k8s.api.authorization.v1.SubjectAccessReview.dhall
, SubjectAccessReviewSpec =
    ./defaults/io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
, SubjectAccessReviewStatus =
    ./defaults/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
, SubjectRulesReviewStatus =
    ./defaults/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
, Scale =
    ./defaults/io.k8s.api.autoscaling.v1.Scale.dhall
, ScaleSpec =
    ./defaults/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
, ScaleStatus =
    ./defaults/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
, ContainerResourceMetricSource =
    ./defaults/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
, ContainerResourceMetricStatus =
    ./defaults/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
, CrossVersionObjectReference =
    ./defaults/io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, ExternalMetricSource =
    ./defaults/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
, ExternalMetricStatus =
    ./defaults/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
, HPAScalingPolicy =
    ./defaults/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall
, HPAScalingRules =
    ./defaults/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
, HorizontalPodAutoscaler =
    ./defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
, HorizontalPodAutoscalerBehavior =
    ./defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
, HorizontalPodAutoscalerCondition =
    ./defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
, HorizontalPodAutoscalerList =
    ./defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList.dhall
, HorizontalPodAutoscalerSpec =
    ./defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
, HorizontalPodAutoscalerStatus =
    ./defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
, MetricIdentifier =
    ./defaults/io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, MetricSpec =
    ./defaults/io.k8s.api.autoscaling.v2.MetricSpec.dhall
, MetricStatus =
    ./defaults/io.k8s.api.autoscaling.v2.MetricStatus.dhall
, MetricTarget =
    ./defaults/io.k8s.api.autoscaling.v2.MetricTarget.dhall
, MetricValueStatus =
    ./defaults/io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, ObjectMetricSource =
    ./defaults/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
, ObjectMetricStatus =
    ./defaults/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
, PodsMetricSource =
    ./defaults/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
, PodsMetricStatus =
    ./defaults/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
, ResourceMetricSource =
    ./defaults/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
, ResourceMetricStatus =
    ./defaults/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
, CronJob =
    ./defaults/io.k8s.api.batch.v1.CronJob.dhall
, CronJobList =
    ./defaults/io.k8s.api.batch.v1.CronJobList.dhall
, CronJobSpec =
    ./defaults/io.k8s.api.batch.v1.CronJobSpec.dhall
, CronJobStatus =
    ./defaults/io.k8s.api.batch.v1.CronJobStatus.dhall
, Job =
    ./defaults/io.k8s.api.batch.v1.Job.dhall
, JobCondition =
    ./defaults/io.k8s.api.batch.v1.JobCondition.dhall
, JobList =
    ./defaults/io.k8s.api.batch.v1.JobList.dhall
, JobSpec =
    ./defaults/io.k8s.api.batch.v1.JobSpec.dhall
, JobStatus =
    ./defaults/io.k8s.api.batch.v1.JobStatus.dhall
, JobTemplateSpec =
    ./defaults/io.k8s.api.batch.v1.JobTemplateSpec.dhall
, PodFailurePolicy =
    ./defaults/io.k8s.api.batch.v1.PodFailurePolicy.dhall
, PodFailurePolicyOnExitCodesRequirement =
    ./defaults/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
, PodFailurePolicyOnPodConditionsPattern =
    ./defaults/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
, PodFailurePolicyRule =
    ./defaults/io.k8s.api.batch.v1.PodFailurePolicyRule.dhall
, SuccessPolicy =
    ./defaults/io.k8s.api.batch.v1.SuccessPolicy.dhall
, SuccessPolicyRule =
    ./defaults/io.k8s.api.batch.v1.SuccessPolicyRule.dhall
, UncountedTerminatedPods =
    ./defaults/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
, CertificateSigningRequest =
    ./defaults/io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
, CertificateSigningRequestCondition =
    ./defaults/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
, CertificateSigningRequestList =
    ./defaults/io.k8s.api.certificates.v1.CertificateSigningRequestList.dhall
, CertificateSigningRequestSpec =
    ./defaults/io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
, CertificateSigningRequestStatus =
    ./defaults/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
, ClusterTrustBundle =
    ./defaults/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
, ClusterTrustBundleList =
    ./defaults/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList.dhall
, ClusterTrustBundleSpec =
    ./defaults/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
, Lease =
    ./defaults/io.k8s.api.coordination.v1.Lease.dhall
, LeaseList =
    ./defaults/io.k8s.api.coordination.v1.LeaseList.dhall
, LeaseSpec =
    ./defaults/io.k8s.api.coordination.v1.LeaseSpec.dhall
, LeaseCandidate =
    ./defaults/io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
, LeaseCandidateList =
    ./defaults/io.k8s.api.coordination.v1alpha1.LeaseCandidateList.dhall
, LeaseCandidateSpec =
    ./defaults/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
, AWSElasticBlockStoreVolumeSource =
    ./defaults/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, Affinity =
    ./defaults/io.k8s.api.core.v1.Affinity.dhall
, AppArmorProfile =
    ./defaults/io.k8s.api.core.v1.AppArmorProfile.dhall
, AttachedVolume =
    ./defaults/io.k8s.api.core.v1.AttachedVolume.dhall
, AzureDiskVolumeSource =
    ./defaults/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, AzureFilePersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
, AzureFileVolumeSource =
    ./defaults/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
, Binding =
    ./defaults/io.k8s.api.core.v1.Binding.dhall
, CSIPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
, CSIVolumeSource =
    ./defaults/io.k8s.api.core.v1.CSIVolumeSource.dhall
, Capabilities =
    ./defaults/io.k8s.api.core.v1.Capabilities.dhall
, CephFSPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
, CephFSVolumeSource =
    ./defaults/io.k8s.api.core.v1.CephFSVolumeSource.dhall
, CinderPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
, CinderVolumeSource =
    ./defaults/io.k8s.api.core.v1.CinderVolumeSource.dhall
, ClientIPConfig =
    ./defaults/io.k8s.api.core.v1.ClientIPConfig.dhall
, ClusterTrustBundleProjection =
    ./defaults/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
, ComponentCondition =
    ./defaults/io.k8s.api.core.v1.ComponentCondition.dhall
, ComponentStatus =
    ./defaults/io.k8s.api.core.v1.ComponentStatus.dhall
, ComponentStatusList =
    ./defaults/io.k8s.api.core.v1.ComponentStatusList.dhall
, ConfigMap =
    ./defaults/io.k8s.api.core.v1.ConfigMap.dhall
, ConfigMapEnvSource =
    ./defaults/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
, ConfigMapKeySelector =
    ./defaults/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
, ConfigMapList =
    ./defaults/io.k8s.api.core.v1.ConfigMapList.dhall
, ConfigMapNodeConfigSource =
    ./defaults/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
, ConfigMapProjection =
    ./defaults/io.k8s.api.core.v1.ConfigMapProjection.dhall
, ConfigMapVolumeSource =
    ./defaults/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
, Container =
    ./defaults/io.k8s.api.core.v1.Container.dhall
, ContainerImage =
    ./defaults/io.k8s.api.core.v1.ContainerImage.dhall
, ContainerPort =
    ./defaults/io.k8s.api.core.v1.ContainerPort.dhall
, ContainerResizePolicy =
    ./defaults/io.k8s.api.core.v1.ContainerResizePolicy.dhall
, ContainerState =
    ./defaults/io.k8s.api.core.v1.ContainerState.dhall
, ContainerStateRunning =
    ./defaults/io.k8s.api.core.v1.ContainerStateRunning.dhall
, ContainerStateTerminated =
    ./defaults/io.k8s.api.core.v1.ContainerStateTerminated.dhall
, ContainerStateWaiting =
    ./defaults/io.k8s.api.core.v1.ContainerStateWaiting.dhall
, ContainerStatus =
    ./defaults/io.k8s.api.core.v1.ContainerStatus.dhall
, ContainerUser =
    ./defaults/io.k8s.api.core.v1.ContainerUser.dhall
, DaemonEndpoint =
    ./defaults/io.k8s.api.core.v1.DaemonEndpoint.dhall
, DownwardAPIProjection =
    ./defaults/io.k8s.api.core.v1.DownwardAPIProjection.dhall
, DownwardAPIVolumeFile =
    ./defaults/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall
, DownwardAPIVolumeSource =
    ./defaults/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
, EmptyDirVolumeSource =
    ./defaults/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
, EndpointAddress =
    ./defaults/io.k8s.api.core.v1.EndpointAddress.dhall
, EndpointSubset =
    ./defaults/io.k8s.api.core.v1.EndpointSubset.dhall
, Endpoints =
    ./defaults/io.k8s.api.core.v1.Endpoints.dhall
, EndpointsList =
    ./defaults/io.k8s.api.core.v1.EndpointsList.dhall
, EnvFromSource =
    ./defaults/io.k8s.api.core.v1.EnvFromSource.dhall
, EnvVar =
    ./defaults/io.k8s.api.core.v1.EnvVar.dhall
, EnvVarSource =
    ./defaults/io.k8s.api.core.v1.EnvVarSource.dhall
, EphemeralContainer =
    ./defaults/io.k8s.api.core.v1.EphemeralContainer.dhall
, EphemeralVolumeSource =
    ./defaults/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
, EventSource =
    ./defaults/io.k8s.api.core.v1.EventSource.dhall
, ExecAction =
    ./defaults/io.k8s.api.core.v1.ExecAction.dhall
, FCVolumeSource =
    ./defaults/io.k8s.api.core.v1.FCVolumeSource.dhall
, FlexPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
, FlexVolumeSource =
    ./defaults/io.k8s.api.core.v1.FlexVolumeSource.dhall
, FlockerVolumeSource =
    ./defaults/io.k8s.api.core.v1.FlockerVolumeSource.dhall
, GCEPersistentDiskVolumeSource =
    ./defaults/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, GRPCAction =
    ./defaults/io.k8s.api.core.v1.GRPCAction.dhall
, GitRepoVolumeSource =
    ./defaults/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
, GlusterfsPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
, GlusterfsVolumeSource =
    ./defaults/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
, HTTPGetAction =
    ./defaults/io.k8s.api.core.v1.HTTPGetAction.dhall
, HTTPHeader =
    ./defaults/io.k8s.api.core.v1.HTTPHeader.dhall
, HostAlias =
    ./defaults/io.k8s.api.core.v1.HostAlias.dhall
, HostIP =
    ./defaults/io.k8s.api.core.v1.HostIP.dhall
, HostPathVolumeSource =
    ./defaults/io.k8s.api.core.v1.HostPathVolumeSource.dhall
, ISCSIPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
, ISCSIVolumeSource =
    ./defaults/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
, ImageVolumeSource =
    ./defaults/io.k8s.api.core.v1.ImageVolumeSource.dhall
, KeyToPath =
    ./defaults/io.k8s.api.core.v1.KeyToPath.dhall
, Lifecycle =
    ./defaults/io.k8s.api.core.v1.Lifecycle.dhall
, LifecycleHandler =
    ./defaults/io.k8s.api.core.v1.LifecycleHandler.dhall
, LimitRange =
    ./defaults/io.k8s.api.core.v1.LimitRange.dhall
, LimitRangeItem =
    ./defaults/io.k8s.api.core.v1.LimitRangeItem.dhall
, LimitRangeList =
    ./defaults/io.k8s.api.core.v1.LimitRangeList.dhall
, LimitRangeSpec =
    ./defaults/io.k8s.api.core.v1.LimitRangeSpec.dhall
, LinuxContainerUser =
    ./defaults/io.k8s.api.core.v1.LinuxContainerUser.dhall
, LoadBalancerIngress =
    ./defaults/io.k8s.api.core.v1.LoadBalancerIngress.dhall
, LoadBalancerStatus =
    ./defaults/io.k8s.api.core.v1.LoadBalancerStatus.dhall
, LocalObjectReference =
    ./defaults/io.k8s.api.core.v1.LocalObjectReference.dhall
, LocalVolumeSource =
    ./defaults/io.k8s.api.core.v1.LocalVolumeSource.dhall
, ModifyVolumeStatus =
    ./defaults/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
, NFSVolumeSource =
    ./defaults/io.k8s.api.core.v1.NFSVolumeSource.dhall
, Namespace =
    ./defaults/io.k8s.api.core.v1.Namespace.dhall
, NamespaceCondition =
    ./defaults/io.k8s.api.core.v1.NamespaceCondition.dhall
, NamespaceList =
    ./defaults/io.k8s.api.core.v1.NamespaceList.dhall
, NamespaceSpec =
    ./defaults/io.k8s.api.core.v1.NamespaceSpec.dhall
, NamespaceStatus =
    ./defaults/io.k8s.api.core.v1.NamespaceStatus.dhall
, Node =
    ./defaults/io.k8s.api.core.v1.Node.dhall
, NodeAddress =
    ./defaults/io.k8s.api.core.v1.NodeAddress.dhall
, NodeAffinity =
    ./defaults/io.k8s.api.core.v1.NodeAffinity.dhall
, NodeCondition =
    ./defaults/io.k8s.api.core.v1.NodeCondition.dhall
, NodeConfigSource =
    ./defaults/io.k8s.api.core.v1.NodeConfigSource.dhall
, NodeConfigStatus =
    ./defaults/io.k8s.api.core.v1.NodeConfigStatus.dhall
, NodeDaemonEndpoints =
    ./defaults/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
, NodeFeatures =
    ./defaults/io.k8s.api.core.v1.NodeFeatures.dhall
, NodeList =
    ./defaults/io.k8s.api.core.v1.NodeList.dhall
, NodeRuntimeHandler =
    ./defaults/io.k8s.api.core.v1.NodeRuntimeHandler.dhall
, NodeRuntimeHandlerFeatures =
    ./defaults/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
, NodeSelector =
    ./defaults/io.k8s.api.core.v1.NodeSelector.dhall
, NodeSelectorRequirement =
    ./defaults/io.k8s.api.core.v1.NodeSelectorRequirement.dhall
, NodeSelectorTerm =
    ./defaults/io.k8s.api.core.v1.NodeSelectorTerm.dhall
, NodeSpec =
    ./defaults/io.k8s.api.core.v1.NodeSpec.dhall
, NodeStatus =
    ./defaults/io.k8s.api.core.v1.NodeStatus.dhall
, NodeSystemInfo =
    ./defaults/io.k8s.api.core.v1.NodeSystemInfo.dhall
, ObjectFieldSelector =
    ./defaults/io.k8s.api.core.v1.ObjectFieldSelector.dhall
, ObjectReference =
    ./defaults/io.k8s.api.core.v1.ObjectReference.dhall
, PersistentVolume =
    ./defaults/io.k8s.api.core.v1.PersistentVolume.dhall
, PersistentVolumeClaim =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaim.dhall
, PersistentVolumeClaimCondition =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall
, PersistentVolumeClaimList =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaimList.dhall
, PersistentVolumeClaimSpec =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
, PersistentVolumeClaimStatus =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
, PersistentVolumeClaimTemplate =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
, PersistentVolumeClaimVolumeSource =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
, PersistentVolumeList =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeList.dhall
, PersistentVolumeSpec =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, PersistentVolumeStatus =
    ./defaults/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
, PhotonPersistentDiskVolumeSource =
    ./defaults/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, Pod =
    ./defaults/io.k8s.api.core.v1.Pod.dhall
, PodAffinity =
    ./defaults/io.k8s.api.core.v1.PodAffinity.dhall
, PodAffinityTerm =
    ./defaults/io.k8s.api.core.v1.PodAffinityTerm.dhall
, PodAntiAffinity =
    ./defaults/io.k8s.api.core.v1.PodAntiAffinity.dhall
, PodCondition =
    ./defaults/io.k8s.api.core.v1.PodCondition.dhall
, PodDNSConfig =
    ./defaults/io.k8s.api.core.v1.PodDNSConfig.dhall
, PodDNSConfigOption =
    ./defaults/io.k8s.api.core.v1.PodDNSConfigOption.dhall
, PodIP =
    ./defaults/io.k8s.api.core.v1.PodIP.dhall
, PodList =
    ./defaults/io.k8s.api.core.v1.PodList.dhall
, PodOS =
    ./defaults/io.k8s.api.core.v1.PodOS.dhall
, PodReadinessGate =
    ./defaults/io.k8s.api.core.v1.PodReadinessGate.dhall
, PodResourceClaim =
    ./defaults/io.k8s.api.core.v1.PodResourceClaim.dhall
, PodResourceClaimStatus =
    ./defaults/io.k8s.api.core.v1.PodResourceClaimStatus.dhall
, PodSchedulingGate =
    ./defaults/io.k8s.api.core.v1.PodSchedulingGate.dhall
, PodSecurityContext =
    ./defaults/io.k8s.api.core.v1.PodSecurityContext.dhall
, PodSpec =
    ./defaults/io.k8s.api.core.v1.PodSpec.dhall
, PodStatus =
    ./defaults/io.k8s.api.core.v1.PodStatus.dhall
, PodTemplate =
    ./defaults/io.k8s.api.core.v1.PodTemplate.dhall
, PodTemplateList =
    ./defaults/io.k8s.api.core.v1.PodTemplateList.dhall
, PodTemplateSpec =
    ./defaults/io.k8s.api.core.v1.PodTemplateSpec.dhall
, PortStatus =
    ./defaults/io.k8s.api.core.v1.PortStatus.dhall
, PortworxVolumeSource =
    ./defaults/io.k8s.api.core.v1.PortworxVolumeSource.dhall
, PreferredSchedulingTerm =
    ./defaults/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall
, Probe =
    ./defaults/io.k8s.api.core.v1.Probe.dhall
, ProjectedVolumeSource =
    ./defaults/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
, QuobyteVolumeSource =
    ./defaults/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, RBDPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
, RBDVolumeSource =
    ./defaults/io.k8s.api.core.v1.RBDVolumeSource.dhall
, ReplicationController =
    ./defaults/io.k8s.api.core.v1.ReplicationController.dhall
, ReplicationControllerCondition =
    ./defaults/io.k8s.api.core.v1.ReplicationControllerCondition.dhall
, ReplicationControllerList =
    ./defaults/io.k8s.api.core.v1.ReplicationControllerList.dhall
, ReplicationControllerSpec =
    ./defaults/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
, ReplicationControllerStatus =
    ./defaults/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
, ResourceClaim =
    ./defaults/io.k8s.api.core.v1.ResourceClaim.dhall
, ResourceFieldSelector =
    ./defaults/io.k8s.api.core.v1.ResourceFieldSelector.dhall
, ResourceHealth =
    ./defaults/io.k8s.api.core.v1.ResourceHealth.dhall
, ResourceQuota =
    ./defaults/io.k8s.api.core.v1.ResourceQuota.dhall
, ResourceQuotaList =
    ./defaults/io.k8s.api.core.v1.ResourceQuotaList.dhall
, ResourceQuotaSpec =
    ./defaults/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
, ResourceQuotaStatus =
    ./defaults/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
, ResourceRequirements =
    ./defaults/io.k8s.api.core.v1.ResourceRequirements.dhall
, ResourceStatus =
    ./defaults/io.k8s.api.core.v1.ResourceStatus.dhall
, SELinuxOptions =
    ./defaults/io.k8s.api.core.v1.SELinuxOptions.dhall
, ScaleIOPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
, ScaleIOVolumeSource =
    ./defaults/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
, ScopeSelector =
    ./defaults/io.k8s.api.core.v1.ScopeSelector.dhall
, ScopedResourceSelectorRequirement =
    ./defaults/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
, SeccompProfile =
    ./defaults/io.k8s.api.core.v1.SeccompProfile.dhall
, Secret =
    ./defaults/io.k8s.api.core.v1.Secret.dhall
, SecretEnvSource =
    ./defaults/io.k8s.api.core.v1.SecretEnvSource.dhall
, SecretKeySelector =
    ./defaults/io.k8s.api.core.v1.SecretKeySelector.dhall
, SecretList =
    ./defaults/io.k8s.api.core.v1.SecretList.dhall
, SecretProjection =
    ./defaults/io.k8s.api.core.v1.SecretProjection.dhall
, SecretReference =
    ./defaults/io.k8s.api.core.v1.SecretReference.dhall
, SecretVolumeSource =
    ./defaults/io.k8s.api.core.v1.SecretVolumeSource.dhall
, SecurityContext =
    ./defaults/io.k8s.api.core.v1.SecurityContext.dhall
, Service =
    ./defaults/io.k8s.api.core.v1.Service.dhall
, ServiceAccount =
    ./defaults/io.k8s.api.core.v1.ServiceAccount.dhall
, ServiceAccountList =
    ./defaults/io.k8s.api.core.v1.ServiceAccountList.dhall
, ServiceAccountTokenProjection =
    ./defaults/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
, ServiceList =
    ./defaults/io.k8s.api.core.v1.ServiceList.dhall
, ServicePort =
    ./defaults/io.k8s.api.core.v1.ServicePort.dhall
, ServiceSpec =
    ./defaults/io.k8s.api.core.v1.ServiceSpec.dhall
, ServiceStatus =
    ./defaults/io.k8s.api.core.v1.ServiceStatus.dhall
, SessionAffinityConfig =
    ./defaults/io.k8s.api.core.v1.SessionAffinityConfig.dhall
, SleepAction =
    ./defaults/io.k8s.api.core.v1.SleepAction.dhall
, StorageOSPersistentVolumeSource =
    ./defaults/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
, StorageOSVolumeSource =
    ./defaults/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
, Sysctl =
    ./defaults/io.k8s.api.core.v1.Sysctl.dhall
, TCPSocketAction =
    ./defaults/io.k8s.api.core.v1.TCPSocketAction.dhall
, Taint =
    ./defaults/io.k8s.api.core.v1.Taint.dhall
, Toleration =
    ./defaults/io.k8s.api.core.v1.Toleration.dhall
, TopologySelectorLabelRequirement =
    ./defaults/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
, TopologySelectorTerm =
    ./defaults/io.k8s.api.core.v1.TopologySelectorTerm.dhall
, TopologySpreadConstraint =
    ./defaults/io.k8s.api.core.v1.TopologySpreadConstraint.dhall
, TypedLocalObjectReference =
    ./defaults/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, TypedObjectReference =
    ./defaults/io.k8s.api.core.v1.TypedObjectReference.dhall
, Volume =
    ./defaults/io.k8s.api.core.v1.Volume.dhall
, VolumeDevice =
    ./defaults/io.k8s.api.core.v1.VolumeDevice.dhall
, VolumeMount =
    ./defaults/io.k8s.api.core.v1.VolumeMount.dhall
, VolumeMountStatus =
    ./defaults/io.k8s.api.core.v1.VolumeMountStatus.dhall
, VolumeNodeAffinity =
    ./defaults/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
, VolumeProjection =
    ./defaults/io.k8s.api.core.v1.VolumeProjection.dhall
, VolumeResourceRequirements =
    ./defaults/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
, VsphereVirtualDiskVolumeSource =
    ./defaults/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
, WeightedPodAffinityTerm =
    ./defaults/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall
, WindowsSecurityContextOptions =
    ./defaults/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
, Endpoint =
    ./defaults/io.k8s.api.discovery.v1.Endpoint.dhall
, EndpointConditions =
    ./defaults/io.k8s.api.discovery.v1.EndpointConditions.dhall
, EndpointHints =
    ./defaults/io.k8s.api.discovery.v1.EndpointHints.dhall
, EndpointPort =
    ./defaults/io.k8s.api.discovery.v1.EndpointPort.dhall
, EndpointSlice =
    ./defaults/io.k8s.api.discovery.v1.EndpointSlice.dhall
, EndpointSliceList =
    ./defaults/io.k8s.api.discovery.v1.EndpointSliceList.dhall
, ForZone =
    ./defaults/io.k8s.api.discovery.v1.ForZone.dhall
, Event =
    ./defaults/io.k8s.api.events.v1.Event.dhall
, EventList =
    ./defaults/io.k8s.api.events.v1.EventList.dhall
, EventSeries =
    ./defaults/io.k8s.api.events.v1.EventSeries.dhall
, ExemptPriorityLevelConfiguration =
    ./defaults/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
, FlowDistinguisherMethod =
    ./defaults/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
, FlowSchema =
    ./defaults/io.k8s.api.flowcontrol.v1.FlowSchema.dhall
, FlowSchemaCondition =
    ./defaults/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall
, FlowSchemaList =
    ./defaults/io.k8s.api.flowcontrol.v1.FlowSchemaList.dhall
, FlowSchemaSpec =
    ./defaults/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
, FlowSchemaStatus =
    ./defaults/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
, GroupSubject =
    ./defaults/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
, LimitResponse =
    ./defaults/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
, LimitedPriorityLevelConfiguration =
    ./defaults/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
, NonResourcePolicyRule =
    ./defaults/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall
, PolicyRulesWithSubjects =
    ./defaults/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall
, PriorityLevelConfiguration =
    ./defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
, PriorityLevelConfigurationCondition =
    ./defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
, PriorityLevelConfigurationList =
    ./defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList.dhall
, PriorityLevelConfigurationReference =
    ./defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
, PriorityLevelConfigurationSpec =
    ./defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
, PriorityLevelConfigurationStatus =
    ./defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
, QueuingConfiguration =
    ./defaults/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
, ResourcePolicyRule =
    ./defaults/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall
, ServiceAccountSubject =
    ./defaults/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
, UserSubject =
    ./defaults/io.k8s.api.flowcontrol.v1.UserSubject.dhall
, HTTPIngressPath =
    ./defaults/io.k8s.api.networking.v1.HTTPIngressPath.dhall
, HTTPIngressRuleValue =
    ./defaults/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
, IPBlock =
    ./defaults/io.k8s.api.networking.v1.IPBlock.dhall
, Ingress =
    ./defaults/io.k8s.api.networking.v1.Ingress.dhall
, IngressBackend =
    ./defaults/io.k8s.api.networking.v1.IngressBackend.dhall
, IngressClass =
    ./defaults/io.k8s.api.networking.v1.IngressClass.dhall
, IngressClassList =
    ./defaults/io.k8s.api.networking.v1.IngressClassList.dhall
, IngressClassParametersReference =
    ./defaults/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
, IngressClassSpec =
    ./defaults/io.k8s.api.networking.v1.IngressClassSpec.dhall
, IngressList =
    ./defaults/io.k8s.api.networking.v1.IngressList.dhall
, IngressLoadBalancerIngress =
    ./defaults/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
, IngressLoadBalancerStatus =
    ./defaults/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
, IngressPortStatus =
    ./defaults/io.k8s.api.networking.v1.IngressPortStatus.dhall
, IngressRule =
    ./defaults/io.k8s.api.networking.v1.IngressRule.dhall
, IngressServiceBackend =
    ./defaults/io.k8s.api.networking.v1.IngressServiceBackend.dhall
, IngressSpec =
    ./defaults/io.k8s.api.networking.v1.IngressSpec.dhall
, IngressStatus =
    ./defaults/io.k8s.api.networking.v1.IngressStatus.dhall
, IngressTLS =
    ./defaults/io.k8s.api.networking.v1.IngressTLS.dhall
, NetworkPolicy =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicy.dhall
, NetworkPolicyEgressRule =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall
, NetworkPolicyIngressRule =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall
, NetworkPolicyList =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicyList.dhall
, NetworkPolicyPeer =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall
, NetworkPolicyPort =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicyPort.dhall
, NetworkPolicySpec =
    ./defaults/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
, ServiceBackendPort =
    ./defaults/io.k8s.api.networking.v1.ServiceBackendPort.dhall
, IPAddress =
    ./defaults/io.k8s.api.networking.v1beta1.IPAddress.dhall
, IPAddressList =
    ./defaults/io.k8s.api.networking.v1beta1.IPAddressList.dhall
, IPAddressSpec =
    ./defaults/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
, ParentReference =
    ./defaults/io.k8s.api.networking.v1beta1.ParentReference.dhall
, ServiceCIDR =
    ./defaults/io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
, ServiceCIDRList =
    ./defaults/io.k8s.api.networking.v1beta1.ServiceCIDRList.dhall
, ServiceCIDRSpec =
    ./defaults/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
, ServiceCIDRStatus =
    ./defaults/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
, Overhead =
    ./defaults/io.k8s.api.node.v1.Overhead.dhall
, RuntimeClass =
    ./defaults/io.k8s.api.node.v1.RuntimeClass.dhall
, RuntimeClassList =
    ./defaults/io.k8s.api.node.v1.RuntimeClassList.dhall
, Scheduling =
    ./defaults/io.k8s.api.node.v1.Scheduling.dhall
, Eviction =
    ./defaults/io.k8s.api.policy.v1.Eviction.dhall
, PodDisruptionBudget =
    ./defaults/io.k8s.api.policy.v1.PodDisruptionBudget.dhall
, PodDisruptionBudgetList =
    ./defaults/io.k8s.api.policy.v1.PodDisruptionBudgetList.dhall
, PodDisruptionBudgetSpec =
    ./defaults/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
, PodDisruptionBudgetStatus =
    ./defaults/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
, AggregationRule =
    ./defaults/io.k8s.api.rbac.v1.AggregationRule.dhall
, ClusterRole =
    ./defaults/io.k8s.api.rbac.v1.ClusterRole.dhall
, ClusterRoleBinding =
    ./defaults/io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
, ClusterRoleBindingList =
    ./defaults/io.k8s.api.rbac.v1.ClusterRoleBindingList.dhall
, ClusterRoleList =
    ./defaults/io.k8s.api.rbac.v1.ClusterRoleList.dhall
, PolicyRule =
    ./defaults/io.k8s.api.rbac.v1.PolicyRule.dhall
, Role =
    ./defaults/io.k8s.api.rbac.v1.Role.dhall
, RoleBinding =
    ./defaults/io.k8s.api.rbac.v1.RoleBinding.dhall
, RoleBindingList =
    ./defaults/io.k8s.api.rbac.v1.RoleBindingList.dhall
, RoleList =
    ./defaults/io.k8s.api.rbac.v1.RoleList.dhall
, RoleRef =
    ./defaults/io.k8s.api.rbac.v1.RoleRef.dhall
, Subject =
    ./defaults/io.k8s.api.rbac.v1.Subject.dhall
, AllocationResult =
    ./defaults/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
, BasicDevice =
    ./defaults/io.k8s.api.resource.v1alpha3.BasicDevice.dhall
, CELDeviceSelector =
    ./defaults/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall
, Device =
    ./defaults/io.k8s.api.resource.v1alpha3.Device.dhall
, DeviceAllocationConfiguration =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
, DeviceAllocationResult =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
, DeviceAttribute =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
, DeviceClaim =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
, DeviceClaimConfiguration =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
, DeviceClass =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceClass.dhall
, DeviceClassConfiguration =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
, DeviceClassList =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceClassList.dhall
, DeviceClassSpec =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
, DeviceConstraint =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall
, DeviceRequest =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall
, DeviceRequestAllocationResult =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
, DeviceSelector =
    ./defaults/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall
, OpaqueDeviceConfiguration =
    ./defaults/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, PodSchedulingContext =
    ./defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
, PodSchedulingContextList =
    ./defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContextList.dhall
, PodSchedulingContextSpec =
    ./defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
, PodSchedulingContextStatus =
    ./defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
, ResourceClaimConsumerReference =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
, ResourceClaimList =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimList.dhall
, ResourceClaimSchedulingStatus =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
, ResourceClaimSpec =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
, ResourceClaimStatus =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
, ResourceClaimTemplate =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
, ResourceClaimTemplateList =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList.dhall
, ResourceClaimTemplateSpec =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
, ResourcePool =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourcePool.dhall
, ResourceSlice =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
, ResourceSliceList =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceSliceList.dhall
, ResourceSliceSpec =
    ./defaults/io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
, PriorityClass =
    ./defaults/io.k8s.api.scheduling.v1.PriorityClass.dhall
, PriorityClassList =
    ./defaults/io.k8s.api.scheduling.v1.PriorityClassList.dhall
, CSIDriver =
    ./defaults/io.k8s.api.storage.v1.CSIDriver.dhall
, CSIDriverList =
    ./defaults/io.k8s.api.storage.v1.CSIDriverList.dhall
, CSIDriverSpec =
    ./defaults/io.k8s.api.storage.v1.CSIDriverSpec.dhall
, CSINode =
    ./defaults/io.k8s.api.storage.v1.CSINode.dhall
, CSINodeDriver =
    ./defaults/io.k8s.api.storage.v1.CSINodeDriver.dhall
, CSINodeList =
    ./defaults/io.k8s.api.storage.v1.CSINodeList.dhall
, CSINodeSpec =
    ./defaults/io.k8s.api.storage.v1.CSINodeSpec.dhall
, CSIStorageCapacity =
    ./defaults/io.k8s.api.storage.v1.CSIStorageCapacity.dhall
, CSIStorageCapacityList =
    ./defaults/io.k8s.api.storage.v1.CSIStorageCapacityList.dhall
, StorageClass =
    ./defaults/io.k8s.api.storage.v1.StorageClass.dhall
, StorageClassList =
    ./defaults/io.k8s.api.storage.v1.StorageClassList.dhall
, TokenRequest =
    ./defaults/io.k8s.api.storage.v1.TokenRequest.dhall
, VolumeAttachment =
    ./defaults/io.k8s.api.storage.v1.VolumeAttachment.dhall
, VolumeAttachmentList =
    ./defaults/io.k8s.api.storage.v1.VolumeAttachmentList.dhall
, VolumeAttachmentSource =
    ./defaults/io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
, VolumeAttachmentSpec =
    ./defaults/io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
, VolumeAttachmentStatus =
    ./defaults/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
, VolumeError =
    ./defaults/io.k8s.api.storage.v1.VolumeError.dhall
, VolumeNodeResources =
    ./defaults/io.k8s.api.storage.v1.VolumeNodeResources.dhall
, VolumeAttributesClass =
    ./defaults/io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
, VolumeAttributesClassList =
    ./defaults/io.k8s.api.storage.v1beta1.VolumeAttributesClassList.dhall
, GroupVersionResource =
    ./defaults/io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
, MigrationCondition =
    ./defaults/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
, StorageVersionMigration =
    ./defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
, StorageVersionMigrationList =
    ./defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList.dhall
, StorageVersionMigrationSpec =
    ./defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
, StorageVersionMigrationStatus =
    ./defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
, CustomResourceColumnDefinition =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
, CustomResourceConversion =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
, CustomResourceDefinition =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
, CustomResourceDefinitionCondition =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
, CustomResourceDefinitionList =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList.dhall
, CustomResourceDefinitionNames =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, CustomResourceDefinitionSpec =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
, CustomResourceDefinitionStatus =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
, CustomResourceDefinitionVersion =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
, CustomResourceSubresourceScale =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
, CustomResourceSubresources =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
, CustomResourceValidation =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
, ExternalDocumentation =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
, JSON =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, JSONSchemaProps =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
, JSONSchemaPropsOrArray =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray.dhall
, JSONSchemaPropsOrBool =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool.dhall
, JSONSchemaPropsOrStringArray =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray.dhall
, SelectableField =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
, ValidationRule =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
, WebhookClientConfig =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
, WebhookConversion =
    ./defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
, APIGroup =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
, APIGroupList =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList.dhall
, APIResource =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
, APIResourceList =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList.dhall
, APIVersions =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions.dhall
, Condition =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall
, DeleteOptions =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
, FieldSelectorRequirement =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
, GroupVersionForDiscovery =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, LabelSelector =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, LabelSelectorRequirement =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
, ListMeta =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
, ManagedFieldsEntry =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
, ObjectMeta =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, OwnerReference =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
, Preconditions =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
, ServerAddressByClientCIDR =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
, Status =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.Status.dhall
, StatusCause =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall
, StatusDetails =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
, WatchEvent =
    ./defaults/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent.dhall
, Info =
    ./defaults/io.k8s.apimachinery.pkg.version.Info.dhall
, APIService =
    ./defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
, APIServiceCondition =
    ./defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
, APIServiceList =
    ./defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList.dhall
, APIServiceSpec =
    ./defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
, APIServiceStatus =
    ./defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
, ServiceReference =
    ./defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
}
  ./schemas.dhall
∧ { IntOrString =
      ( ./types.dhall
      ).IntOrString
  , NatOrString =
      ( ./types.dhall
      ).NatOrString
  , Resource =
      ./typesUnion.dhall
  }
{ Type = ./../types/io.k8s.api.core.v1.PodSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ComponentStatusList.dhall
, default = ./../defaults/io.k8s.api.core.v1.ComponentStatusList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerImage.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerImage.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ScopeSelector.dhall
, default = ./../defaults/io.k8s.api.core.v1.ScopeSelector.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressPortStatus.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressPortStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EventSeries.dhall
, default = ./../defaults/io.k8s.api.core.v1.EventSeries.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LimitRangeItem.dhall
, default = ./../defaults/io.k8s.api.core.v1.LimitRangeItem.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerState.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerState.dhall
}
{ Type =
    ./../types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
, default =
    ./../defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.LimitResponse.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.LimitResponse.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.AttachedVolume.dhall
, default = ./../defaults/io.k8s.api.core.v1.AttachedVolume.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceQuotaList.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceQuotaList.dhall
}
{ Type =
    ./../types/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList.dhall
}
{ Type =
    ./../types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
, default =
    ./../defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
, default =
    ./../defaults/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DeploymentSpec.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DeploymentSpec.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.ClusterRole.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.ClusterRole.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EndpointsList.dhall
, default = ./../defaults/io.k8s.api.core.v1.EndpointsList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LifecycleHandler.dhall
, default = ./../defaults/io.k8s.api.core.v1.LifecycleHandler.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecretKeySelector.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecretKeySelector.dhall
}
{ Type =
    ./../types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList.dhall
, default =
    ./../defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerStateWaiting.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerStateWaiting.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.DownwardAPIProjection.dhall
, default = ./../defaults/io.k8s.api.core.v1.DownwardAPIProjection.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.ParamRef.dhall
, default = ./../defaults/io.k8s.api.admissionregistration.v1.ParamRef.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressStatus.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressStatus.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.CronJobStatus.dhall
, default = ./../defaults/io.k8s.api.batch.v1.CronJobStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
}
{ Type = ./../types/io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
, default = ./../defaults/io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodList.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodList.dhall
}
{ Type = ./../types/io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
}
{ Type =
    ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
, default =
    ./../defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressBackend.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressBackend.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ExpressionWarning.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ExpressionWarning.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ControllerRevision.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ControllerRevision.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EndpointPort.dhall
, default = ./../defaults/io.k8s.api.core.v1.EndpointPort.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaim.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaim.dhall
}
{ Type =
    ./../types/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Endpoints.dhall
, default = ./../defaults/io.k8s.api.core.v1.Endpoints.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.MatchCondition.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.MatchCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerUser.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerUser.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeSelectorTerm.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeSelectorTerm.dhall
}
{ Type =
    ./../types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList.dhall
, default =
    ./../defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList.dhall
}
{ Type =
    ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
, default =
    ./../defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServiceAccountList.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServiceAccountList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ReplicationController.dhall
, default = ./../defaults/io.k8s.api.core.v1.ReplicationController.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus.dhall
}
{ Type = ./../types/io.k8s.api.policy.v1.Eviction.dhall
, default = ./../defaults/io.k8s.api.policy.v1.Eviction.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.Endpoint.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.Endpoint.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DeploymentList.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DeploymentList.dhall
}
{ Type = ./../types/io.k8s.api.scheduling.v1.PriorityClass.dhall
, default = ./../defaults/io.k8s.api.scheduling.v1.PriorityClass.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1beta1.ParamKind.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ParamKind.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSIDriverList.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSIDriverList.dhall
}
{ Type = ./../types/io.k8s.api.coordination.v1.Lease.dhall
, default = ./../defaults/io.k8s.api.coordination.v1.Lease.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Pod.dhall
, default = ./../defaults/io.k8s.api.core.v1.Pod.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Taint.dhall
, default = ./../defaults/io.k8s.api.core.v1.Taint.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMapProjection.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMapProjection.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SleepAction.dhall
, default = ./../defaults/io.k8s.api.core.v1.SleepAction.dhall
}
{ Type = ./../types/io.k8s.api.coordination.v1.LeaseList.dhall
, default = ./../defaults/io.k8s.api.coordination.v1.LeaseList.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSetSpec.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSetSpec.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
, default =
    ./../defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
, default = ./../defaults/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.ClusterRoleBindingList.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.ClusterRoleBindingList.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall
, default = ./../defaults/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Status.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.Status.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeAffinity.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeAffinity.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicyPort.dhall
, default = ./../defaults/io.k8s.api.networking.v1.NetworkPolicyPort.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VolumeProjection.dhall
, default = ./../defaults/io.k8s.api.core.v1.VolumeProjection.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodTemplate.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodTemplate.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Capabilities.dhall
, default = ./../defaults/io.k8s.api.core.v1.Capabilities.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeRuntimeHandler.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeRuntimeHandler.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServiceAccount.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServiceAccount.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.JobSpec.dhall
, default = ./../defaults/io.k8s.api.batch.v1.JobSpec.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1beta1.VolumeAttributesClassList.dhall
, default =
    ./../defaults/io.k8s.api.storage.v1beta1.VolumeAttributesClassList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1beta1.TypeChecking.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.TypeChecking.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, default = ./../defaults/io.k8s.api.core.v1.ObjectReference.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSIDriverSpec.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSIDriverSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodDNSConfigOption.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodDNSConfigOption.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSIDriver.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSIDriver.dhall
}
{ Type = ./../types/io.k8s.api.node.v1.Overhead.dhall
, default = ./../defaults/io.k8s.api.node.v1.Overhead.dhall
}
{ Type =
    ./../types/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.TokenRequest.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.TokenRequest.dhall
}
{ Type =
    ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList.dhall
}
{ Type =
    ./../types/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
, default =
    ./../defaults/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.SuccessPolicyRule.dhall
, default = ./../defaults/io.k8s.api.batch.v1.SuccessPolicyRule.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSetList.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSetList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
}
{ Type = ./../types/io.k8s.api.coordination.v1.LeaseSpec.dhall
, default = ./../defaults/io.k8s.api.coordination.v1.LeaseSpec.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.IPAddress.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.IPAddress.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PortworxVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.PortworxVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeConfigSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeConfigSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DeploymentStrategy.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DeploymentStrategy.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ReplicationControllerCondition.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.ReplicationControllerCondition.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.TokenRequest.dhall
, default = ./../defaults/io.k8s.api.storage.v1.TokenRequest.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.JobList.dhall
, default = ./../defaults/io.k8s.api.batch.v1.JobList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.GRPCAction.dhall
, default = ./../defaults/io.k8s.api.core.v1.GRPCAction.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeAttachment.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeAttachment.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.UserSubject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.UserSubject.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DaemonSet.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DaemonSet.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodSchedulingGate.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodSchedulingGate.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall
, default = ./../defaults/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.Deployment.dhall
, default = ./../defaults/io.k8s.api.apps.v1.Deployment.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.node.v1.RuntimeClass.dhall
, default = ./../defaults/io.k8s.api.node.v1.RuntimeClass.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodCondition.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodCondition.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.ForZone.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.ForZone.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.HostAlias.dhall
, default = ./../defaults/io.k8s.api.core.v1.HostAlias.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.StorageClass.dhall
, default = ./../defaults/io.k8s.api.storage.v1.StorageClass.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1beta1.Validation.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.Validation.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicy.dhall
, default = ./../defaults/io.k8s.api.networking.v1.NetworkPolicy.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourcePool.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourcePool.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ObjectFieldSelector.dhall
, default = ./../defaults/io.k8s.api.core.v1.ObjectFieldSelector.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.CSIVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.CSIVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodAffinity.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodAffinity.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EndpointAddress.dhall
, default = ./../defaults/io.k8s.api.core.v1.EndpointAddress.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Sysctl.dhall
, default = ./../defaults/io.k8s.api.core.v1.Sysctl.dhall
}
{ Type =
    ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList.dhall
, default =
    ./../defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSINode.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSINode.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMapList.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMapList.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecretVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecretVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ReplicaSetCondition.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ReplicaSetCondition.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSIStorageCapacityList.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSIStorageCapacityList.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
}
{ Type =
    ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ControllerRevisionList.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ControllerRevisionList.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1alpha1.TypeChecking.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.TypeChecking.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.CronJobList.dhall
, default = ./../defaults/io.k8s.api.batch.v1.CronJobList.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaList.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.FlowSchemaList.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.TopologySelectorTerm.dhall
, default = ./../defaults/io.k8s.api.core.v1.TopologySelectorTerm.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList.dhall
}
{ Type =
    ./../types/io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus.dhall
, default =
    ./../defaults/io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.Ingress.dhall
, default = ./../defaults/io.k8s.api.networking.v1.Ingress.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.Subject.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.Subject.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodAffinityTerm.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodAffinityTerm.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodDNSConfig.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodDNSConfig.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
, default = ./../defaults/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.MatchResources.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.MatchResources.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecurityContext.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecurityContext.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
}
{ Type =
    ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
}
{ Type =
    ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
, default =
    ./../defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceSliceList.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceSliceList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PortStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.PortStatus.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.version.Info.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.version.Info.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceQuota.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceQuota.dhall
}
{ Type =
    ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
, default =
    ./../defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerPort.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerPort.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
, default =
    ./../defaults/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ExecAction.dhall
, default = ./../defaults/io.k8s.api.core.v1.ExecAction.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.CronJobSpec.dhall
, default = ./../defaults/io.k8s.api.batch.v1.CronJobSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.MatchCondition.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.MatchCondition.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServiceStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServiceStatus.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1alpha1.ParamRef.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ParamRef.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.HostIP.dhall
, default = ./../defaults/io.k8s.api.core.v1.HostIP.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecretEnvSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecretEnvSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodIP.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodIP.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EventSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.EventSource.dhall
}
{ Type = ./../types/io.k8s.api.events.v1.Event.dhall
, default = ./../defaults/io.k8s.api.events.v1.Event.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Toleration.dhall
, default = ./../defaults/io.k8s.api.core.v1.Toleration.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServicePort.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServicePort.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.MetricTarget.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.MetricTarget.dhall
}
{ Type = ./../types/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
, default = ./../defaults/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.Device.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.Device.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeAttachmentList.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeAttachmentList.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1alpha1.SelfSubjectReview.dhall
, default =
    ./../defaults/io.k8s.api.authentication.v1alpha1.SelfSubjectReview.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NamespaceList.dhall
, default = ./../defaults/io.k8s.api.core.v1.NamespaceList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1beta1.Variable.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.Variable.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolume.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolume.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressClassSpec.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressClassSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.HTTPHeader.dhall
, default = ./../defaults/io.k8s.api.core.v1.HTTPHeader.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.TokenReviewSpec.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.TokenReviewSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.Subject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.Subject.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall
, default =
    ./../defaults/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.CinderVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.CinderVolumeSource.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.EndpointSlice.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.EndpointSlice.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.HostPathVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.HostPathVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaimList.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaimList.dhall
}
{ Type =
    ./../types/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
, default =
    ./../defaults/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Container.dhall
, default = ./../defaults/io.k8s.api.core.v1.Container.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.BoundObjectReference.dhall
, default =
    ./../defaults/io.k8s.api.authentication.v1.BoundObjectReference.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ReplicaSet.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ReplicaSet.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.UserSubject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.UserSubject.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressTLS.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressTLS.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DaemonSetStatus.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DaemonSetStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodOS.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodOS.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodSecurityContext.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodSecurityContext.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
}
{ Type =
    ./../types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressClassList.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressClassList.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.LocalSubjectAccessReview.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.LocalSubjectAccessReview.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NamespaceSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.NamespaceSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.UserInfo.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.UserInfo.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Secret.dhall
, default = ./../defaults/io.k8s.api.core.v1.Secret.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressClass.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressClass.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.CephFSVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.CephFSVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
, default = ./../defaults/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
, default = ./../defaults/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerStatus.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeSelector.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeSelector.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.ResourceRule.dhall
, default = ./../defaults/io.k8s.api.authorization.v1.ResourceRule.dhall
}
{ Type =
    ./../types/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
, default =
    ./../defaults/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ImageVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ImageVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SubjectAccessReview.dhall
, default = ./../defaults/io.k8s.api.authorization.v1.SubjectAccessReview.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LocalVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.LocalVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
, default =
    ./../defaults/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DeploymentStatus.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DeploymentStatus.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.PolicyRule.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.PolicyRule.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Lifecycle.dhall
, default = ./../defaults/io.k8s.api.core.v1.Lifecycle.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
, default = ./../defaults/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1alpha1.VolumeAttributesClass.dhall
, default =
    ./../defaults/io.k8s.api.storage.v1alpha1.VolumeAttributesClass.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ComponentCondition.dhall
, default = ./../defaults/io.k8s.api.core.v1.ComponentCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.KeyToPath.dhall
, default = ./../defaults/io.k8s.api.core.v1.KeyToPath.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodTemplateList.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodTemplateList.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSINodeList.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSINodeList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.SelfSubjectReview.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.SelfSubjectReview.dhall
}
{ Type =
    ./../types/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
, default =
    ./../defaults/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1beta1.ParamRef.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ParamRef.dhall
}
{ Type =
    ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Affinity.dhall
, default = ./../defaults/io.k8s.api.core.v1.Affinity.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchema.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.FlowSchema.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.WebhookClientConfig.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.WebhookClientConfig.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.NonResourceRule.dhall
, default = ./../defaults/io.k8s.api.authorization.v1.NonResourceRule.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SELinuxOptions.dhall
, default = ./../defaults/io.k8s.api.core.v1.SELinuxOptions.dhall
}
{ Type =
    ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
, default =
    ./../defaults/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSetCondition.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSetCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
, default = ./../defaults/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
}
{ Type =
    ./../types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
, default =
    ./../defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.MatchResources.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.MatchResources.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
, default = ./../defaults/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EventList.dhall
, default = ./../defaults/io.k8s.api.core.v1.EventList.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.StorageClassList.dhall
, default = ./../defaults/io.k8s.api.storage.v1.StorageClassList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NamespaceStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.NamespaceStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodStatus.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.JobCondition.dhall
, default = ./../defaults/io.k8s.api.batch.v1.JobCondition.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EphemeralContainer.dhall
, default = ./../defaults/io.k8s.api.core.v1.EphemeralContainer.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodTemplateSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeFeatures.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeFeatures.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Namespace.dhall
, default = ./../defaults/io.k8s.api.core.v1.Namespace.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.PodFailurePolicy.dhall
, default = ./../defaults/io.k8s.api.batch.v1.PodFailurePolicy.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Service.dhall
, default = ./../defaults/io.k8s.api.core.v1.Service.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicyList.dhall
, default = ./../defaults/io.k8s.api.networking.v1.NetworkPolicyList.dhall
}
{ Type = ./../types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSINodeDriver.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSINodeDriver.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSINodeSpec.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSINodeSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VolumeDevice.dhall
, default = ./../defaults/io.k8s.api.core.v1.VolumeDevice.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1alpha1.VolumeAttributesClassList.dhall
, default =
    ./../defaults/io.k8s.api.storage.v1alpha1.VolumeAttributesClassList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration.dhall
}
{ Type =
    ./../types/io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
, default =
    ./../defaults/io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.ParamKind.dhall
, default = ./../defaults/io.k8s.api.admissionregistration.v1.ParamKind.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimList.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimList.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.FlowSchema.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.FlowSchema.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
, default = ./../defaults/io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.Validation.dhall
, default = ./../defaults/io.k8s.api.admissionregistration.v1.Validation.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodResourceClaim.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodResourceClaim.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.PodSchedulingContextList.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContextList.dhall
}
{ Type =
    ./../types/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.ServiceBackendPort.dhall
, default = ./../defaults/io.k8s.api.networking.v1.ServiceBackendPort.dhall
}
{ Type = ./../types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
, default =
    ./../defaults/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1alpha1.ParamKind.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ParamKind.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecretReference.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecretReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeList.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeList.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
, default =
    ./../defaults/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.JobTemplateSpec.dhall
, default = ./../defaults/io.k8s.api.batch.v1.JobTemplateSpec.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DaemonSetList.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DaemonSetList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.SuccessPolicy.dhall
, default = ./../defaults/io.k8s.api.batch.v1.SuccessPolicy.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.RoleBindingList.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.RoleBindingList.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ClientIPConfig.dhall
, default = ./../defaults/io.k8s.api.core.v1.ClientIPConfig.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.TopologySpreadConstraint.dhall
, default = ./../defaults/io.k8s.api.core.v1.TopologySpreadConstraint.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference.dhall
}
{ Type =
    ./../types/io.k8s.api.certificates.v1.CertificateSigningRequestList.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1.CertificateSigningRequestList.dhall
}
{ Type = ./../types/io.k8s.api.policy.v1.PodDisruptionBudget.dhall
, default = ./../defaults/io.k8s.api.policy.v1.PodDisruptionBudget.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SessionAffinityConfig.dhall
, default = ./../defaults/io.k8s.api.core.v1.SessionAffinityConfig.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeSelectorRequirement.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeSelectorRequirement.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
}
{ Type =
    ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.TokenReview.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.TokenReview.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeCondition.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeCondition.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressServiceBackend.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressServiceBackend.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.BasicDevice.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.BasicDevice.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.RoleList.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.RoleList.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecretProjection.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecretProjection.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.CSIStorageCapacity.dhall
, default = ./../defaults/io.k8s.api.storage.v1.CSIStorageCapacity.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1alpha1.Variable.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.Variable.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DaemonSetSpec.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DaemonSetSpec.dhall
}
{ Type = ./../types/io.k8s.api.node.v1.Scheduling.dhall
, default = ./../defaults/io.k8s.api.node.v1.Scheduling.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LimitRange.dhall
, default = ./../defaults/io.k8s.api.core.v1.LimitRange.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.ParentReference.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.ParentReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, default = ./../defaults/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall
, default = ./../defaults/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Binding.dhall
, default = ./../defaults/io.k8s.api.core.v1.Binding.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
, default = ./../defaults/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Node.dhall
, default = ./../defaults/io.k8s.api.core.v1.Node.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.AggregationRule.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.AggregationRule.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Probe.dhall
, default = ./../defaults/io.k8s.api.core.v1.Probe.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LoadBalancerStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.LoadBalancerStatus.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSet.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSet.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
}
{ Type =
    ./../types/io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.RoleBinding.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.RoleBinding.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeList.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.ServiceReference.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ServiceReference.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1beta1.AuditAnnotation.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1beta1.AuditAnnotation.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ComponentStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.ComponentStatus.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.DaemonEndpoint.dhall
, default = ./../defaults/io.k8s.api.core.v1.DaemonEndpoint.dhall
}
{ Type = ./../types/io.k8s.api.coordination.v1alpha1.LeaseCandidateList.dhall
, default =
    ./../defaults/io.k8s.api.coordination.v1alpha1.LeaseCandidateList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LimitRangeSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.LimitRangeSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall
, default = ./../defaults/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.FCVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.FCVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceRequirements.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceRequirements.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.TCPSocketAction.dhall
, default = ./../defaults/io.k8s.api.core.v1.TCPSocketAction.dhall
}
{ Type = ./../types/io.k8s.api.events.v1.EventSeries.dhall
, default = ./../defaults/io.k8s.api.events.v1.EventSeries.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.AppArmorProfile.dhall
, default = ./../defaults/io.k8s.api.core.v1.AppArmorProfile.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.RoleRef.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.RoleRef.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SelfSubjectRulesReview.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SelfSubjectRulesReview.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerStateRunning.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerStateRunning.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMap.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMap.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceClassList.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceClassList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.FlockerVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.FlockerVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceFieldSelector.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceFieldSelector.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DeploymentCondition.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DeploymentCondition.dhall
}
{ Type = ./../types/io.k8s.api.events.v1.EventList.dhall
, default = ./../defaults/io.k8s.api.events.v1.EventList.dhall
}
{ Type = ./../types/io.k8s.api.policy.v1.PodDisruptionBudgetList.dhall
, default = ./../defaults/io.k8s.api.policy.v1.PodDisruptionBudgetList.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EnvVarSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.EnvVarSource.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServiceSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServiceSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerStateTerminated.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerStateTerminated.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EnvVar.dhall
, default = ./../defaults/io.k8s.api.core.v1.EnvVar.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressRule.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressRule.dhall
}
{ Type =
    ./../types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
, default =
    ./../defaults/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.Role.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.Role.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.Job.dhall
, default = ./../defaults/io.k8s.api.batch.v1.Job.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SeccompProfile.dhall
, default = ./../defaults/io.k8s.api.core.v1.SeccompProfile.dhall
}
{ Type = ./../types/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
, default =
    ./../defaults/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
, default = ./../defaults/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LimitRangeList.dhall
, default = ./../defaults/io.k8s.api.core.v1.LimitRangeList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodResourceClaimStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodResourceClaimStatus.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.HTTPIngressPath.dhall
, default = ./../defaults/io.k8s.api.networking.v1.HTTPIngressPath.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.rbac.v1.ClusterRoleList.dhall
, default = ./../defaults/io.k8s.api.rbac.v1.ClusterRoleList.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.GroupSubject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.GroupSubject.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodAntiAffinity.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodAntiAffinity.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeSpec.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeSpec.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeError.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeError.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.IPAddressList.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.IPAddressList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeAddress.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeAddress.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SelfSubjectAccessReview.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SelfSubjectAccessReview.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.MatchResources.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.MatchResources.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Volume.dhall
, default = ./../defaults/io.k8s.api.core.v1.Volume.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ReplicationControllerList.dhall
, default = ./../defaults/io.k8s.api.core.v1.ReplicationControllerList.dhall
}
{ Type =
    ./../types/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1alpha1.Validation.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.Validation.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.ReplicaSetList.dhall
, default = ./../defaults/io.k8s.api.apps.v1.ReplicaSetList.dhall
}
{ Type = ./../types/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
, default = ./../defaults/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
}
{ Type = ./../types/io.k8s.api.scheduling.v1.PriorityClassList.dhall
, default = ./../defaults/io.k8s.api.scheduling.v1.PriorityClassList.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.PodFailurePolicyRule.dhall
, default = ./../defaults/io.k8s.api.batch.v1.PodFailurePolicyRule.dhall
}
{ Type =
    ./../types/io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus.dhall
, default =
    ./../defaults/io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.SecretList.dhall
, default = ./../defaults/io.k8s.api.core.v1.SecretList.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
, default =
    ./../defaults/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.MatchCondition.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.MatchCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VolumeMountStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.VolumeMountStatus.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.DeviceClass.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.DeviceClass.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NFSVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.NFSVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.HTTPGetAction.dhall
, default = ./../defaults/io.k8s.api.core.v1.HTTPGetAction.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.TypedObjectReference.dhall
, default = ./../defaults/io.k8s.api.core.v1.TypedObjectReference.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.EndpointPort.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.EndpointPort.dhall
}
{ Type =
    ./../types/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
, default =
    ./../defaults/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ServiceList.dhall
, default = ./../defaults/io.k8s.api.core.v1.ServiceList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NamespaceCondition.dhall
, default = ./../defaults/io.k8s.api.core.v1.NamespaceCondition.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressSpec.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.MetricStatus.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.MetricStatus.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LoadBalancerIngress.dhall
, default = ./../defaults/io.k8s.api.core.v1.LoadBalancerIngress.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.FlexVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.FlexVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
, default = ./../defaults/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
, default = ./../defaults/io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1.Subject.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1.Subject.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.JobStatus.dhall
, default = ./../defaults/io.k8s.api.batch.v1.JobStatus.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaList.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.FlowSchemaList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall
, default = ./../defaults/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.VolumeMount.dhall
, default = ./../defaults/io.k8s.api.core.v1.VolumeMount.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceClaim.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceClaim.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.DaemonSetCondition.dhall
, default = ./../defaults/io.k8s.api.apps.v1.DaemonSetCondition.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1.TokenRequestSpec.dhall
, default = ./../defaults/io.k8s.api.authentication.v1.TokenRequestSpec.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IPBlock.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IPBlock.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.EndpointSliceList.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.EndpointSliceList.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
}
{ Type = ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions.dhall
, default = ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
}
{ Type =
    ./../types/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
, default =
    ./../defaults/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.RBDVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.RBDVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.ResourceClaim.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.ResourceClaim.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.LinuxContainerUser.dhall
, default = ./../defaults/io.k8s.api.core.v1.LinuxContainerUser.dhall
}
{ Type = ./../types/io.k8s.api.node.v1.RuntimeClassList.dhall
, default = ./../defaults/io.k8s.api.node.v1.RuntimeClassList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
}
{ Type = ./../types/io.k8s.api.batch.v1.CronJob.dhall
, default = ./../defaults/io.k8s.api.batch.v1.CronJob.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1.IngressList.dhall
, default = ./../defaults/io.k8s.api.networking.v1.IngressList.dhall
}
{ Type = ./../types/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall
, default = ./../defaults/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList.dhall
}
{ Type =
    ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition.dhall
, default =
    ./../defaults/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ContainerResizePolicy.dhall
, default = ./../defaults/io.k8s.api.core.v1.ContainerResizePolicy.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
, default = ./../defaults/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
}
{ Type =
    ./../types/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
}
{ Type =
    ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
, default =
    ./../defaults/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v2.MetricSpec.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v2.MetricSpec.dhall
}
{ Type =
    ./../types/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
, default =
    ./../defaults/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.ResourceHealth.dhall
, default = ./../defaults/io.k8s.api.core.v1.ResourceHealth.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool.dhall
}
{ Type = ./../types/io.k8s.api.apps.v1.StatefulSetStatus.dhall
, default = ./../defaults/io.k8s.api.apps.v1.StatefulSetStatus.dhall
}
{ Type = ./../types/io.k8s.api.networking.v1beta1.ServiceCIDRList.dhall
, default = ./../defaults/io.k8s.api.networking.v1beta1.ServiceCIDRList.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.Event.dhall
, default = ./../defaults/io.k8s.api.core.v1.Event.dhall
}
{ Type =
    ./../types/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList.dhall
, default =
    ./../defaults/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeSystemInfo.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeSystemInfo.dhall
}
{ Type = ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec.dhall
, default = ./../defaults/io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
, default =
    ./../defaults/io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.CrossVersionObjectReference.dhall
, default =
    ./../defaults/io.k8s.api.autoscaling.v1.CrossVersionObjectReference.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.NodeConfigStatus.dhall
, default = ./../defaults/io.k8s.api.core.v1.NodeConfigStatus.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.PodReadinessGate.dhall
, default = ./../defaults/io.k8s.api.core.v1.PodReadinessGate.dhall
}
{ Type = ./../types/io.k8s.api.storage.v1.VolumeNodeResources.dhall
, default = ./../defaults/io.k8s.api.storage.v1.VolumeNodeResources.dhall
}
{ Type = ./../types/io.k8s.api.autoscaling.v1.Scale.dhall
, default = ./../defaults/io.k8s.api.autoscaling.v1.Scale.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.EndpointHints.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.EndpointHints.dhall
}
{ Type = ./../types/io.k8s.api.discovery.v1.EndpointConditions.dhall
, default = ./../defaults/io.k8s.api.discovery.v1.EndpointConditions.dhall
}
{ Type =
    ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
, default =
    ./../defaults/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
, default =
    ./../defaults/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EndpointSubset.dhall
, default = ./../defaults/io.k8s.api.core.v1.EndpointSubset.dhall
}
{ Type = ./../types/io.k8s.api.authentication.v1beta1.SelfSubjectReview.dhall
, default =
    ./../defaults/io.k8s.api.authentication.v1beta1.SelfSubjectReview.dhall
}
{ Type = ./../types/io.k8s.api.authorization.v1.ResourceAttributes.dhall
, default = ./../defaults/io.k8s.api.authorization.v1.ResourceAttributes.dhall
}
{ Type = ./../types/io.k8s.api.core.v1.EnvFromSource.dhall
, default = ./../defaults/io.k8s.api.core.v1.EnvFromSource.dhall
}
{ Type = ./../types/io.k8s.api.admissionregistration.v1.Variable.dhall
, default = ./../defaults/io.k8s.api.admissionregistration.v1.Variable.dhall
}
{ activeDeadlineSeconds = None Natural
, affinity = None ./../types/io.k8s.api.core.v1.Affinity.dhall
, automountServiceAccountToken = None Bool
, dnsConfig = None ./../types/io.k8s.api.core.v1.PodDNSConfig.dhall
, dnsPolicy = None Text
, enableServiceLinks = None Bool
, ephemeralContainers =
    None (List ./../types/io.k8s.api.core.v1.EphemeralContainer.dhall)
, hostAliases = None (List ./../types/io.k8s.api.core.v1.HostAlias.dhall)
, hostIPC = None Bool
, hostNetwork = None Bool
, hostPID = None Bool
, hostUsers = None Bool
, hostname = None Text
, imagePullSecrets =
    None (List ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall)
, initContainers = None (List ./../types/io.k8s.api.core.v1.Container.dhall)
, nodeName = None Text
, nodeSelector = None (List { mapKey : Text, mapValue : Text })
, os = None ./../types/io.k8s.api.core.v1.PodOS.dhall
, overhead =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, preemptionPolicy = None Text
, priority = None Integer
, priorityClassName = None Text
, readinessGates =
    None (List ./../types/io.k8s.api.core.v1.PodReadinessGate.dhall)
, resourceClaims =
    None (List ./../types/io.k8s.api.core.v1.PodResourceClaim.dhall)
, restartPolicy = None Text
, runtimeClassName = None Text
, schedulerName = None Text
, schedulingGates =
    None (List ./../types/io.k8s.api.core.v1.PodSchedulingGate.dhall)
, securityContext = None ./../types/io.k8s.api.core.v1.PodSecurityContext.dhall
, serviceAccount = None Text
, serviceAccountName = None Text
, setHostnameAsFQDN = None Bool
, shareProcessNamespace = None Bool
, subdomain = None Text
, terminationGracePeriodSeconds = None Natural
, tolerations = None (List ./../types/io.k8s.api.core.v1.Toleration.dhall)
, topologySpreadConstraints =
    None (List ./../types/io.k8s.api.core.v1.TopologySpreadConstraint.dhall)
, volumes = None (List ./../types/io.k8s.api.core.v1.Volume.dhall)
}
{ apiVersion = "v1", kind = "ComponentStatusList" }
{ names = None (List Text), sizeBytes = None Natural }
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "ValidatingWebhookConfigurationList"
}
{ matchExpressions =
    None
      ( List
          ./../types/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
      )
}
{ error = None Text }
{ count = None Natural
, lastObservedTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
}
{ labelSelectorPath = None Text }
{ default =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, defaultRequest =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, max =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, maxLimitRequestRatio =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, min =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ running = None ./../types/io.k8s.api.core.v1.ContainerStateRunning.dhall
, terminated = None ./../types/io.k8s.api.core.v1.ContainerStateTerminated.dhall
, waiting = None ./../types/io.k8s.api.core.v1.ContainerStateWaiting.dhall
}
{ continueToken = None Text }
{ queuing =
    None ./../types/io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration.dhall
}
{ audience = None Text, expirationSeconds = None Natural }
{=}
{ apiVersion = "v1", kind = "ResourceQuotaList" }
{ nonResourceAttributes =
    None ./../types/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, resourceAttributes =
    None ./../types/io.k8s.api.authorization.v1.ResourceAttributes.dhall
}
{ conditions =
    None (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, observedGeneration = None Natural
, typeChecking =
    None ./../types/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
}
{ fsType = None Text
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
}
{ apiVersion = "admissionregistration.k8s.io/v1alpha1"
, kind = "ValidatingAdmissionPolicyList"
}
{ rawSelector = None Text
, requirements =
    None
      ( List
          ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
      )
}
{ auditAnnotations =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
      )
, failurePolicy = None Text
, matchConditions =
    None
      (List ./../types/io.k8s.api.admissionregistration.v1.MatchCondition.dhall)
, matchConstraints =
    None ./../types/io.k8s.api.admissionregistration.v1.MatchResources.dhall
, paramKind =
    None ./../types/io.k8s.api.admissionregistration.v1.ParamKind.dhall
, validations =
    None (List ./../types/io.k8s.api.admissionregistration.v1.Validation.dhall)
, variables =
    None (List ./../types/io.k8s.api.admissionregistration.v1.Variable.dhall)
}
{ apiVersion = "v1", kind = "APIGroupList" }
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, observedGeneration = None Natural
}
{ userInfo = None ./../types/io.k8s.api.authentication.v1.UserInfo.dhall }
{ minReadySeconds = None Natural
, paused = None Bool
, progressDeadlineSeconds = None Natural
, replicas = None Natural
, revisionHistoryLimit = None Natural
, strategy = None ./../types/io.k8s.api.apps.v1.DeploymentStrategy.dhall
}
{ replicas = None Natural }
{ scale =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
, status =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus.dhall
}
{ apiVersion = "rbac.authorization.k8s.io/v1"
, kind = "ClusterRole"
, aggregationRule = None ./../types/io.k8s.api.rbac.v1.AggregationRule.dhall
, rules = None (List ./../types/io.k8s.api.rbac.v1.PolicyRule.dhall)
}
{ apiVersion = "v1", kind = "EndpointsList" }
{ exec = None ./../types/io.k8s.api.core.v1.ExecAction.dhall
, httpGet = None ./../types/io.k8s.api.core.v1.HTTPGetAction.dhall
, sleep = None ./../types/io.k8s.api.core.v1.SleepAction.dhall
, tcpSocket = None ./../types/io.k8s.api.core.v1.TCPSocketAction.dhall
}
{ name = None Text, optional = None Bool }
{ apiVersion = "storagemigration.k8s.io/v1alpha1"
, kind = "StorageVersionMigrationList"
}
{ lendablePercent = None Natural, nominalConcurrencyShares = None Natural }
{=}
{ message = None Text, reason = None Text }
{ items = None (List ./../types/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall)
}
{ apiVersion = "admissionregistration.k8s.io/v1alpha1"
, kind = "ValidatingAdmissionPolicy"
, spec =
    None
      ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec.dhall
, status =
    None
      ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus.dhall
}
{ name = None Text
, namespace = None Text
, parameterNotFoundAction = None Text
, selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ loadBalancer =
    None ./../types/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
}
{ active = None (List ./../types/io.k8s.api.core.v1.ObjectReference.dhall)
, lastScheduleTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastSuccessfulTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ name = None Text, optional = None Bool }
{ apiVersion = "coordination.k8s.io/v1alpha1"
, kind = "LeaseCandidate"
, spec =
    None ./../types/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
}
{ apiVersion = "v1", kind = "PodList" }
{ apiVersion = "certificates.k8s.io/v1"
, kind = "CertificateSigningRequest"
, status =
    None
      ./../types/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
, status = None Text
, type = None Text
}
{ name = None Text, namespace = None Text, port = None Natural }
{ resource = None ./../types/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, service = None ./../types/io.k8s.api.networking.v1.IngressServiceBackend.dhall
}
{ targetVolumeAttributesClassName = None Text }
{=}
{ hard =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, scopeSelector = None ./../types/io.k8s.api.core.v1.ScopeSelector.dhall
, scopes = None (List Text)
}
{ apiVersion = "apps/v1"
, kind = "ControllerRevision"
, data = None ./../types/io.k8s.apimachinery.pkg.runtime.RawExtension.dhall
}
{ appProtocol = None Text, name = None Text, protocol = None Text }
{ apiVersion = Some "v1"
, kind = Some "PersistentVolumeClaim"
, spec = None ./../types/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
}
{ currentCPUUtilizationPercentage = None Natural
, lastScaleTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, observedGeneration = None Natural
}
{ apiVersion = "admissionregistration.k8s.io/v1beta1"
, kind = "ValidatingAdmissionPolicyBinding"
, spec =
    None
      ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ apiVersion = "v1"
, kind = "Endpoints"
, subsets = None (List ./../types/io.k8s.api.core.v1.EndpointSubset.dhall)
}
{=}
{=}
{ availableReplicas = None Natural
, conditions =
    None
      (List ./../types/io.k8s.api.core.v1.ReplicationControllerCondition.dhall)
, fullyLabeledReplicas = None Natural
, observedGeneration = None Natural
, readyReplicas = None Natural
}
{ auditAnnotations =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation.dhall
      )
, failurePolicy = None Text
, matchConditions =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1alpha1.MatchCondition.dhall
      )
, matchConstraints =
    None
      ./../types/io.k8s.api.admissionregistration.v1alpha1.MatchResources.dhall
, paramKind =
    None ./../types/io.k8s.api.admissionregistration.v1alpha1.ParamKind.dhall
, validations =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1alpha1.Validation.dhall
      )
, variables =
    None
      (List ./../types/io.k8s.api.admissionregistration.v1alpha1.Variable.dhall)
}
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "ValidatingAdmissionPolicyList"
}
{ linux = None ./../types/io.k8s.api.core.v1.LinuxContainerUser.dhall }
{ matchExpressions =
    None (List ./../types/io.k8s.api.core.v1.NodeSelectorRequirement.dhall)
, matchFields =
    None (List ./../types/io.k8s.api.core.v1.NodeSelectorRequirement.dhall)
}
{ apiVersion = "internal.apiserver.k8s.io/v1alpha1"
, kind = "StorageVersionList"
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ apiVersion = "v1", kind = "ServiceAccountList" }
{ readOnly = None Bool }
{ apiVersion = "v1"
, kind = "ReplicationController"
, spec = None ./../types/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
}
{ conditions =
    None (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, observedGeneration = None Natural
, typeChecking =
    None ./../types/io.k8s.api.admissionregistration.v1beta1.TypeChecking.dhall
}
{ apiVersion = "policy/v1"
, kind = "Eviction"
, deleteOptions =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
}
{ conditions = None ./../types/io.k8s.api.discovery.v1.EndpointConditions.dhall
, deprecatedTopology = None (List { mapKey : Text, mapValue : Text })
, hints = None ./../types/io.k8s.api.discovery.v1.EndpointHints.dhall
, hostname = None Text
, nodeName = None Text
, targetRef = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, zone = None Text
}
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1beta3"
, kind = "PriorityLevelConfiguration"
, spec =
    None
      ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec.dhall
, status =
    None
      ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus.dhall
}
{ apiVersion = "apps/v1", kind = "DeploymentList" }
{ apiVersion = "scheduling.k8s.io/v1"
, kind = "PriorityClass"
, description = None Text
, globalDefault = None Bool
, preemptionPolicy = None Text
}
{=}
{ apiVersion = "storage.k8s.io/v1", kind = "CSIDriverList" }
{ apiVersion = "coordination.k8s.io/v1"
, kind = "Lease"
, spec = None ./../types/io.k8s.api.coordination.v1.LeaseSpec.dhall
}
{ apiVersion = "v1"
, kind = "Pod"
, spec = None ./../types/io.k8s.api.core.v1.PodSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.PodStatus.dhall
}
{ timeAdded = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, value = None Text
}
{ items = None (List ./../types/io.k8s.api.core.v1.KeyToPath.dhall)
, name = None Text
, optional = None Bool
}
{=}
{ apiVersion = "coordination.k8s.io/v1", kind = "LeaseList" }
{ minReadySeconds = None Natural
, ordinals = None ./../types/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
, persistentVolumeClaimRetentionPolicy =
    None
      ./../types/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
, podManagementPolicy = None Text
, replicas = None Natural
, revisionHistoryLimit = None Natural
, updateStrategy =
    None ./../types/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
, volumeClaimTemplates =
    None (List ./../types/io.k8s.api.core.v1.PersistentVolumeClaim.dhall)
}
{ minReplicas = None Natural, targetCPUUtilizationPercentage = None Natural }
{ apiVersion = "storagemigration.k8s.io/v1alpha1"
, kind = "StorageVersionMigration"
, spec =
    None
      ./../types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
, status =
    None
      ./../types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
}
{=}
{ labelSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, name = None Text
, optional = None Bool
, signerName = None Text
}
{ apiVersion = "autoscaling/v1"
, kind = "HorizontalPodAutoscaler"
, spec =
    None ./../types/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec.dhall
, status =
    None
      ./../types/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus.dhall
}
{ apiVersion = "rbac.authorization.k8s.io/v1", kind = "ClusterRoleBindingList" }
{=}
{ fieldRef = None ./../types/io.k8s.api.core.v1.ObjectFieldSelector.dhall
, mode = None Natural
, resourceFieldRef =
    None ./../types/io.k8s.api.core.v1.ResourceFieldSelector.dhall
}
{ apiGroups = None (List Text)
, apiVersions = None (List Text)
, operations = None (List Text)
, resourceNames = None (List Text)
, resources = None (List Text)
, scope = None Text
}
{ matchAttribute = None Text, requests = None (List Text) }
{ controller = None Text
, devices =
    None ./../types/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
, nodeSelector = None ./../types/io.k8s.api.core.v1.NodeSelector.dhall
}
{ apiVersion = "v1"
, kind = "Status"
, code = None Natural
, details =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
, message = None Text
, reason = None Text
, status = None Text
}
{ resources = None (List ./../types/io.k8s.api.core.v1.ResourceHealth.dhall) }
{ preferredDuringSchedulingIgnoredDuringExecution =
    None (List ./../types/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall)
, requiredDuringSchedulingIgnoredDuringExecution =
    None ./../types/io.k8s.api.core.v1.NodeSelector.dhall
}
{ namespace = None Text }
{ endPort = None Natural
, port = None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, protocol = None Text
}
{ audiences = None (List Text)
, authenticated = None Bool
, error = None Text
, user = None ./../types/io.k8s.api.authentication.v1.UserInfo.dhall
}
{ clusterTrustBundle =
    None ./../types/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
, configMap = None ./../types/io.k8s.api.core.v1.ConfigMapProjection.dhall
, downwardAPI = None ./../types/io.k8s.api.core.v1.DownwardAPIProjection.dhall
, secret = None ./../types/io.k8s.api.core.v1.SecretProjection.dhall
, serviceAccountToken =
    None ./../types/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
}
{ apiVersion = "v1"
, kind = "PodTemplate"
, template = None ./../types/io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ evaluationError = None Text }
{ chapAuthDiscovery = None Bool
, chapAuthSession = None Bool
, fsType = None Text
, initiatorName = None Text
, iscsiInterface = None Text
, portals = None (List Text)
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
}
{ add = None (List Text), drop = None (List Text) }
{ features = None ./../types/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
, name = None Text
}
{ apiVersion = "v1"
, kind = "ServiceAccount"
, automountServiceAccountToken = None Bool
, imagePullSecrets =
    None (List ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall)
, secrets = None (List ./../types/io.k8s.api.core.v1.ObjectReference.dhall)
}
{ activeDeadlineSeconds = None Natural
, backoffLimit = None Natural
, backoffLimitPerIndex = None Natural
, completionMode = None Text
, completions = None Natural
, managedBy = None Text
, manualSelector = None Bool
, maxFailedIndexes = None Natural
, parallelism = None Natural
, podFailurePolicy = None ./../types/io.k8s.api.batch.v1.PodFailurePolicy.dhall
, podReplacementPolicy = None Text
, selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, successPolicy = None ./../types/io.k8s.api.batch.v1.SuccessPolicy.dhall
, suspend = None Bool
, ttlSecondsAfterFinished = None Natural
}
{ apiVersion = "storage.k8s.io/v1beta1", kind = "VolumeAttributesClassList" }
{ expressionWarnings =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1beta1.ExpressionWarning.dhall
      )
}
{ opaque =
    None ./../types/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, requests = None (List Text)
}
{ volumeClaimTemplate =
    None ./../types/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
}
{ rollingUpdate =
    None ./../types/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
, type = None Text
}
{ fieldPath = None Text
, name = None Text
, namespace = None Text
, resourceVersion = None Text
, uid = None Text
}
{ attachRequired = None Bool
, fsGroupPolicy = None Text
, podInfoOnMount = None Bool
, requiresRepublish = None Bool
, seLinuxMount = None Bool
, storageCapacity = None Bool
, tokenRequests =
    None (List ./../types/io.k8s.api.storage.v1.TokenRequest.dhall)
, volumeLifecycleModes = None (List Text)
}
{ name = None Text, value = None Text }
{ apiVersion = "storage.k8s.io/v1", kind = "CSIDriver" }
{ podFixed =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{=}
{ apiVersion = "v1", kind = "WatchEvent" }
{ apiVersion = "authentication.k8s.io/v1"
, kind = "TokenRequest"
, status = None ./../types/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
}
{ conditions =
    None
      ( List
          ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
      )
, currentMetrics =
    None (List ./../types/io.k8s.api.autoscaling.v2.MetricStatus.dhall)
, currentReplicas = None Natural
, lastScaleTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, observedGeneration = None Natural
}
{ apiVersion = "autoscaling/v1", kind = "HorizontalPodAutoscalerList" }
{ apiGroup = None Text, namespace = None Text, scope = None Text }
{ fsType = None Text
, protectionDomain = None Text
, readOnly = None Bool
, sslEnabled = None Bool
, storageMode = None Text
, storagePool = None Text
, volumeName = None Text
}
{ succeededCount = None Natural, succeededIndexes = None Text }
{ apiVersion = "apps/v1", kind = "StatefulSetList" }
{=}
{ acquireTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, holderIdentity = None Text
, leaseDurationSeconds = None Natural
, leaseTransitions = None Natural
, preferredHolder = None Text
, renewTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, strategy = None Text
}
{ apiVersion = "networking.k8s.io/v1beta1"
, kind = "IPAddress"
, spec = None ./../types/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
}
{ fsType = None Text, readOnly = None Bool }
{ configMap = None ./../types/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
}
{ rollingUpdate =
    None ./../types/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
, type = None Text
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ expirationSeconds = None Natural }
{ conditions =
    None
      ( List
          ./../types/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition.dhall
      )
}
{ apiVersion = "batch/v1", kind = "JobList" }
{ service = None Text }
{ apiVersion = "storage.k8s.io/v1"
, kind = "VolumeAttachment"
, status = None ./../types/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
}
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "MutatingWebhookConfiguration"
, webhooks =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
      )
}
{=}
{=}
{ apiVersion = "apps/v1"
, kind = "DaemonSet"
, spec = None ./../types/io.k8s.api.apps.v1.DaemonSetSpec.dhall
, status = None ./../types/io.k8s.api.apps.v1.DaemonSetStatus.dhall
}
{=}
{=}
{ conversion =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
, preserveUnknownFields = None Bool
}
{ apiVersion = "apps/v1"
, kind = "Deployment"
, spec = None ./../types/io.k8s.api.apps.v1.DeploymentSpec.dhall
, status = None ./../types/io.k8s.api.apps.v1.DeploymentStatus.dhall
}
{ apiVersion = "admissionregistration.k8s.io/v1alpha1"
, kind = "ValidatingAdmissionPolicyBindingList"
}
{ fsType = None Text
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
, volumeName = None Text
, volumeNamespace = None Text
}
{ apiVersion = "node.k8s.io/v1"
, kind = "RuntimeClass"
, overhead = None ./../types/io.k8s.api.node.v1.Overhead.dhall
, scheduling = None ./../types/io.k8s.api.node.v1.Scheduling.dhall
}
{ lastProbeTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{=}
{ hostnames = None (List Text) }
{ apiVersion = "storage.k8s.io/v1"
, kind = "StorageClass"
, allowVolumeExpansion = None Bool
, allowedTopologies =
    None (List ./../types/io.k8s.api.core.v1.TopologySelectorTerm.dhall)
, mountOptions = None (List Text)
, parameters = None (List { mapKey : Text, mapValue : Text })
, reclaimPolicy = None Text
, volumeBindingMode = None Text
}
{ allNodes = None Bool
, devices = None (List ./../types/io.k8s.api.resource.v1alpha3.Device.dhall)
, nodeName = None Text
, nodeSelector = None ./../types/io.k8s.api.core.v1.NodeSelector.dhall
}
{ message = None Text, messageExpression = None Text, reason = None Text }
{ apiVersion = "networking.k8s.io/v1"
, kind = "NetworkPolicy"
, spec = None ./../types/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
}
{=}
{ apiVersion = None Text }
{=}
{ fsType = None Text
, nodePublishSecretRef =
    None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
, readOnly = None Bool
, volumeAttributes = None (List { mapKey : Text, mapValue : Text })
}
{ apiGroup = None Text }
{ preferredDuringSchedulingIgnoredDuringExecution =
    None (List ./../types/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall)
, requiredDuringSchedulingIgnoredDuringExecution =
    None (List ./../types/io.k8s.api.core.v1.PodAffinityTerm.dhall)
}
{ hostname = None Text
, nodeName = None Text
, targetRef = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
}
{=}
{ apiVersion = "apiregistration.k8s.io/v1", kind = "APIServiceList" }
{ apiVersion = "storage.k8s.io/v1", kind = "CSINode" }
{ apiVersion = "v1", kind = "ConfigMapList" }
{ exempt =
    None
      ./../types/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
, limited =
    None
      ./../types/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
}
{ defaultMode = None Natural
, items = None (List ./../types/io.k8s.api.core.v1.KeyToPath.dhall)
, optional = None Bool
, secretName = None Text
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ apiVersion = "storage.k8s.io/v1", kind = "CSIStorageCapacityList" }
{=}
{ unsuitableNodes = None (List Text) }
{=}
{=}
{ apiVersion = "apps/v1", kind = "ControllerRevisionList" }
{ apiVersion = "autoscaling/v2", kind = "HorizontalPodAutoscalerList" }
{ expressionWarnings =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning.dhall
      )
}
{ apiVersion = "batch/v1", kind = "CronJobList" }
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1", kind = "FlowSchemaList" }
{ apiGroups = None (List Text)
, apiVersions = None (List Text)
, operations = None (List Text)
, resourceNames = None (List Text)
, resources = None (List Text)
, scope = None Text
}
{ matchLabelExpressions =
    None
      ( List
          ./../types/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
      )
}
{ matchResources =
    None
      ./../types/io.k8s.api.admissionregistration.v1alpha1.MatchResources.dhall
, paramRef =
    None ./../types/io.k8s.api.admissionregistration.v1alpha1.ParamRef.dhall
, policyName = None Text
, validationActions = None (List Text)
}
{ apiVersion = "apiextensions.k8s.io/v1"
, kind = "CustomResourceDefinitionList"
}
{ userInfo = None ./../types/io.k8s.api.authentication.v1.UserInfo.dhall }
{ apiVersion = "v1", kind = "APIResourceList" }
{ apiVersion = "networking.k8s.io/v1"
, kind = "Ingress"
, spec = None ./../types/io.k8s.api.networking.v1.IngressSpec.dhall
, status = None ./../types/io.k8s.api.networking.v1.IngressStatus.dhall
}
{ apiGroup = None Text, namespace = None Text }
{ labelSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, matchLabelKeys = None (List Text)
, mismatchLabelKeys = None (List Text)
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, namespaces = None (List Text)
}
{ nameservers = None (List Text)
, options = None (List ./../types/io.k8s.api.core.v1.PodDNSConfigOption.dhall)
, searches = None (List Text)
}
{ gmsaCredentialSpec = None Text
, gmsaCredentialSpecName = None Text
, hostProcess = None Bool
, runAsUserName = None Text
}
{ excludeResourceRules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
      )
, matchPolicy = None Text
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, resourceRules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
      )
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
, status = None Text
, type = None Text
}
{ allowPrivilegeEscalation = None Bool
, appArmorProfile = None ./../types/io.k8s.api.core.v1.AppArmorProfile.dhall
, capabilities = None ./../types/io.k8s.api.core.v1.Capabilities.dhall
, privileged = None Bool
, procMount = None Text
, readOnlyRootFilesystem = None Bool
, runAsGroup = None Natural
, runAsNonRoot = None Bool
, runAsUser = None Natural
, seLinuxOptions = None ./../types/io.k8s.api.core.v1.SELinuxOptions.dhall
, seccompProfile = None ./../types/io.k8s.api.core.v1.SeccompProfile.dhall
, windowsOptions =
    None ./../types/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
}
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "ValidatingAdmissionPolicyBinding"
, spec =
    None
      ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ values = None (List Text) }
{ conditions =
    None
      ( List
          ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
      )
}
{ apiVersion = "admissionregistration.k8s.io/v1alpha1"
, kind = "ValidatingAdmissionPolicyBinding"
, spec =
    None
      ./../types/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec.dhall
}
{ group = None Text
, readOnly = None Bool
, tenant = None Text
, user = None Text
}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "ResourceSliceList" }
{ error = None Text }
{ apiVersion = "apiextensions.k8s.io/v1"
, kind = "CustomResourceDefinition"
, status =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
}
{=}
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1"
, kind = "PriorityLevelConfigurationList"
}
{ apiVersion = "v1"
, kind = "ResourceQuota"
, spec = None ./../types/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
}
{ caBundle = None Text
, group = None Text
, insecureSkipTLSVerify = None Bool
, service =
    None
      ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
, version = None Text
}
{ path = None Text, verb = None Text }
{ hostIP = None Text
, hostPort = None Natural
, name = None Text
, protocol = None Text
}
{ ingress =
    None
      ( List
          ./../types/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
      )
}
{ command = None (List Text) }
{ distinguisherMethod =
    None ./../types/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
, matchingPrecedence = None Natural
, rules =
    None
      (List ./../types/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall)
}
{ concurrencyPolicy = None Text
, failedJobsHistoryLimit = None Natural
, startingDeadlineSeconds = None Natural
, successfulJobsHistoryLimit = None Natural
, suspend = None Bool
, timeZone = None Text
}
{=}
{ behavior =
    None
      ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
, metrics = None (List ./../types/io.k8s.api.autoscaling.v2.MetricSpec.dhall)
, minReplicas = None Natural
}
{ conditions =
    None (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, loadBalancer = None ./../types/io.k8s.api.core.v1.LoadBalancerStatus.dhall
}
{ name = None Text
, namespace = None Text
, parameterNotFoundAction = None Text
, selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{=}
{ apiGroups = None (List Text)
, apiVersions = None (List Text)
, operations = None (List Text)
, resources = None (List Text)
, scope = None Text
}
{ name = None Text, optional = None Bool }
{ controllerExpandSecretRef =
    None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, controllerPublishSecretRef =
    None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, fsType = None Text
, nodeExpandSecretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, nodePublishSecretRef =
    None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, nodeStageSecretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, readOnly = None Bool
, volumeAttributes = None (List { mapKey : Text, mapValue : Text })
}
{ apiVersion = "certificates.k8s.io/v1alpha1", kind = "ClusterTrustBundleList" }
{ continue = None Text
, remainingItemCount = None Natural
, resourceVersion = None Text
, selfLink = None Text
}
{=}
{=}
{ component = None Text, host = None Text }
{ apiVersion = "events.k8s.io/v1"
, kind = "Event"
, action = None Text
, deprecatedCount = None Natural
, deprecatedFirstTimestamp =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, deprecatedLastTimestamp =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, deprecatedSource = None ./../types/io.k8s.api.core.v1.EventSource.dhall
, note = None Text
, reason = None Text
, regarding = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, related = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, reportingController = None Text
, reportingInstance = None Text
, series = None ./../types/io.k8s.api.events.v1.EventSeries.dhall
, type = None Text
}
{ effect = None Text
, key = None Text
, operator = None Text
, tolerationSeconds = None Natural
, value = None Text
}
{ appProtocol = None Text
, name = None Text
, nodePort = None Natural
, protocol = None Text
, targetPort =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
}
{ openAPIV3Schema =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
}
{=}
{ fsType = None Text
, protectionDomain = None Text
, readOnly = None Bool
, sslEnabled = None Bool
, storageMode = None Text
, storagePool = None Text
, volumeName = None Text
}
{ handSize = None Natural
, queueLengthLimit = None Natural
, queues = None Natural
}
{ averageUtilization = None Natural
, averageValue =
    None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, value = None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{ conditions =
    None (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, disruptedPods =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
          }
      )
, observedGeneration = None Natural
}
{ basic = None ./../types/io.k8s.api.resource.v1alpha3.BasicDevice.dhall }
{ apiVersion = "storage.k8s.io/v1", kind = "VolumeAttachmentList" }
{ apiVersion = "authentication.k8s.io/v1alpha1"
, kind = "SelfSubjectReview"
, status =
    None
      ./../types/io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus.dhall
}
{ apiVersion = "v1", kind = "NamespaceList" }
{=}
{ apiVersion = "v1"
, kind = "PersistentVolume"
, spec = None ./../types/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
}
{ controller = None Text
, parameters =
    None
      ./../types/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
}
{=}
{ audiences = None (List Text), token = None Text }
{ kubeletEndpoint = None ./../types/io.k8s.api.core.v1.DaemonEndpoint.dhall }
{ group = None ./../types/io.k8s.api.flowcontrol.v1beta3.GroupSubject.dhall
, serviceAccount =
    None ./../types/io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject.dhall
, user = None ./../types/io.k8s.api.flowcontrol.v1beta3.UserSubject.dhall
}
{ from = None (List ./../types/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall)
, ports =
    None (List ./../types/io.k8s.api.networking.v1.NetworkPolicyPort.dhall)
}
{ fsType = None Text
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ causes =
    None
      (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall)
, group = None Text
, kind = None Text
, name = None Text
, retryAfterSeconds = None Natural
, uid = None Text
}
{ apiVersion = "discovery.k8s.io/v1"
, kind = "EndpointSlice"
, ports = None (List ./../types/io.k8s.api.discovery.v1.EndpointPort.dhall)
}
{ type = None Text }
{ apiVersion = "v1", kind = "PersistentVolumeClaimList" }
{=}
{ adminAccess = None Bool
, allocationMode = None Text
, count = None Natural
, selectors =
    None (List ./../types/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall)
}
{ args = None (List Text)
, command = None (List Text)
, env = None (List ./../types/io.k8s.api.core.v1.EnvVar.dhall)
, envFrom = None (List ./../types/io.k8s.api.core.v1.EnvFromSource.dhall)
, image = None Text
, imagePullPolicy = None Text
, lifecycle = None ./../types/io.k8s.api.core.v1.Lifecycle.dhall
, livenessProbe = None ./../types/io.k8s.api.core.v1.Probe.dhall
, ports = None (List ./../types/io.k8s.api.core.v1.ContainerPort.dhall)
, readinessProbe = None ./../types/io.k8s.api.core.v1.Probe.dhall
, resizePolicy =
    None (List ./../types/io.k8s.api.core.v1.ContainerResizePolicy.dhall)
, resources = None ./../types/io.k8s.api.core.v1.ResourceRequirements.dhall
, restartPolicy = None Text
, securityContext = None ./../types/io.k8s.api.core.v1.SecurityContext.dhall
, startupProbe = None ./../types/io.k8s.api.core.v1.Probe.dhall
, stdin = None Bool
, stdinOnce = None Bool
, terminationMessagePath = None Text
, terminationMessagePolicy = None Text
, tty = None Bool
, volumeDevices = None (List ./../types/io.k8s.api.core.v1.VolumeDevice.dhall)
, volumeMounts = None (List ./../types/io.k8s.api.core.v1.VolumeMount.dhall)
, workingDir = None Text
}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "ResourceClaimTemplate" }
{ name = None Text, uid = None Text }
{ apiVersion = "apps/v1"
, kind = "ReplicaSet"
, spec = None ./../types/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
, status = None ./../types/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
}
{=}
{ hosts = None (List Text), secretName = None Text }
{ collisionCount = None Natural
, conditions =
    None (List ./../types/io.k8s.api.apps.v1.DaemonSetCondition.dhall)
, numberAvailable = None Natural
, numberUnavailable = None Natural
, observedGeneration = None Natural
, updatedNumberScheduled = None Natural
}
{=}
{ apiGroups = None (List Text)
, apiVersions = None (List Text)
, operations = None (List Text)
, resourceNames = None (List Text)
, resources = None (List Text)
, scope = None Text
}
{ acceptedNames =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, conditions =
    None
      ( List
          ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
      )
, storedVersions = None (List Text)
}
{ appArmorProfile = None ./../types/io.k8s.api.core.v1.AppArmorProfile.dhall
, fsGroup = None Natural
, fsGroupChangePolicy = None Text
, runAsGroup = None Natural
, runAsNonRoot = None Bool
, runAsUser = None Natural
, seLinuxOptions = None ./../types/io.k8s.api.core.v1.SELinuxOptions.dhall
, seccompProfile = None ./../types/io.k8s.api.core.v1.SeccompProfile.dhall
, supplementalGroups = None (List Natural)
, supplementalGroupsPolicy = None Text
, sysctls = None (List ./../types/io.k8s.api.core.v1.Sysctl.dhall)
, windowsOptions =
    None ./../types/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
}
{ resourceVersion = None Text, uid = None Text }
{ signerName = None Text }
{ defaultMode = None Natural
, items = None (List ./../types/io.k8s.api.core.v1.KeyToPath.dhall)
, name = None Text
, optional = None Bool
}
{ apiVersion = "networking.k8s.io/v1", kind = "IngressClassList" }
{ policies =
    None (List ./../types/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall)
, selectPolicy = None Text
, stabilizationWindowSeconds = None Natural
}
{ apiVersion = "authorization.k8s.io/v1"
, kind = "LocalSubjectAccessReview"
, status =
    None ./../types/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ inlineVolumeSpec =
    None ./../types/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, persistentVolumeName = None Text
}
{=}
{ finalizers = None (List Text) }
{ apiVersion = "admissionregistration.k8s.io/v1beta1"
, kind = "ValidatingAdmissionPolicy"
, spec =
    None
      ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec.dhall
, status =
    None
      ./../types/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus.dhall
}
{ apiVersion = "rbac.authorization.k8s.io/v1"
, kind = "ClusterRoleBinding"
, subjects = None (List ./../types/io.k8s.api.rbac.v1.Subject.dhall)
}
{ extra = None (List { mapKey : Text, mapValue : List Text })
, groups = None (List Text)
, uid = None Text
, username = None Text
}
{ apiVersion = "v1"
, kind = "Secret"
, data = None (List { mapKey : Text, mapValue : Text })
, immutable = None Bool
, stringData = None (List { mapKey : Text, mapValue : Text })
, type = None Text
}
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1"
, kind = "PriorityLevelConfiguration"
, spec =
    None
      ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
, status =
    None
      ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
}
{ apiVersion = "networking.k8s.io/v1"
, kind = "IngressClass"
, spec = None ./../types/io.k8s.api.networking.v1.IngressClassSpec.dhall
}
{ resourceVersion = None Text, uid = None Text }
{=}
{ path = None Text
, readOnly = None Bool
, secretFile = None Text
, secretRef = None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
, user = None Text
}
{=}
{ expressionWarnings =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
      )
}
{=}
{ readOnly = None Bool }
{ `$ref` = None Text
, `$schema` = None Text
, default =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, description = None Text
, enum =
    None
      ( List
          ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
      )
, example =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, exclusiveMaximum = None Bool
, exclusiveMinimum = None Bool
, externalDocs =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
, format = None Text
, id = None Text
, maxItems = None Natural
, maxLength = None Natural
, maxProperties = None Natural
, maximum = None Double
, minItems = None Natural
, minLength = None Natural
, minProperties = None Natural
, minimum = None Double
, multipleOf = None Double
, nullable = None Bool
, pattern = None Text
, required = None (List Text)
, title = None Text
, type = None Text
, uniqueItems = None Bool
, x-kubernetes-embedded-resource = None Bool
, x-kubernetes-int-or-string = None Bool
, x-kubernetes-list-map-keys = None (List Text)
, x-kubernetes-list-type = None Text
, x-kubernetes-map-type = None Text
, x-kubernetes-preserve-unknown-fields = None Bool
, x-kubernetes-validations =
    None
      ( List
          ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
      )
}
{ allocatedResources =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, allocatedResourcesStatus =
    None (List ./../types/io.k8s.api.core.v1.ResourceStatus.dhall)
, containerID = None Text
, lastState = None ./../types/io.k8s.api.core.v1.ContainerState.dhall
, resources = None ./../types/io.k8s.api.core.v1.ResourceRequirements.dhall
, started = None Bool
, state = None ./../types/io.k8s.api.core.v1.ContainerState.dhall
, user = None ./../types/io.k8s.api.core.v1.ContainerUser.dhall
, volumeMounts =
    None (List ./../types/io.k8s.api.core.v1.VolumeMountStatus.dhall)
}
{ matchExpressions =
    None
      ( List
          ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
      )
, matchLabels = None (List { mapKey : Text, mapValue : Text })
}
{=}
{ apiGroups = None (List Text)
, resourceNames = None (List Text)
, resources = None (List Text)
}
{ whenDeleted = None Text, whenScaled = None Text }
{ fsType = None Text
, keyring = None Text
, pool = None Text
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, user = None Text
}
{ pullPolicy = None Text, reference = None Text }
{=}
{ accessModes = None (List Text)
, dataSource =
    None ./../types/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, dataSourceRef = None ./../types/io.k8s.api.core.v1.TypedObjectReference.dhall
, resources =
    None ./../types/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
, selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, storageClassName = None Text
, volumeAttributesClassName = None Text
, volumeMode = None Text
, volumeName = None Text
}
{=}
{ apiVersion = "authorization.k8s.io/v1"
, kind = "SubjectAccessReview"
, status =
    None ./../types/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ fsType = None Text }
{ selector = None Text }
{ containerName = None Text }
{ availableReplicas = None Natural
, collisionCount = None Natural
, conditions =
    None (List ./../types/io.k8s.api.apps.v1.DeploymentCondition.dhall)
, observedGeneration = None Natural
, readyReplicas = None Natural
, replicas = None Natural
, unavailableReplicas = None Natural
, updatedReplicas = None Natural
}
{ apiGroups = None (List Text)
, nonResourceURLs = None (List Text)
, resourceNames = None (List Text)
, resources = None (List Text)
}
{ postStart = None ./../types/io.k8s.api.core.v1.LifecycleHandler.dhall
, preStop = None ./../types/io.k8s.api.core.v1.LifecycleHandler.dhall
}
{ annotations = None (List { mapKey : Text, mapValue : Text })
, creationTimestamp =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, deletionGracePeriodSeconds = None Natural
, deletionTimestamp =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, finalizers = None (List Text)
, generateName = None Text
, generation = None Natural
, labels = None (List { mapKey : Text, mapValue : Text })
, managedFields =
    None
      ( List
          ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
      )
, name = None Text
, namespace = None Text
, ownerReferences =
    None
      ( List
          ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
      )
, resourceVersion = None Text
, selfLink = None Text
, uid = None Text
}
{ egress =
    None
      (List ./../types/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall)
, ingress =
    None
      (List ./../types/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall)
, policyTypes = None (List Text)
}
{ apiVersion = "storage.k8s.io/v1alpha1"
, kind = "VolumeAttributesClass"
, parameters = None (List { mapKey : Text, mapValue : Text })
}
{ error = None Text, message = None Text }
{ mode = None Natural }
{ auditAnnotations =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1beta1.AuditAnnotation.dhall
      )
, failurePolicy = None Text
, matchConditions =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1beta1.MatchCondition.dhall
      )
, matchConstraints =
    None
      ./../types/io.k8s.api.admissionregistration.v1beta1.MatchResources.dhall
, paramKind =
    None ./../types/io.k8s.api.admissionregistration.v1beta1.ParamKind.dhall
, validations =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1beta1.Validation.dhall
      )
, variables =
    None
      (List ./../types/io.k8s.api.admissionregistration.v1beta1.Variable.dhall)
}
{ cachingMode = None Text, fsType = None Text, readOnly = None Bool }
{ apiVersion = "v1", kind = "PodTemplateList" }
{ matchResources =
    None
      ./../types/io.k8s.api.admissionregistration.v1beta1.MatchResources.dhall
, paramRef =
    None ./../types/io.k8s.api.admissionregistration.v1beta1.ParamRef.dhall
, policyName = None Text
, validationActions = None (List Text)
}
{ apiVersion = "storage.k8s.io/v1", kind = "CSINodeList" }
{ config =
    None
      ( List
          ./../types/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
      )
, constraints =
    None (List ./../types/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall)
, requests =
    None (List ./../types/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall)
}
{ apiVersion = "authentication.k8s.io/v1"
, kind = "SelfSubjectReview"
, status =
    None ./../types/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
}
{ apiServerID = None Text
, decodableVersions = None (List Text)
, encodingVersion = None Text
, servedVersions = None (List Text)
}
{ name = None Text
, namespace = None Text
, parameterNotFoundAction = None Text
, selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ scaleDown = None ./../types/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
, scaleUp = None ./../types/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
}
{ chapAuthDiscovery = None Bool
, chapAuthSession = None Bool
, fsType = None Text
, initiatorName = None Text
, iscsiInterface = None Text
, portals = None (List Text)
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ medium = None Text
, sizeLimit =
    None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{ nodeAffinity = None ./../types/io.k8s.api.core.v1.NodeAffinity.dhall
, podAffinity = None ./../types/io.k8s.api.core.v1.PodAffinity.dhall
, podAntiAffinity = None ./../types/io.k8s.api.core.v1.PodAntiAffinity.dhall
}
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1beta3"
, kind = "FlowSchema"
, spec = None ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec.dhall
, status = None ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus.dhall
}
{ caBundle = None Text
, service =
    None ./../types/io.k8s.api.admissionregistration.v1.ServiceReference.dhall
, url = None Text
}
{ controller = None Text
, devices = None ./../types/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
}
{ nonResourceURLs = None (List Text) }
{ level = None Text, role = None Text, type = None Text, user = None Text }
{ apiVersion = "apiregistration.k8s.io/v1"
, kind = "APIService"
, spec =
    None
      ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
, status =
    None
      ./../types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
}
{=}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ limits =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, requests =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ commonEncodingVersion = None Text
, conditions =
    None
      ( List
          ./../types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
      )
, storageVersions =
    None
      ( List
          ./../types/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
      )
}
{ excludeResourceRules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations.dhall
      )
, matchPolicy = None Text
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, resourceRules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations.dhall
      )
}
{ maxSurge =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, maxUnavailable =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
}
{ apiVersion = "v1", kind = "EventList" }
{ apiVersion = "storage.k8s.io/v1", kind = "StorageClassList" }
{ bool = None Bool
, int = None Natural
, string = None Text
, version = None Text
}
{ conditions =
    None (List ./../types/io.k8s.api.core.v1.NamespaceCondition.dhall)
, phase = None Text
}
{ conditions = None (List ./../types/io.k8s.api.core.v1.PodCondition.dhall)
, containerStatuses =
    None (List ./../types/io.k8s.api.core.v1.ContainerStatus.dhall)
, ephemeralContainerStatuses =
    None (List ./../types/io.k8s.api.core.v1.ContainerStatus.dhall)
, hostIP = None Text
, hostIPs = None (List ./../types/io.k8s.api.core.v1.HostIP.dhall)
, initContainerStatuses =
    None (List ./../types/io.k8s.api.core.v1.ContainerStatus.dhall)
, message = None Text
, nominatedNodeName = None Text
, phase = None Text
, podIP = None Text
, podIPs = None (List ./../types/io.k8s.api.core.v1.PodIP.dhall)
, qosClass = None Text
, reason = None Text
, resize = None Text
, resourceClaimStatuses =
    None (List ./../types/io.k8s.api.core.v1.PodResourceClaimStatus.dhall)
, startTime = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ lastProbeTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ field = None Text, message = None Text, reason = None Text }
{ args = None (List Text)
, command = None (List Text)
, env = None (List ./../types/io.k8s.api.core.v1.EnvVar.dhall)
, envFrom = None (List ./../types/io.k8s.api.core.v1.EnvFromSource.dhall)
, image = None Text
, imagePullPolicy = None Text
, lifecycle = None ./../types/io.k8s.api.core.v1.Lifecycle.dhall
, livenessProbe = None ./../types/io.k8s.api.core.v1.Probe.dhall
, ports = None (List ./../types/io.k8s.api.core.v1.ContainerPort.dhall)
, readinessProbe = None ./../types/io.k8s.api.core.v1.Probe.dhall
, resizePolicy =
    None (List ./../types/io.k8s.api.core.v1.ContainerResizePolicy.dhall)
, resources = None ./../types/io.k8s.api.core.v1.ResourceRequirements.dhall
, restartPolicy = None Text
, securityContext = None ./../types/io.k8s.api.core.v1.SecurityContext.dhall
, startupProbe = None ./../types/io.k8s.api.core.v1.Probe.dhall
, stdin = None Bool
, stdinOnce = None Bool
, targetContainerName = None Text
, terminationMessagePath = None Text
, terminationMessagePolicy = None Text
, tty = None Bool
, volumeDevices = None (List ./../types/io.k8s.api.core.v1.VolumeDevice.dhall)
, volumeMounts = None (List ./../types/io.k8s.api.core.v1.VolumeMount.dhall)
, workingDir = None Text
}
{ metadata =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, spec = None ./../types/io.k8s.api.core.v1.PodSpec.dhall
}
{ supplementalGroupsPolicy = None Bool }
{ queuing = None ./../types/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
}
{ apiVersion = "v1"
, kind = "Namespace"
, spec = None ./../types/io.k8s.api.core.v1.NamespaceSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.NamespaceStatus.dhall
}
{ addresses = None (List ./../types/io.k8s.api.core.v1.NodeAddress.dhall)
, allocatable =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, capacity =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, conditions = None (List ./../types/io.k8s.api.core.v1.NodeCondition.dhall)
, config = None ./../types/io.k8s.api.core.v1.NodeConfigStatus.dhall
, daemonEndpoints = None ./../types/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
, features = None ./../types/io.k8s.api.core.v1.NodeFeatures.dhall
, images = None (List ./../types/io.k8s.api.core.v1.ContainerImage.dhall)
, nodeInfo = None ./../types/io.k8s.api.core.v1.NodeSystemInfo.dhall
, phase = None Text
, runtimeHandlers =
    None (List ./../types/io.k8s.api.core.v1.NodeRuntimeHandler.dhall)
, volumesAttached =
    None (List ./../types/io.k8s.api.core.v1.AttachedVolume.dhall)
, volumesInUse = None (List Text)
}
{ lastProbeTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ apiVersion = "admissionregistration.k8s.io/v1beta1"
, kind = "ValidatingAdmissionPolicyList"
}
{=}
{=}
{ apiVersion = "v1"
, kind = "Service"
, spec = None ./../types/io.k8s.api.core.v1.ServiceSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.ServiceStatus.dhall
}
{ apiVersion = "networking.k8s.io/v1", kind = "NetworkPolicyList" }
{ apiVersion = "certificates.k8s.io/v1alpha1", kind = "ClusterTrustBundle" }
{ allocatable = None ./../types/io.k8s.api.storage.v1.VolumeNodeResources.dhall
, topologyKeys = None (List Text)
}
{ conditions =
    None (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
}
{=}
{=}
{ apiVersion = "admissionregistration.k8s.io/v1beta1"
, kind = "ValidatingAdmissionPolicyBindingList"
}
{ allocation =
    None ./../types/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
, deallocationRequested = None Bool
, reservedFor =
    None
      ( List
          ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
      )
}
{ availableReplicas = None Natural
, conditions =
    None (List ./../types/io.k8s.api.apps.v1.ReplicaSetCondition.dhall)
, fullyLabeledReplicas = None Natural
, observedGeneration = None Natural
, readyReplicas = None Natural
}
{ borrowingLimitPercent = None Natural
, lendablePercent = None Natural
, limitResponse =
    None ./../types/io.k8s.api.flowcontrol.v1beta3.LimitResponse.dhall
, nominalConcurrencyShares = None Natural
}
{=}
{ selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ caBundle = None Text
, service =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference.dhall
, url = None Text
}
{ accessModes = None (List Text)
, allocatedResourceStatuses = None (List { mapKey : Text, mapValue : Text })
, allocatedResources =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, capacity =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, conditions =
    None
      (List ./../types/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall)
, currentVolumeAttributesClassName = None Text
, modifyVolumeStatus =
    None ./../types/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
, phase = None Text
}
{ apiVersion = "storage.k8s.io/v1alpha1", kind = "VolumeAttributesClassList" }
{ defaultMode = None Natural
, sources = None (List ./../types/io.k8s.api.core.v1.VolumeProjection.dhall)
}
{ lendablePercent = None Natural, nominalConcurrencyShares = None Natural }
{ group = None Text, resource = None Text, version = None Text }
{=}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "ResourceClaimList" }
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1"
, kind = "FlowSchema"
, spec = None ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
, status = None ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
}
{ denied = None Bool, evaluationError = None Text, reason = None Text }
{ apiVersion = "storage.k8s.io/v1beta1"
, kind = "VolumeAttributesClass"
, parameters = None (List { mapKey : Text, mapValue : Text })
}
{ hard =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, used =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "ResourceSlice" }
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
, status = None Text
, type = None Text
}
{ start = None Natural }
{ clusterScope = None Bool, namespaces = None (List Text) }
{ message = None Text, messageExpression = None Text, reason = None Text }
{ rawSelector = None Text
, requirements =
    None
      ( List
          ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
      )
}
{ resourceClaimName = None Text, resourceClaimTemplateName = None Text }
{=}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "PodSchedulingContextList" }
{ opaque =
    None ./../types/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, requests = None (List Text)
}
{ name = None Text, number = None Natural }
{ apiVersion = "internal.apiserver.k8s.io/v1alpha1", kind = "StorageVersion" }
{=}
{ categories = None (List Text)
, group = None Text
, shortNames = None (List Text)
, storageVersionHash = None Text
, version = None Text
}
{=}
{ name = None Text, namespace = None Text }
{ apiVersion = "v1", kind = "PersistentVolumeList" }
{ hostname = None Text
, ip = None Text
, ports =
    None (List ./../types/io.k8s.api.networking.v1.IngressPortStatus.dhall)
}
{ spec = None ./../types/io.k8s.api.batch.v1.JobSpec.dhall }
{ apiVersion = "apps/v1", kind = "DaemonSetList" }
{ cel = None ./../types/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall }
{=}
{ apiVersion = "rbac.authorization.k8s.io/v1", kind = "RoleBindingList" }
{ exempt =
    None
      ./../types/io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration.dhall
, limited =
    None
      ./../types/io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration.dhall
}
{ timeoutSeconds = None Natural }
{ averageUtilization = None Natural
, averageValue =
    None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, value = None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{=}
{ labelSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, matchLabelKeys = None (List Text)
, minDomains = None Natural
, nodeAffinityPolicy = None Text
, nodeTaintsPolicy = None Text
}
{ path = None Text, port = None Natural }
{ apiVersion = "certificates.k8s.io/v1"
, kind = "CertificateSigningRequestList"
}
{ apiVersion = "policy/v1"
, kind = "PodDisruptionBudget"
, spec = None ./../types/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
, status = None ./../types/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
}
{=}
{ clientIP = None ./../types/io.k8s.api.core.v1.ClientIPConfig.dhall }
{ readOnly = None Bool, secretNamespace = None Text }
{ values = None (List Text) }
{ potentialNodes = None (List Text), selectedNode = None Text }
{ values = None (List Text) }
{ apiVersion = "authentication.k8s.io/v1"
, kind = "TokenReview"
, status = None ./../types/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
}
{ lastHeartbeatTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ port = None ./../types/io.k8s.api.networking.v1.ServiceBackendPort.dhall }
{ attributes =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
          }
      )
, capacity =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ apiVersion = "rbac.authorization.k8s.io/v1", kind = "RoleList" }
{ clusterScope = None Bool, namespaces = None (List Text) }
{ items = None (List ./../types/io.k8s.api.core.v1.KeyToPath.dhall)
, name = None Text
, optional = None Bool
}
{ apiVersion = "storage.k8s.io/v1"
, kind = "CSIStorageCapacity"
, capacity = None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, maximumVolumeSize =
    None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
, nodeTopology =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{=}
{ conditions =
    None
      ( List
          ./../types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
      )
}
{ minReadySeconds = None Natural
, revisionHistoryLimit = None Natural
, updateStrategy =
    None ./../types/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
}
{ nodeSelector = None (List { mapKey : Text, mapValue : Text })
, tolerations = None (List ./../types/io.k8s.api.core.v1.Toleration.dhall)
}
{ apiVersion = "v1"
, kind = "LimitRange"
, spec = None ./../types/io.k8s.api.core.v1.LimitRangeSpec.dhall
}
{ accessModes = None (List Text)
, awsElasticBlockStore =
    None ./../types/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, azureDisk = None ./../types/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, azureFile =
    None ./../types/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
, capacity =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, cephfs = None ./../types/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
, cinder = None ./../types/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
, claimRef = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, csi = None ./../types/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
, fc = None ./../types/io.k8s.api.core.v1.FCVolumeSource.dhall
, flexVolume =
    None ./../types/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
, flocker = None ./../types/io.k8s.api.core.v1.FlockerVolumeSource.dhall
, gcePersistentDisk =
    None ./../types/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, glusterfs =
    None ./../types/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
, hostPath = None ./../types/io.k8s.api.core.v1.HostPathVolumeSource.dhall
, iscsi = None ./../types/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
, local = None ./../types/io.k8s.api.core.v1.LocalVolumeSource.dhall
, mountOptions = None (List Text)
, nfs = None ./../types/io.k8s.api.core.v1.NFSVolumeSource.dhall
, nodeAffinity = None ./../types/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
, persistentVolumeReclaimPolicy = None Text
, photonPersistentDisk =
    None ./../types/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, portworxVolume = None ./../types/io.k8s.api.core.v1.PortworxVolumeSource.dhall
, quobyte = None ./../types/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, rbd = None ./../types/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
, scaleIO =
    None ./../types/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
, storageClassName = None Text
, storageos =
    None ./../types/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
, volumeAttributesClassName = None Text
, volumeMode = None Text
, vsphereVolume =
    None ./../types/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
}
{ attachError = None ./../types/io.k8s.api.storage.v1.VolumeError.dhall
, attachmentMetadata = None (List { mapKey : Text, mapValue : Text })
, detachError = None ./../types/io.k8s.api.storage.v1.VolumeError.dhall
}
{ group = None Text, namespace = None Text }
{ apiGroup = None Text }
{ failurePolicy = None Text
, matchConditions =
    None
      (List ./../types/io.k8s.api.admissionregistration.v1.MatchCondition.dhall)
, matchPolicy = None Text
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, reinvocationPolicy = None Text
, rules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
      )
, timeoutSeconds = None Natural
}
{ ports =
    None (List ./../types/io.k8s.api.networking.v1.NetworkPolicyPort.dhall)
, to = None (List ./../types/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall)
}
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1beta3"
, kind = "PriorityLevelConfigurationList"
}
{ apiVersion = "v1", kind = "Binding" }
{ required = None ./../types/io.k8s.api.core.v1.NodeSelector.dhall }
{ apiVersion = "v1"
, kind = "Node"
, spec = None ./../types/io.k8s.api.core.v1.NodeSpec.dhall
, status = None ./../types/io.k8s.api.core.v1.NodeStatus.dhall
}
{ clusterRoleSelectors =
    None
      (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall)
}
{=}
{ exec = None ./../types/io.k8s.api.core.v1.ExecAction.dhall
, failureThreshold = None Natural
, grpc = None ./../types/io.k8s.api.core.v1.GRPCAction.dhall
, httpGet = None ./../types/io.k8s.api.core.v1.HTTPGetAction.dhall
, initialDelaySeconds = None Natural
, periodSeconds = None Natural
, successThreshold = None Natural
, tcpSocket = None ./../types/io.k8s.api.core.v1.TCPSocketAction.dhall
, terminationGracePeriodSeconds = None Natural
, timeoutSeconds = None Natural
}
{ fsType = None Text, partition = None Natural, readOnly = None Bool }
{ borrowingLimitPercent = None Natural
, lendablePercent = None Natural
, limitResponse = None ./../types/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
, nominalConcurrencyShares = None Natural
}
{ ingress = None (List ./../types/io.k8s.api.core.v1.LoadBalancerIngress.dhall)
}
{ apiVersion = "apps/v1"
, kind = "StatefulSet"
, spec = None ./../types/io.k8s.api.apps.v1.StatefulSetSpec.dhall
, status = None ./../types/io.k8s.api.apps.v1.StatefulSetStatus.dhall
}
{ apiVersion = "networking.k8s.io/v1beta1"
, kind = "ServiceCIDR"
, spec = None ./../types/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
, status = None ./../types/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
}
{ expirationSeconds = None Natural
, extra = None (List { mapKey : Text, mapValue : List Text })
, groups = None (List Text)
, uid = None Text
, usages = None (List Text)
, username = None Text
}
{ apiVersion = "rbac.authorization.k8s.io/v1"
, kind = "RoleBinding"
, subjects = None (List ./../types/io.k8s.api.rbac.v1.Subject.dhall)
}
{ apiVersion = "v1", kind = "NodeList" }
{ path = None Text, port = None Natural }
{=}
{ apiVersion = "autoscaling/v2"
, kind = "HorizontalPodAutoscaler"
, spec =
    None ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
, status =
    None
      ./../types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
}
{ apiVersion = "v1"
, kind = "ComponentStatus"
, conditions =
    None (List ./../types/io.k8s.api.core.v1.ComponentCondition.dhall)
}
{ nonResourceRules =
    None (List ./../types/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall)
, resourceRules =
    None (List ./../types/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall)
}
{ apiVersion = "v1"
, kind = "DeleteOptions"
, dryRun = None (List Text)
, gracePeriodSeconds = None Natural
, orphanDependents = None Bool
, preconditions =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
, propagationPolicy = None Text
}
{=}
{ apiVersion = "coordination.k8s.io/v1alpha1", kind = "LeaseCandidateList" }
{=}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{=}
{ nonResourceRules =
    None
      ( List
          ./../types/io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule.dhall
      )
, resourceRules =
    None
      (List ./../types/io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule.dhall)
}
{ minReadySeconds = None Natural
, replicas = None Natural
, selector = None (List { mapKey : Text, mapValue : Text })
, template = None ./../types/io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ fsType = None Text
, lun = None Natural
, readOnly = None Bool
, targetWWNs = None (List Text)
, wwids = None (List Text)
}
{ claims = None (List ./../types/io.k8s.api.core.v1.ResourceClaim.dhall)
, limits =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
, requests =
    None
      ( List
          { mapKey : Text
          , mapValue :
              ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
          }
      )
}
{ readOnly = None Bool }
{ host = None Text }
{=}
{ blockOwnerDeletion = None Bool, controller = None Bool }
{ localhostProfile = None Text }
{=}
{ apiVersion = "authorization.k8s.io/v1"
, kind = "SelfSubjectRulesReview"
, status =
    None ./../types/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
}
{ startedAt = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall }
{ apiVersion = "v1"
, kind = "ConfigMap"
, binaryData = None (List { mapKey : Text, mapValue : Text })
, data = None (List { mapKey : Text, mapValue : Text })
, immutable = None Bool
}
{=}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "DeviceClassList" }
{ datasetName = None Text, datasetUUID = None Text }
{ recursiveReadOnlyMounts = None Bool, userNamespaces = None Bool }
{ fsType = None Text, partition = None Natural, readOnly = None Bool }
{ fsType = None Text }
{=}
{ lastPhaseTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, phase = None Text
, reason = None Text
}
{ containerName = None Text
, divisor = None ./../types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
}
{ fsType = None Text
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, volumeName = None Text
, volumeNamespace = None Text
}
{ conditions =
    None (List ./../types/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall)
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastUpdateTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ apiVersion = "events.k8s.io/v1", kind = "EventList" }
{ apiVersion = "policy/v1", kind = "PodDisruptionBudgetList" }
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "ValidatingWebhookConfiguration"
, webhooks =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
      )
}
{ fsType = None Text
, storagePolicyID = None Text
, storagePolicyName = None Text
}
{ minReadySeconds = None Natural
, replicas = None Natural
, template = None ./../types/io.k8s.api.core.v1.PodTemplateSpec.dhall
}
{ configMapKeyRef =
    None ./../types/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
, fieldRef = None ./../types/io.k8s.api.core.v1.ObjectFieldSelector.dhall
, resourceFieldRef =
    None ./../types/io.k8s.api.core.v1.ResourceFieldSelector.dhall
, secretKeyRef = None ./../types/io.k8s.api.core.v1.SecretKeySelector.dhall
}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "ResourceClaimTemplateList" }
{ allocateLoadBalancerNodePorts = None Bool
, clusterIP = None Text
, clusterIPs = None (List Text)
, externalIPs = None (List Text)
, externalName = None Text
, externalTrafficPolicy = None Text
, healthCheckNodePort = None Natural
, internalTrafficPolicy = None Text
, ipFamilies = None (List Text)
, ipFamilyPolicy = None Text
, loadBalancerClass = None Text
, loadBalancerIP = None Text
, loadBalancerSourceRanges = None (List Text)
, ports = None (List ./../types/io.k8s.api.core.v1.ServicePort.dhall)
, publishNotReadyAddresses = None Bool
, selector = None (List { mapKey : Text, mapValue : Text })
, sessionAffinity = None Text
, sessionAffinityConfig =
    None ./../types/io.k8s.api.core.v1.SessionAffinityConfig.dhall
, trafficDistribution = None Text
, type = None Text
}
{ containerID = None Text
, finishedAt = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
, signal = None Natural
, startedAt = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ value = None Text
, valueFrom = None ./../types/io.k8s.api.core.v1.EnvVarSource.dhall
}
{ config =
    None
      ( List
          ./../types/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
      )
, results =
    None
      ( List
          ./../types/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
      )
}
{ rollingUpdate =
    None ./../types/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
, type = None Text
}
{ host = None Text
, http = None ./../types/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
}
{ conditions =
    None
      ( List
          ./../types/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
      )
, resourceVersion = None Text
}
{ apiVersion = "rbac.authorization.k8s.io/v1"
, kind = "Role"
, rules = None (List ./../types/io.k8s.api.rbac.v1.PolicyRule.dhall)
}
{ apiVersion = "batch/v1"
, kind = "Job"
, spec = None ./../types/io.k8s.api.batch.v1.JobSpec.dhall
, status = None ./../types/io.k8s.api.batch.v1.JobStatus.dhall
}
{=}
{ localhostProfile = None Text }
{ binaryVersion = None Text
, emulationVersion = None Text
, pingTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, renewTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
}
{ failed = None (List Text), succeeded = None (List Text) }
{ apiVersion = "v1", kind = "LimitRangeList" }
{ resourceClaimName = None Text }
{ webhook =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
}
{ path = None Text }
{=}
{ apiVersion = "rbac.authorization.k8s.io/v1", kind = "ClusterRoleList" }
{=}
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "ValidatingAdmissionPolicy"
, spec =
    None
      ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
, status =
    None
      ./../types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
}
{ preferredDuringSchedulingIgnoredDuringExecution =
    None (List ./../types/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall)
, requiredDuringSchedulingIgnoredDuringExecution =
    None (List ./../types/io.k8s.api.core.v1.PodAffinityTerm.dhall)
}
{ configSource = None ./../types/io.k8s.api.core.v1.NodeConfigSource.dhall
, externalID = None Text
, podCIDR = None Text
, podCIDRs = None (List Text)
, providerID = None Text
, taints = None (List ./../types/io.k8s.api.core.v1.Taint.dhall)
, unschedulable = None Bool
}
{ handSize = None Natural
, queueLengthLimit = None Natural
, queues = None Natural
}
{ message = None Text
, time = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ apiVersion = "networking.k8s.io/v1beta1", kind = "IPAddressList" }
{ config =
    None
      ( List
          ./../types/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
      )
, selectors =
    None (List ./../types/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall)
, suitableNodes = None ./../types/io.k8s.api.core.v1.NodeSelector.dhall
}
{=}
{ apiVersion = "authorization.k8s.io/v1"
, kind = "SelfSubjectAccessReview"
, status =
    None ./../types/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
}
{ description = None Text, url = None Text }
{ excludeResourceRules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations.dhall
      )
, matchPolicy = None Text
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, resourceRules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations.dhall
      )
}
{ awsElasticBlockStore =
    None ./../types/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, azureDisk = None ./../types/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, azureFile = None ./../types/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
, cephfs = None ./../types/io.k8s.api.core.v1.CephFSVolumeSource.dhall
, cinder = None ./../types/io.k8s.api.core.v1.CinderVolumeSource.dhall
, configMap = None ./../types/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
, csi = None ./../types/io.k8s.api.core.v1.CSIVolumeSource.dhall
, downwardAPI = None ./../types/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
, emptyDir = None ./../types/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
, ephemeral = None ./../types/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
, fc = None ./../types/io.k8s.api.core.v1.FCVolumeSource.dhall
, flexVolume = None ./../types/io.k8s.api.core.v1.FlexVolumeSource.dhall
, flocker = None ./../types/io.k8s.api.core.v1.FlockerVolumeSource.dhall
, gcePersistentDisk =
    None ./../types/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, gitRepo = None ./../types/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
, glusterfs = None ./../types/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
, hostPath = None ./../types/io.k8s.api.core.v1.HostPathVolumeSource.dhall
, image = None ./../types/io.k8s.api.core.v1.ImageVolumeSource.dhall
, iscsi = None ./../types/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
, nfs = None ./../types/io.k8s.api.core.v1.NFSVolumeSource.dhall
, persistentVolumeClaim =
    None ./../types/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
, photonPersistentDisk =
    None ./../types/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, portworxVolume = None ./../types/io.k8s.api.core.v1.PortworxVolumeSource.dhall
, projected = None ./../types/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
, quobyte = None ./../types/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, rbd = None ./../types/io.k8s.api.core.v1.RBDVolumeSource.dhall
, scaleIO = None ./../types/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
, secret = None ./../types/io.k8s.api.core.v1.SecretVolumeSource.dhall
, storageos = None ./../types/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
, vsphereVolume =
    None ./../types/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
}
{ apiVersion = "v1", kind = "ReplicationControllerList" }
{ certificate = None Text
, conditions =
    None
      ( List
          ./../types/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
      )
}
{ message = None Text, messageExpression = None Text, reason = None Text }
{ opaque =
    None ./../types/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
}
{ apiVersion = "apps/v1", kind = "ReplicaSetList" }
{ maxUnavailable =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, minAvailable =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, selector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, unhealthyPodEvictionPolicy = None Text
}
{ apiVersion = "scheduling.k8s.io/v1", kind = "PriorityClassList" }
{ onExitCodes =
    None
      ./../types/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
, onPodConditions =
    None
      ( List
          ./../types/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
      )
}
{ userInfo = None ./../types/io.k8s.api.authentication.v1.UserInfo.dhall }
{ observedGeneration = None Natural }
{ apiVersion = "v1", kind = "SecretList" }
{=}
{ additionalPrinterColumns =
    None
      ( List
          ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
      )
, deprecated = None Bool
, deprecationWarning = None Text
, schema =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
, selectableFields =
    None
      ( List
          ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
      )
, subresources =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
}
{ maxUnavailable =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, partition = None Natural
}
{=}
{ readOnly = None Bool, recursiveReadOnly = None Text }
{ conditions =
    None (List ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall)
, observedGeneration = None Natural
, typeChecking =
    None ./../types/io.k8s.api.admissionregistration.v1alpha1.TypeChecking.dhall
}
{ apiVersion = "resource.k8s.io/v1alpha3", kind = "DeviceClass" }
{ readOnly = None Bool }
{ host = None Text
, httpHeaders = None (List ./../types/io.k8s.api.core.v1.HTTPHeader.dhall)
, path = None Text
, scheme = None Text
}
{ apiGroup = None Text, namespace = None Text }
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{=}
{ appProtocol = None Text
, name = None Text
, port = None Natural
, protocol = None Text
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastUpdateTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ apiVersion = "v1", kind = "ServiceList" }
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ apiVersion = "v1"
, kind = "APIGroup"
, preferredVersion =
    None
      ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, serverAddressByClientCIDRs =
    None
      ( List
          ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
      )
}
{ defaultBackend = None ./../types/io.k8s.api.networking.v1.IngressBackend.dhall
, ingressClassName = None Text
, rules = None (List ./../types/io.k8s.api.networking.v1.IngressRule.dhall)
, tls = None (List ./../types/io.k8s.api.networking.v1.IngressTLS.dhall)
}
{ name = None Text, optional = None Bool }
{ containerResource =
    None
      ./../types/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
, external =
    None ./../types/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
, object = None ./../types/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
, pods = None ./../types/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
, resource =
    None ./../types/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
}
{=}
{ hostname = None Text
, ip = None Text
, ipMode = None Text
, ports = None (List ./../types/io.k8s.api.core.v1.PortStatus.dhall)
}
{ fsType = None Text
, options = None (List { mapKey : Text, mapValue : Text })
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
}
{ maxSurge =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
, maxUnavailable =
    None ./../types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
}
{=}
{ name = None Text }
{=}
{ clientConfig =
    None
      ./../types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
}
{ group = None ./../types/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
, serviceAccount =
    None ./../types/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
, user = None ./../types/io.k8s.api.flowcontrol.v1.UserSubject.dhall
}
{=}
{ path = None Text
, readOnly = None Bool
, secretFile = None Text
, secretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
, user = None Text
}
{ matchResources =
    None ./../types/io.k8s.api.admissionregistration.v1.MatchResources.dhall
, paramRef = None ./../types/io.k8s.api.admissionregistration.v1.ParamRef.dhall
, policyName = None Text
, validationActions = None (List Text)
}
{ active = None Natural
, completedIndexes = None Text
, completionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, conditions = None (List ./../types/io.k8s.api.batch.v1.JobCondition.dhall)
, failed = None Natural
, failedIndexes = None Text
, ready = None Natural
, startTime = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, succeeded = None Natural
, terminating = None Natural
, uncountedTerminatedPods =
    None ./../types/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
}
{ apiVersion = "flowcontrol.apiserver.k8s.io/v1beta3", kind = "FlowSchemaList" }
{=}
{ ipBlock = None ./../types/io.k8s.api.networking.v1.IPBlock.dhall
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, podSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
}
{ mountPropagation = None Text
, readOnly = None Bool
, recursiveReadOnly = None Text
, subPath = None Text
, subPathExpr = None Text
}
{ request = None Text }
{ cidrs = None (List Text) }
{ values = None (List Text) }
{ directory = None Text, revision = None Text }
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ boundObjectRef =
    None ./../types/io.k8s.api.authentication.v1.BoundObjectReference.dhall
, expirationSeconds = None Natural
}
{ except = None (List Text) }
{ apiVersion = "discovery.k8s.io/v1", kind = "EndpointSliceList" }
{ description = None Text, format = None Text, priority = None Integer }
{ apiVersion = "v1", kind = "APIVersions" }
{ categories = None (List Text)
, listKind = None Text
, shortNames = None (List Text)
, singular = None Text
}
{ lastUpdateTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
}
{ conditions =
    None
      (List ./../types/io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition.dhall)
}
{ defaultMode = None Natural
, items = None (List ./../types/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall)
}
{ fsType = None Text
, keyring = None Text
, pool = None Text
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.LocalObjectReference.dhall
, user = None Text
}
{ apiVersion = "resource.k8s.io/v1alpha3"
, kind = "ResourceClaim"
, status =
    None ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
}
{ supplementalGroups = None (List Natural) }
{ apiVersion = "node.k8s.io/v1", kind = "RuntimeClassList" }
{ apiVersion = "resource.k8s.io/v1alpha3"
, kind = "PodSchedulingContext"
, status =
    None
      ./../types/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
}
{ apiVersion = "batch/v1"
, kind = "CronJob"
, spec = None ./../types/io.k8s.api.batch.v1.CronJobSpec.dhall
, status = None ./../types/io.k8s.api.batch.v1.CronJobStatus.dhall
}
{ apiVersion = "networking.k8s.io/v1", kind = "IngressList" }
{=}
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "ValidatingAdmissionPolicyBindingList"
}
{ lastTransitionTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
, status = None Text
, type = None Text
}
{=}
{=}
{=}
{ fieldsType = None Text
, fieldsV1 = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1.dhall
, manager = None Text
, operation = None Text
, subresource = None Text
, time = None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
}
{ containerResource =
    None
      ./../types/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
, external =
    None ./../types/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
, object = None ./../types/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
, pods = None ./../types/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
, resource =
    None ./../types/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
}
{ resourceClaims =
    None
      ( List
          ./../types/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
      )
}
{ health = None Text }
{ fsType = None Text
, options = None (List { mapKey : Text, mapValue : Text })
, readOnly = None Bool
, secretRef = None ./../types/io.k8s.api.core.v1.SecretReference.dhall
}
{=}
{ availableReplicas = None Natural
, collisionCount = None Natural
, conditions =
    None (List ./../types/io.k8s.api.apps.v1.StatefulSetCondition.dhall)
, currentReplicas = None Natural
, currentRevision = None Text
, observedGeneration = None Natural
, readyReplicas = None Natural
, updateRevision = None Text
, updatedReplicas = None Natural
}
{ apiVersion = "networking.k8s.io/v1beta1", kind = "ServiceCIDRList" }
{ failurePolicy = None Text
, matchConditions =
    None
      (List ./../types/io.k8s.api.admissionregistration.v1.MatchCondition.dhall)
, matchPolicy = None Text
, namespaceSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, objectSelector =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, rules =
    None
      ( List
          ./../types/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
      )
, timeoutSeconds = None Natural
}
{ apiVersion = "v1"
, kind = "Event"
, action = None Text
, count = None Natural
, eventTime =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
, firstTimestamp =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, lastTimestamp =
    None ./../types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
, message = None Text
, reason = None Text
, related = None ./../types/io.k8s.api.core.v1.ObjectReference.dhall
, reportingComponent = None Text
, reportingInstance = None Text
, series = None ./../types/io.k8s.api.core.v1.EventSeries.dhall
, source = None ./../types/io.k8s.api.core.v1.EventSource.dhall
, type = None Text
}
{ apiVersion = "admissionregistration.k8s.io/v1"
, kind = "MutatingWebhookConfigurationList"
}
{=}
{ distinguisherMethod =
    None ./../types/io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod.dhall
, matchingPrecedence = None Natural
, rules =
    None
      ( List
          ./../types/io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects.dhall
      )
}
{ extra = None (List { mapKey : Text, mapValue : List Text })
, groups = None (List Text)
, nonResourceAttributes =
    None ./../types/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, resourceAttributes =
    None ./../types/io.k8s.api.authorization.v1.ResourceAttributes.dhall
, uid = None Text
, user = None Text
}
{=}
{ active = None ./../types/io.k8s.api.core.v1.NodeConfigSource.dhall
, assigned = None ./../types/io.k8s.api.core.v1.NodeConfigSource.dhall
, error = None Text
, lastKnownGood = None ./../types/io.k8s.api.core.v1.NodeConfigSource.dhall
}
{=}
{ count = None Natural }
{ apiVersion = "autoscaling/v1"
, kind = "Scale"
, spec = None ./../types/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
, status = None ./../types/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
}
{ forZones = None (List ./../types/io.k8s.api.discovery.v1.ForZone.dhall) }
{ ready = None Bool, serving = None Bool, terminating = None Bool }
{ fieldPath = None Text
, message = None Text
, messageExpression = None Text
, optionalOldSelf = None Bool
, reason = None Text
}
{ endpointsNamespace = None Text, readOnly = None Bool }
{ addresses = None (List ./../types/io.k8s.api.core.v1.EndpointAddress.dhall)
, notReadyAddresses =
    None (List ./../types/io.k8s.api.core.v1.EndpointAddress.dhall)
, ports = None (List ./../types/io.k8s.api.core.v1.EndpointPort.dhall)
}
{ apiVersion = "authentication.k8s.io/v1beta1"
, kind = "SelfSubjectReview"
, status =
    None
      ./../types/io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus.dhall
}
{ fieldSelector =
    None ./../types/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
, group = None Text
, labelSelector =
    None ./../types/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
, name = None Text
, namespace = None Text
, resource = None Text
, subresource = None Text
, verb = None Text
, version = None Text
}
{ configMapRef = None ./../types/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
, prefix = None Text
, secretRef = None ./../types/io.k8s.api.core.v1.SecretEnvSource.dhall
}
{=}
< AuditAnnotation :
    ./types/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
| ExpressionWarning :
    ./types/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
| MatchCondition :
    ./types/io.k8s.api.admissionregistration.v1.MatchCondition.dhall
| MatchResources :
    ./types/io.k8s.api.admissionregistration.v1.MatchResources.dhall
| MutatingWebhook :
    ./types/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
| MutatingWebhookConfiguration :
    ./types/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
| MutatingWebhookConfigurationList :
    ./types/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList.dhall
| NamedRuleWithOperations :
    ./types/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
| ParamKind :
    ./types/io.k8s.api.admissionregistration.v1.ParamKind.dhall
| ParamRef :
    ./types/io.k8s.api.admissionregistration.v1.ParamRef.dhall
| RuleWithOperations :
    ./types/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
| TypeChecking :
    ./types/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
| ValidatingAdmissionPolicy :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
| ValidatingAdmissionPolicyBinding :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
| ValidatingAdmissionPolicyBindingList :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList.dhall
| ValidatingAdmissionPolicyBindingSpec :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
| ValidatingAdmissionPolicyList :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList.dhall
| ValidatingAdmissionPolicySpec :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
| ValidatingAdmissionPolicyStatus :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
| ValidatingWebhook :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
| ValidatingWebhookConfiguration :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
| ValidatingWebhookConfigurationList :
    ./types/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList.dhall
| Validation :
    ./types/io.k8s.api.admissionregistration.v1.Validation.dhall
| Variable :
    ./types/io.k8s.api.admissionregistration.v1.Variable.dhall
| ServerStorageVersion :
    ./types/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
| StorageVersion :
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
| StorageVersionCondition :
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
| StorageVersionList :
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList.dhall
| StorageVersionSpec :
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec.dhall
| StorageVersionStatus :
    ./types/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
| ControllerRevision :
    ./types/io.k8s.api.apps.v1.ControllerRevision.dhall
| ControllerRevisionList :
    ./types/io.k8s.api.apps.v1.ControllerRevisionList.dhall
| DaemonSet :
    ./types/io.k8s.api.apps.v1.DaemonSet.dhall
| DaemonSetCondition :
    ./types/io.k8s.api.apps.v1.DaemonSetCondition.dhall
| DaemonSetList :
    ./types/io.k8s.api.apps.v1.DaemonSetList.dhall
| DaemonSetSpec :
    ./types/io.k8s.api.apps.v1.DaemonSetSpec.dhall
| DaemonSetStatus :
    ./types/io.k8s.api.apps.v1.DaemonSetStatus.dhall
| DaemonSetUpdateStrategy :
    ./types/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
| Deployment :
    ./types/io.k8s.api.apps.v1.Deployment.dhall
| DeploymentCondition :
    ./types/io.k8s.api.apps.v1.DeploymentCondition.dhall
| DeploymentList :
    ./types/io.k8s.api.apps.v1.DeploymentList.dhall
| DeploymentSpec :
    ./types/io.k8s.api.apps.v1.DeploymentSpec.dhall
| DeploymentStatus :
    ./types/io.k8s.api.apps.v1.DeploymentStatus.dhall
| DeploymentStrategy :
    ./types/io.k8s.api.apps.v1.DeploymentStrategy.dhall
| ReplicaSet :
    ./types/io.k8s.api.apps.v1.ReplicaSet.dhall
| ReplicaSetCondition :
    ./types/io.k8s.api.apps.v1.ReplicaSetCondition.dhall
| ReplicaSetList :
    ./types/io.k8s.api.apps.v1.ReplicaSetList.dhall
| ReplicaSetSpec :
    ./types/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
| ReplicaSetStatus :
    ./types/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
| RollingUpdateDaemonSet :
    ./types/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
| RollingUpdateDeployment :
    ./types/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
| RollingUpdateStatefulSetStrategy :
    ./types/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
| StatefulSet :
    ./types/io.k8s.api.apps.v1.StatefulSet.dhall
| StatefulSetCondition :
    ./types/io.k8s.api.apps.v1.StatefulSetCondition.dhall
| StatefulSetList :
    ./types/io.k8s.api.apps.v1.StatefulSetList.dhall
| StatefulSetOrdinals :
    ./types/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
| StatefulSetPersistentVolumeClaimRetentionPolicy :
    ./types/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
| StatefulSetSpec :
    ./types/io.k8s.api.apps.v1.StatefulSetSpec.dhall
| StatefulSetStatus :
    ./types/io.k8s.api.apps.v1.StatefulSetStatus.dhall
| StatefulSetUpdateStrategy :
    ./types/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
| BoundObjectReference :
    ./types/io.k8s.api.authentication.v1.BoundObjectReference.dhall
| SelfSubjectReview :
    ./types/io.k8s.api.authentication.v1.SelfSubjectReview.dhall
| SelfSubjectReviewStatus :
    ./types/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
| TokenRequestSpec :
    ./types/io.k8s.api.authentication.v1.TokenRequestSpec.dhall
| TokenRequestStatus :
    ./types/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
| TokenReview :
    ./types/io.k8s.api.authentication.v1.TokenReview.dhall
| TokenReviewSpec :
    ./types/io.k8s.api.authentication.v1.TokenReviewSpec.dhall
| TokenReviewStatus :
    ./types/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
| UserInfo :
    ./types/io.k8s.api.authentication.v1.UserInfo.dhall
| FieldSelectorAttributes :
    ./types/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
| LabelSelectorAttributes :
    ./types/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
| LocalSubjectAccessReview :
    ./types/io.k8s.api.authorization.v1.LocalSubjectAccessReview.dhall
| NonResourceAttributes :
    ./types/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
| NonResourceRule :
    ./types/io.k8s.api.authorization.v1.NonResourceRule.dhall
| ResourceAttributes :
    ./types/io.k8s.api.authorization.v1.ResourceAttributes.dhall
| ResourceRule :
    ./types/io.k8s.api.authorization.v1.ResourceRule.dhall
| SelfSubjectAccessReview :
    ./types/io.k8s.api.authorization.v1.SelfSubjectAccessReview.dhall
| SelfSubjectAccessReviewSpec :
    ./types/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
| SelfSubjectRulesReview :
    ./types/io.k8s.api.authorization.v1.SelfSubjectRulesReview.dhall
| SelfSubjectRulesReviewSpec :
    ./types/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
| SubjectAccessReview :
    ./types/io.k8s.api.authorization.v1.SubjectAccessReview.dhall
| SubjectAccessReviewSpec :
    ./types/io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
| SubjectAccessReviewStatus :
    ./types/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
| SubjectRulesReviewStatus :
    ./types/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
| Scale :
    ./types/io.k8s.api.autoscaling.v1.Scale.dhall
| ScaleSpec :
    ./types/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
| ScaleStatus :
    ./types/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
| ContainerResourceMetricSource :
    ./types/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
| ContainerResourceMetricStatus :
    ./types/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
| CrossVersionObjectReference :
    ./types/io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
| ExternalMetricSource :
    ./types/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
| ExternalMetricStatus :
    ./types/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
| HPAScalingPolicy :
    ./types/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall
| HPAScalingRules :
    ./types/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
| HorizontalPodAutoscaler :
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
| HorizontalPodAutoscalerBehavior :
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
| HorizontalPodAutoscalerCondition :
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
| HorizontalPodAutoscalerList :
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList.dhall
| HorizontalPodAutoscalerSpec :
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
| HorizontalPodAutoscalerStatus :
    ./types/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
| MetricIdentifier :
    ./types/io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
| MetricSpec :
    ./types/io.k8s.api.autoscaling.v2.MetricSpec.dhall
| MetricStatus :
    ./types/io.k8s.api.autoscaling.v2.MetricStatus.dhall
| MetricTarget :
    ./types/io.k8s.api.autoscaling.v2.MetricTarget.dhall
| MetricValueStatus :
    ./types/io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
| ObjectMetricSource :
    ./types/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
| ObjectMetricStatus :
    ./types/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
| PodsMetricSource :
    ./types/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
| PodsMetricStatus :
    ./types/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
| ResourceMetricSource :
    ./types/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
| ResourceMetricStatus :
    ./types/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
| CronJob :
    ./types/io.k8s.api.batch.v1.CronJob.dhall
| CronJobList :
    ./types/io.k8s.api.batch.v1.CronJobList.dhall
| CronJobSpec :
    ./types/io.k8s.api.batch.v1.CronJobSpec.dhall
| CronJobStatus :
    ./types/io.k8s.api.batch.v1.CronJobStatus.dhall
| Job :
    ./types/io.k8s.api.batch.v1.Job.dhall
| JobCondition :
    ./types/io.k8s.api.batch.v1.JobCondition.dhall
| JobList :
    ./types/io.k8s.api.batch.v1.JobList.dhall
| JobSpec :
    ./types/io.k8s.api.batch.v1.JobSpec.dhall
| JobStatus :
    ./types/io.k8s.api.batch.v1.JobStatus.dhall
| JobTemplateSpec :
    ./types/io.k8s.api.batch.v1.JobTemplateSpec.dhall
| PodFailurePolicy :
    ./types/io.k8s.api.batch.v1.PodFailurePolicy.dhall
| PodFailurePolicyOnExitCodesRequirement :
    ./types/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
| PodFailurePolicyOnPodConditionsPattern :
    ./types/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
| PodFailurePolicyRule :
    ./types/io.k8s.api.batch.v1.PodFailurePolicyRule.dhall
| SuccessPolicy :
    ./types/io.k8s.api.batch.v1.SuccessPolicy.dhall
| SuccessPolicyRule :
    ./types/io.k8s.api.batch.v1.SuccessPolicyRule.dhall
| UncountedTerminatedPods :
    ./types/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
| CertificateSigningRequest :
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
| CertificateSigningRequestCondition :
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
| CertificateSigningRequestList :
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestList.dhall
| CertificateSigningRequestSpec :
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
| CertificateSigningRequestStatus :
    ./types/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
| ClusterTrustBundle :
    ./types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
| ClusterTrustBundleList :
    ./types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList.dhall
| ClusterTrustBundleSpec :
    ./types/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
| Lease :
    ./types/io.k8s.api.coordination.v1.Lease.dhall
| LeaseList :
    ./types/io.k8s.api.coordination.v1.LeaseList.dhall
| LeaseSpec :
    ./types/io.k8s.api.coordination.v1.LeaseSpec.dhall
| LeaseCandidate :
    ./types/io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
| LeaseCandidateList :
    ./types/io.k8s.api.coordination.v1alpha1.LeaseCandidateList.dhall
| LeaseCandidateSpec :
    ./types/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
| AWSElasticBlockStoreVolumeSource :
    ./types/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
| Affinity :
    ./types/io.k8s.api.core.v1.Affinity.dhall
| AppArmorProfile :
    ./types/io.k8s.api.core.v1.AppArmorProfile.dhall
| AttachedVolume :
    ./types/io.k8s.api.core.v1.AttachedVolume.dhall
| AzureDiskVolumeSource :
    ./types/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
| AzureFilePersistentVolumeSource :
    ./types/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
| AzureFileVolumeSource :
    ./types/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
| Binding :
    ./types/io.k8s.api.core.v1.Binding.dhall
| CSIPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
| CSIVolumeSource :
    ./types/io.k8s.api.core.v1.CSIVolumeSource.dhall
| Capabilities :
    ./types/io.k8s.api.core.v1.Capabilities.dhall
| CephFSPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
| CephFSVolumeSource :
    ./types/io.k8s.api.core.v1.CephFSVolumeSource.dhall
| CinderPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
| CinderVolumeSource :
    ./types/io.k8s.api.core.v1.CinderVolumeSource.dhall
| ClientIPConfig :
    ./types/io.k8s.api.core.v1.ClientIPConfig.dhall
| ClusterTrustBundleProjection :
    ./types/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
| ComponentCondition :
    ./types/io.k8s.api.core.v1.ComponentCondition.dhall
| ComponentStatus :
    ./types/io.k8s.api.core.v1.ComponentStatus.dhall
| ComponentStatusList :
    ./types/io.k8s.api.core.v1.ComponentStatusList.dhall
| ConfigMap :
    ./types/io.k8s.api.core.v1.ConfigMap.dhall
| ConfigMapEnvSource :
    ./types/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
| ConfigMapKeySelector :
    ./types/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
| ConfigMapList :
    ./types/io.k8s.api.core.v1.ConfigMapList.dhall
| ConfigMapNodeConfigSource :
    ./types/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
| ConfigMapProjection :
    ./types/io.k8s.api.core.v1.ConfigMapProjection.dhall
| ConfigMapVolumeSource :
    ./types/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
| Container :
    ./types/io.k8s.api.core.v1.Container.dhall
| ContainerImage :
    ./types/io.k8s.api.core.v1.ContainerImage.dhall
| ContainerPort :
    ./types/io.k8s.api.core.v1.ContainerPort.dhall
| ContainerResizePolicy :
    ./types/io.k8s.api.core.v1.ContainerResizePolicy.dhall
| ContainerState :
    ./types/io.k8s.api.core.v1.ContainerState.dhall
| ContainerStateRunning :
    ./types/io.k8s.api.core.v1.ContainerStateRunning.dhall
| ContainerStateTerminated :
    ./types/io.k8s.api.core.v1.ContainerStateTerminated.dhall
| ContainerStateWaiting :
    ./types/io.k8s.api.core.v1.ContainerStateWaiting.dhall
| ContainerStatus :
    ./types/io.k8s.api.core.v1.ContainerStatus.dhall
| ContainerUser :
    ./types/io.k8s.api.core.v1.ContainerUser.dhall
| DaemonEndpoint :
    ./types/io.k8s.api.core.v1.DaemonEndpoint.dhall
| DownwardAPIProjection :
    ./types/io.k8s.api.core.v1.DownwardAPIProjection.dhall
| DownwardAPIVolumeFile :
    ./types/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall
| DownwardAPIVolumeSource :
    ./types/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
| EmptyDirVolumeSource :
    ./types/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
| EndpointAddress :
    ./types/io.k8s.api.core.v1.EndpointAddress.dhall
| EndpointSubset :
    ./types/io.k8s.api.core.v1.EndpointSubset.dhall
| Endpoints :
    ./types/io.k8s.api.core.v1.Endpoints.dhall
| EndpointsList :
    ./types/io.k8s.api.core.v1.EndpointsList.dhall
| EnvFromSource :
    ./types/io.k8s.api.core.v1.EnvFromSource.dhall
| EnvVar :
    ./types/io.k8s.api.core.v1.EnvVar.dhall
| EnvVarSource :
    ./types/io.k8s.api.core.v1.EnvVarSource.dhall
| EphemeralContainer :
    ./types/io.k8s.api.core.v1.EphemeralContainer.dhall
| EphemeralVolumeSource :
    ./types/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
| EventSource :
    ./types/io.k8s.api.core.v1.EventSource.dhall
| ExecAction :
    ./types/io.k8s.api.core.v1.ExecAction.dhall
| FCVolumeSource :
    ./types/io.k8s.api.core.v1.FCVolumeSource.dhall
| FlexPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
| FlexVolumeSource :
    ./types/io.k8s.api.core.v1.FlexVolumeSource.dhall
| FlockerVolumeSource :
    ./types/io.k8s.api.core.v1.FlockerVolumeSource.dhall
| GCEPersistentDiskVolumeSource :
    ./types/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
| GRPCAction :
    ./types/io.k8s.api.core.v1.GRPCAction.dhall
| GitRepoVolumeSource :
    ./types/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
| GlusterfsPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
| GlusterfsVolumeSource :
    ./types/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
| HTTPGetAction :
    ./types/io.k8s.api.core.v1.HTTPGetAction.dhall
| HTTPHeader :
    ./types/io.k8s.api.core.v1.HTTPHeader.dhall
| HostAlias :
    ./types/io.k8s.api.core.v1.HostAlias.dhall
| HostIP :
    ./types/io.k8s.api.core.v1.HostIP.dhall
| HostPathVolumeSource :
    ./types/io.k8s.api.core.v1.HostPathVolumeSource.dhall
| ISCSIPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
| ISCSIVolumeSource :
    ./types/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
| ImageVolumeSource :
    ./types/io.k8s.api.core.v1.ImageVolumeSource.dhall
| KeyToPath :
    ./types/io.k8s.api.core.v1.KeyToPath.dhall
| Lifecycle :
    ./types/io.k8s.api.core.v1.Lifecycle.dhall
| LifecycleHandler :
    ./types/io.k8s.api.core.v1.LifecycleHandler.dhall
| LimitRange :
    ./types/io.k8s.api.core.v1.LimitRange.dhall
| LimitRangeItem :
    ./types/io.k8s.api.core.v1.LimitRangeItem.dhall
| LimitRangeList :
    ./types/io.k8s.api.core.v1.LimitRangeList.dhall
| LimitRangeSpec :
    ./types/io.k8s.api.core.v1.LimitRangeSpec.dhall
| LinuxContainerUser :
    ./types/io.k8s.api.core.v1.LinuxContainerUser.dhall
| LoadBalancerIngress :
    ./types/io.k8s.api.core.v1.LoadBalancerIngress.dhall
| LoadBalancerStatus :
    ./types/io.k8s.api.core.v1.LoadBalancerStatus.dhall
| LocalObjectReference :
    ./types/io.k8s.api.core.v1.LocalObjectReference.dhall
| LocalVolumeSource :
    ./types/io.k8s.api.core.v1.LocalVolumeSource.dhall
| ModifyVolumeStatus :
    ./types/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
| NFSVolumeSource :
    ./types/io.k8s.api.core.v1.NFSVolumeSource.dhall
| Namespace :
    ./types/io.k8s.api.core.v1.Namespace.dhall
| NamespaceCondition :
    ./types/io.k8s.api.core.v1.NamespaceCondition.dhall
| NamespaceList :
    ./types/io.k8s.api.core.v1.NamespaceList.dhall
| NamespaceSpec :
    ./types/io.k8s.api.core.v1.NamespaceSpec.dhall
| NamespaceStatus :
    ./types/io.k8s.api.core.v1.NamespaceStatus.dhall
| Node :
    ./types/io.k8s.api.core.v1.Node.dhall
| NodeAddress :
    ./types/io.k8s.api.core.v1.NodeAddress.dhall
| NodeAffinity :
    ./types/io.k8s.api.core.v1.NodeAffinity.dhall
| NodeCondition :
    ./types/io.k8s.api.core.v1.NodeCondition.dhall
| NodeConfigSource :
    ./types/io.k8s.api.core.v1.NodeConfigSource.dhall
| NodeConfigStatus :
    ./types/io.k8s.api.core.v1.NodeConfigStatus.dhall
| NodeDaemonEndpoints :
    ./types/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
| NodeFeatures :
    ./types/io.k8s.api.core.v1.NodeFeatures.dhall
| NodeList :
    ./types/io.k8s.api.core.v1.NodeList.dhall
| NodeRuntimeHandler :
    ./types/io.k8s.api.core.v1.NodeRuntimeHandler.dhall
| NodeRuntimeHandlerFeatures :
    ./types/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
| NodeSelector :
    ./types/io.k8s.api.core.v1.NodeSelector.dhall
| NodeSelectorRequirement :
    ./types/io.k8s.api.core.v1.NodeSelectorRequirement.dhall
| NodeSelectorTerm :
    ./types/io.k8s.api.core.v1.NodeSelectorTerm.dhall
| NodeSpec :
    ./types/io.k8s.api.core.v1.NodeSpec.dhall
| NodeStatus :
    ./types/io.k8s.api.core.v1.NodeStatus.dhall
| NodeSystemInfo :
    ./types/io.k8s.api.core.v1.NodeSystemInfo.dhall
| ObjectFieldSelector :
    ./types/io.k8s.api.core.v1.ObjectFieldSelector.dhall
| ObjectReference :
    ./types/io.k8s.api.core.v1.ObjectReference.dhall
| PersistentVolume :
    ./types/io.k8s.api.core.v1.PersistentVolume.dhall
| PersistentVolumeClaim :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaim.dhall
| PersistentVolumeClaimCondition :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall
| PersistentVolumeClaimList :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimList.dhall
| PersistentVolumeClaimSpec :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
| PersistentVolumeClaimStatus :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
| PersistentVolumeClaimTemplate :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
| PersistentVolumeClaimVolumeSource :
    ./types/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
| PersistentVolumeList :
    ./types/io.k8s.api.core.v1.PersistentVolumeList.dhall
| PersistentVolumeSpec :
    ./types/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
| PersistentVolumeStatus :
    ./types/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
| PhotonPersistentDiskVolumeSource :
    ./types/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
| Pod :
    ./types/io.k8s.api.core.v1.Pod.dhall
| PodAffinity :
    ./types/io.k8s.api.core.v1.PodAffinity.dhall
| PodAffinityTerm :
    ./types/io.k8s.api.core.v1.PodAffinityTerm.dhall
| PodAntiAffinity :
    ./types/io.k8s.api.core.v1.PodAntiAffinity.dhall
| PodCondition :
    ./types/io.k8s.api.core.v1.PodCondition.dhall
| PodDNSConfig :
    ./types/io.k8s.api.core.v1.PodDNSConfig.dhall
| PodDNSConfigOption :
    ./types/io.k8s.api.core.v1.PodDNSConfigOption.dhall
| PodIP :
    ./types/io.k8s.api.core.v1.PodIP.dhall
| PodList :
    ./types/io.k8s.api.core.v1.PodList.dhall
| PodOS :
    ./types/io.k8s.api.core.v1.PodOS.dhall
| PodReadinessGate :
    ./types/io.k8s.api.core.v1.PodReadinessGate.dhall
| PodResourceClaim :
    ./types/io.k8s.api.core.v1.PodResourceClaim.dhall
| PodResourceClaimStatus :
    ./types/io.k8s.api.core.v1.PodResourceClaimStatus.dhall
| PodSchedulingGate :
    ./types/io.k8s.api.core.v1.PodSchedulingGate.dhall
| PodSecurityContext :
    ./types/io.k8s.api.core.v1.PodSecurityContext.dhall
| PodSpec :
    ./types/io.k8s.api.core.v1.PodSpec.dhall
| PodStatus :
    ./types/io.k8s.api.core.v1.PodStatus.dhall
| PodTemplate :
    ./types/io.k8s.api.core.v1.PodTemplate.dhall
| PodTemplateList :
    ./types/io.k8s.api.core.v1.PodTemplateList.dhall
| PodTemplateSpec :
    ./types/io.k8s.api.core.v1.PodTemplateSpec.dhall
| PortStatus :
    ./types/io.k8s.api.core.v1.PortStatus.dhall
| PortworxVolumeSource :
    ./types/io.k8s.api.core.v1.PortworxVolumeSource.dhall
| PreferredSchedulingTerm :
    ./types/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall
| Probe :
    ./types/io.k8s.api.core.v1.Probe.dhall
| ProjectedVolumeSource :
    ./types/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
| QuobyteVolumeSource :
    ./types/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
| RBDPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
| RBDVolumeSource :
    ./types/io.k8s.api.core.v1.RBDVolumeSource.dhall
| ReplicationController :
    ./types/io.k8s.api.core.v1.ReplicationController.dhall
| ReplicationControllerCondition :
    ./types/io.k8s.api.core.v1.ReplicationControllerCondition.dhall
| ReplicationControllerList :
    ./types/io.k8s.api.core.v1.ReplicationControllerList.dhall
| ReplicationControllerSpec :
    ./types/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
| ReplicationControllerStatus :
    ./types/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
| ResourceClaim :
    ./types/io.k8s.api.core.v1.ResourceClaim.dhall
| ResourceFieldSelector :
    ./types/io.k8s.api.core.v1.ResourceFieldSelector.dhall
| ResourceHealth :
    ./types/io.k8s.api.core.v1.ResourceHealth.dhall
| ResourceQuota :
    ./types/io.k8s.api.core.v1.ResourceQuota.dhall
| ResourceQuotaList :
    ./types/io.k8s.api.core.v1.ResourceQuotaList.dhall
| ResourceQuotaSpec :
    ./types/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
| ResourceQuotaStatus :
    ./types/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
| ResourceRequirements :
    ./types/io.k8s.api.core.v1.ResourceRequirements.dhall
| ResourceStatus :
    ./types/io.k8s.api.core.v1.ResourceStatus.dhall
| SELinuxOptions :
    ./types/io.k8s.api.core.v1.SELinuxOptions.dhall
| ScaleIOPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
| ScaleIOVolumeSource :
    ./types/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
| ScopeSelector :
    ./types/io.k8s.api.core.v1.ScopeSelector.dhall
| ScopedResourceSelectorRequirement :
    ./types/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
| SeccompProfile :
    ./types/io.k8s.api.core.v1.SeccompProfile.dhall
| Secret :
    ./types/io.k8s.api.core.v1.Secret.dhall
| SecretEnvSource :
    ./types/io.k8s.api.core.v1.SecretEnvSource.dhall
| SecretKeySelector :
    ./types/io.k8s.api.core.v1.SecretKeySelector.dhall
| SecretList :
    ./types/io.k8s.api.core.v1.SecretList.dhall
| SecretProjection :
    ./types/io.k8s.api.core.v1.SecretProjection.dhall
| SecretReference :
    ./types/io.k8s.api.core.v1.SecretReference.dhall
| SecretVolumeSource :
    ./types/io.k8s.api.core.v1.SecretVolumeSource.dhall
| SecurityContext :
    ./types/io.k8s.api.core.v1.SecurityContext.dhall
| Service :
    ./types/io.k8s.api.core.v1.Service.dhall
| ServiceAccount :
    ./types/io.k8s.api.core.v1.ServiceAccount.dhall
| ServiceAccountList :
    ./types/io.k8s.api.core.v1.ServiceAccountList.dhall
| ServiceAccountTokenProjection :
    ./types/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
| ServiceList :
    ./types/io.k8s.api.core.v1.ServiceList.dhall
| ServicePort :
    ./types/io.k8s.api.core.v1.ServicePort.dhall
| ServiceSpec :
    ./types/io.k8s.api.core.v1.ServiceSpec.dhall
| ServiceStatus :
    ./types/io.k8s.api.core.v1.ServiceStatus.dhall
| SessionAffinityConfig :
    ./types/io.k8s.api.core.v1.SessionAffinityConfig.dhall
| SleepAction :
    ./types/io.k8s.api.core.v1.SleepAction.dhall
| StorageOSPersistentVolumeSource :
    ./types/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
| StorageOSVolumeSource :
    ./types/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
| Sysctl :
    ./types/io.k8s.api.core.v1.Sysctl.dhall
| TCPSocketAction :
    ./types/io.k8s.api.core.v1.TCPSocketAction.dhall
| Taint :
    ./types/io.k8s.api.core.v1.Taint.dhall
| Toleration :
    ./types/io.k8s.api.core.v1.Toleration.dhall
| TopologySelectorLabelRequirement :
    ./types/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
| TopologySelectorTerm :
    ./types/io.k8s.api.core.v1.TopologySelectorTerm.dhall
| TopologySpreadConstraint :
    ./types/io.k8s.api.core.v1.TopologySpreadConstraint.dhall
| TypedLocalObjectReference :
    ./types/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
| TypedObjectReference :
    ./types/io.k8s.api.core.v1.TypedObjectReference.dhall
| Volume :
    ./types/io.k8s.api.core.v1.Volume.dhall
| VolumeDevice :
    ./types/io.k8s.api.core.v1.VolumeDevice.dhall
| VolumeMount :
    ./types/io.k8s.api.core.v1.VolumeMount.dhall
| VolumeMountStatus :
    ./types/io.k8s.api.core.v1.VolumeMountStatus.dhall
| VolumeNodeAffinity :
    ./types/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
| VolumeProjection :
    ./types/io.k8s.api.core.v1.VolumeProjection.dhall
| VolumeResourceRequirements :
    ./types/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
| VsphereVirtualDiskVolumeSource :
    ./types/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
| WeightedPodAffinityTerm :
    ./types/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall
| WindowsSecurityContextOptions :
    ./types/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
| Endpoint :
    ./types/io.k8s.api.discovery.v1.Endpoint.dhall
| EndpointConditions :
    ./types/io.k8s.api.discovery.v1.EndpointConditions.dhall
| EndpointHints :
    ./types/io.k8s.api.discovery.v1.EndpointHints.dhall
| EndpointPort :
    ./types/io.k8s.api.discovery.v1.EndpointPort.dhall
| EndpointSlice :
    ./types/io.k8s.api.discovery.v1.EndpointSlice.dhall
| EndpointSliceList :
    ./types/io.k8s.api.discovery.v1.EndpointSliceList.dhall
| ForZone :
    ./types/io.k8s.api.discovery.v1.ForZone.dhall
| Event :
    ./types/io.k8s.api.events.v1.Event.dhall
| EventList :
    ./types/io.k8s.api.events.v1.EventList.dhall
| EventSeries :
    ./types/io.k8s.api.events.v1.EventSeries.dhall
| ExemptPriorityLevelConfiguration :
    ./types/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
| FlowDistinguisherMethod :
    ./types/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
| FlowSchema :
    ./types/io.k8s.api.flowcontrol.v1.FlowSchema.dhall
| FlowSchemaCondition :
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall
| FlowSchemaList :
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaList.dhall
| FlowSchemaSpec :
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
| FlowSchemaStatus :
    ./types/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
| GroupSubject :
    ./types/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
| LimitResponse :
    ./types/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
| LimitedPriorityLevelConfiguration :
    ./types/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
| NonResourcePolicyRule :
    ./types/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall
| PolicyRulesWithSubjects :
    ./types/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall
| PriorityLevelConfiguration :
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
| PriorityLevelConfigurationCondition :
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
| PriorityLevelConfigurationList :
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList.dhall
| PriorityLevelConfigurationReference :
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
| PriorityLevelConfigurationSpec :
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
| PriorityLevelConfigurationStatus :
    ./types/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
| QueuingConfiguration :
    ./types/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
| ResourcePolicyRule :
    ./types/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall
| ServiceAccountSubject :
    ./types/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
| UserSubject :
    ./types/io.k8s.api.flowcontrol.v1.UserSubject.dhall
| HTTPIngressPath :
    ./types/io.k8s.api.networking.v1.HTTPIngressPath.dhall
| HTTPIngressRuleValue :
    ./types/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
| IPBlock :
    ./types/io.k8s.api.networking.v1.IPBlock.dhall
| Ingress :
    ./types/io.k8s.api.networking.v1.Ingress.dhall
| IngressBackend :
    ./types/io.k8s.api.networking.v1.IngressBackend.dhall
| IngressClass :
    ./types/io.k8s.api.networking.v1.IngressClass.dhall
| IngressClassList :
    ./types/io.k8s.api.networking.v1.IngressClassList.dhall
| IngressClassParametersReference :
    ./types/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
| IngressClassSpec :
    ./types/io.k8s.api.networking.v1.IngressClassSpec.dhall
| IngressList :
    ./types/io.k8s.api.networking.v1.IngressList.dhall
| IngressLoadBalancerIngress :
    ./types/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
| IngressLoadBalancerStatus :
    ./types/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
| IngressPortStatus :
    ./types/io.k8s.api.networking.v1.IngressPortStatus.dhall
| IngressRule :
    ./types/io.k8s.api.networking.v1.IngressRule.dhall
| IngressServiceBackend :
    ./types/io.k8s.api.networking.v1.IngressServiceBackend.dhall
| IngressSpec :
    ./types/io.k8s.api.networking.v1.IngressSpec.dhall
| IngressStatus :
    ./types/io.k8s.api.networking.v1.IngressStatus.dhall
| IngressTLS :
    ./types/io.k8s.api.networking.v1.IngressTLS.dhall
| NetworkPolicy :
    ./types/io.k8s.api.networking.v1.NetworkPolicy.dhall
| NetworkPolicyEgressRule :
    ./types/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall
| NetworkPolicyIngressRule :
    ./types/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall
| NetworkPolicyList :
    ./types/io.k8s.api.networking.v1.NetworkPolicyList.dhall
| NetworkPolicyPeer :
    ./types/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall
| NetworkPolicyPort :
    ./types/io.k8s.api.networking.v1.NetworkPolicyPort.dhall
| NetworkPolicySpec :
    ./types/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
| ServiceBackendPort :
    ./types/io.k8s.api.networking.v1.ServiceBackendPort.dhall
| IPAddress :
    ./types/io.k8s.api.networking.v1beta1.IPAddress.dhall
| IPAddressList :
    ./types/io.k8s.api.networking.v1beta1.IPAddressList.dhall
| IPAddressSpec :
    ./types/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
| ParentReference :
    ./types/io.k8s.api.networking.v1beta1.ParentReference.dhall
| ServiceCIDR :
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
| ServiceCIDRList :
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDRList.dhall
| ServiceCIDRSpec :
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
| ServiceCIDRStatus :
    ./types/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
| Overhead :
    ./types/io.k8s.api.node.v1.Overhead.dhall
| RuntimeClass :
    ./types/io.k8s.api.node.v1.RuntimeClass.dhall
| RuntimeClassList :
    ./types/io.k8s.api.node.v1.RuntimeClassList.dhall
| Scheduling :
    ./types/io.k8s.api.node.v1.Scheduling.dhall
| Eviction :
    ./types/io.k8s.api.policy.v1.Eviction.dhall
| PodDisruptionBudget :
    ./types/io.k8s.api.policy.v1.PodDisruptionBudget.dhall
| PodDisruptionBudgetList :
    ./types/io.k8s.api.policy.v1.PodDisruptionBudgetList.dhall
| PodDisruptionBudgetSpec :
    ./types/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
| PodDisruptionBudgetStatus :
    ./types/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
| AggregationRule :
    ./types/io.k8s.api.rbac.v1.AggregationRule.dhall
| ClusterRole :
    ./types/io.k8s.api.rbac.v1.ClusterRole.dhall
| ClusterRoleBinding :
    ./types/io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
| ClusterRoleBindingList :
    ./types/io.k8s.api.rbac.v1.ClusterRoleBindingList.dhall
| ClusterRoleList :
    ./types/io.k8s.api.rbac.v1.ClusterRoleList.dhall
| PolicyRule :
    ./types/io.k8s.api.rbac.v1.PolicyRule.dhall
| Role :
    ./types/io.k8s.api.rbac.v1.Role.dhall
| RoleBinding :
    ./types/io.k8s.api.rbac.v1.RoleBinding.dhall
| RoleBindingList :
    ./types/io.k8s.api.rbac.v1.RoleBindingList.dhall
| RoleList :
    ./types/io.k8s.api.rbac.v1.RoleList.dhall
| RoleRef :
    ./types/io.k8s.api.rbac.v1.RoleRef.dhall
| Subject :
    ./types/io.k8s.api.rbac.v1.Subject.dhall
| AllocationResult :
    ./types/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
| BasicDevice :
    ./types/io.k8s.api.resource.v1alpha3.BasicDevice.dhall
| CELDeviceSelector :
    ./types/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall
| Device :
    ./types/io.k8s.api.resource.v1alpha3.Device.dhall
| DeviceAllocationConfiguration :
    ./types/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
| DeviceAllocationResult :
    ./types/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
| DeviceAttribute :
    ./types/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
| DeviceClaim :
    ./types/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
| DeviceClaimConfiguration :
    ./types/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
| DeviceClass :
    ./types/io.k8s.api.resource.v1alpha3.DeviceClass.dhall
| DeviceClassConfiguration :
    ./types/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
| DeviceClassList :
    ./types/io.k8s.api.resource.v1alpha3.DeviceClassList.dhall
| DeviceClassSpec :
    ./types/io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
| DeviceConstraint :
    ./types/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall
| DeviceRequest :
    ./types/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall
| DeviceRequestAllocationResult :
    ./types/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
| DeviceSelector :
    ./types/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall
| OpaqueDeviceConfiguration :
    ./types/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
| PodSchedulingContext :
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
| PodSchedulingContextList :
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContextList.dhall
| PodSchedulingContextSpec :
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
| PodSchedulingContextStatus :
    ./types/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
| ResourceClaimConsumerReference :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
| ResourceClaimList :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimList.dhall
| ResourceClaimSchedulingStatus :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
| ResourceClaimSpec :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
| ResourceClaimStatus :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
| ResourceClaimTemplate :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
| ResourceClaimTemplateList :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList.dhall
| ResourceClaimTemplateSpec :
    ./types/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
| ResourcePool :
    ./types/io.k8s.api.resource.v1alpha3.ResourcePool.dhall
| ResourceSlice :
    ./types/io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
| ResourceSliceList :
    ./types/io.k8s.api.resource.v1alpha3.ResourceSliceList.dhall
| ResourceSliceSpec :
    ./types/io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
| PriorityClass :
    ./types/io.k8s.api.scheduling.v1.PriorityClass.dhall
| PriorityClassList :
    ./types/io.k8s.api.scheduling.v1.PriorityClassList.dhall
| CSIDriver :
    ./types/io.k8s.api.storage.v1.CSIDriver.dhall
| CSIDriverList :
    ./types/io.k8s.api.storage.v1.CSIDriverList.dhall
| CSIDriverSpec :
    ./types/io.k8s.api.storage.v1.CSIDriverSpec.dhall
| CSINode :
    ./types/io.k8s.api.storage.v1.CSINode.dhall
| CSINodeDriver :
    ./types/io.k8s.api.storage.v1.CSINodeDriver.dhall
| CSINodeList :
    ./types/io.k8s.api.storage.v1.CSINodeList.dhall
| CSINodeSpec :
    ./types/io.k8s.api.storage.v1.CSINodeSpec.dhall
| CSIStorageCapacity :
    ./types/io.k8s.api.storage.v1.CSIStorageCapacity.dhall
| CSIStorageCapacityList :
    ./types/io.k8s.api.storage.v1.CSIStorageCapacityList.dhall
| StorageClass :
    ./types/io.k8s.api.storage.v1.StorageClass.dhall
| StorageClassList :
    ./types/io.k8s.api.storage.v1.StorageClassList.dhall
| TokenRequest :
    ./types/io.k8s.api.storage.v1.TokenRequest.dhall
| VolumeAttachment :
    ./types/io.k8s.api.storage.v1.VolumeAttachment.dhall
| VolumeAttachmentList :
    ./types/io.k8s.api.storage.v1.VolumeAttachmentList.dhall
| VolumeAttachmentSource :
    ./types/io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
| VolumeAttachmentSpec :
    ./types/io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
| VolumeAttachmentStatus :
    ./types/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
| VolumeError :
    ./types/io.k8s.api.storage.v1.VolumeError.dhall
| VolumeNodeResources :
    ./types/io.k8s.api.storage.v1.VolumeNodeResources.dhall
| VolumeAttributesClass :
    ./types/io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
| VolumeAttributesClassList :
    ./types/io.k8s.api.storage.v1beta1.VolumeAttributesClassList.dhall
| GroupVersionResource :
    ./types/io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
| MigrationCondition :
    ./types/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
| StorageVersionMigration :
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
| StorageVersionMigrationList :
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList.dhall
| StorageVersionMigrationSpec :
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
| StorageVersionMigrationStatus :
    ./types/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
| CustomResourceColumnDefinition :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
| CustomResourceConversion :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
| CustomResourceDefinition :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
| CustomResourceDefinitionCondition :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
| CustomResourceDefinitionList :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList.dhall
| CustomResourceDefinitionNames :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
| CustomResourceDefinitionSpec :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
| CustomResourceDefinitionStatus :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
| CustomResourceDefinitionVersion :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
| CustomResourceSubresourceScale :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
| CustomResourceSubresourceStatus :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus.dhall
| CustomResourceSubresources :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
| CustomResourceValidation :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
| ExternalDocumentation :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
| JSON :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
| JSONSchemaProps :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
| JSONSchemaPropsOrArray :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray.dhall
| JSONSchemaPropsOrBool :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool.dhall
| JSONSchemaPropsOrStringArray :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray.dhall
| SelectableField :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
| ValidationRule :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
| WebhookClientConfig :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
| WebhookConversion :
    ./types/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
| Quantity :
    ./types/io.k8s.apimachinery.pkg.api.resource.Quantity.dhall
| APIGroup :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
| APIGroupList :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList.dhall
| APIResource :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
| APIResourceList :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList.dhall
| APIVersions :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions.dhall
| Condition :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall
| DeleteOptions :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
| FieldSelectorRequirement :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
| FieldsV1 :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1.dhall
| GroupVersionForDiscovery :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
| LabelSelector :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
| LabelSelectorRequirement :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
| ListMeta :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
| ManagedFieldsEntry :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
| MicroTime :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime.dhall
| ObjectMeta :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
| OwnerReference :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
| Patch :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Patch.dhall
| Preconditions :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
| ServerAddressByClientCIDR :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
| Status :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Status.dhall
| StatusCause :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall
| StatusDetails :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
| Time :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.Time.dhall
| WatchEvent :
    ./types/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent.dhall
| RawExtension :
    ./types/io.k8s.apimachinery.pkg.runtime.RawExtension.dhall
| IntOrString :
    ./types/io.k8s.apimachinery.pkg.util.intstr.IntOrString.dhall
| NatOrString :
    ./types/io.k8s.apimachinery.pkg.util.intstr.NatOrString.dhall
| Info :
    ./types/io.k8s.apimachinery.pkg.version.Info.dhall
| APIService :
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
| APIServiceCondition :
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
| APIServiceList :
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList.dhall
| APIServiceSpec :
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
| APIServiceStatus :
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
| ServiceReference :
    ./types/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
>
{ AuditAnnotation =
    ./schemas/io.k8s.api.admissionregistration.v1.AuditAnnotation.dhall
, ExpressionWarning =
    ./schemas/io.k8s.api.admissionregistration.v1.ExpressionWarning.dhall
, MatchCondition =
    ./schemas/io.k8s.api.admissionregistration.v1.MatchCondition.dhall
, MatchResources =
    ./schemas/io.k8s.api.admissionregistration.v1.MatchResources.dhall
, MutatingWebhook =
    ./schemas/io.k8s.api.admissionregistration.v1.MutatingWebhook.dhall
, MutatingWebhookConfiguration =
    ./schemas/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration.dhall
, MutatingWebhookConfigurationList =
    ./schemas/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList.dhall
, NamedRuleWithOperations =
    ./schemas/io.k8s.api.admissionregistration.v1.NamedRuleWithOperations.dhall
, ParamKind =
    ./schemas/io.k8s.api.admissionregistration.v1.ParamKind.dhall
, ParamRef =
    ./schemas/io.k8s.api.admissionregistration.v1.ParamRef.dhall
, RuleWithOperations =
    ./schemas/io.k8s.api.admissionregistration.v1.RuleWithOperations.dhall
, TypeChecking =
    ./schemas/io.k8s.api.admissionregistration.v1.TypeChecking.dhall
, ValidatingAdmissionPolicy =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy.dhall
, ValidatingAdmissionPolicyBinding =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding.dhall
, ValidatingAdmissionPolicyBindingList =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList.dhall
, ValidatingAdmissionPolicyBindingSpec =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec.dhall
, ValidatingAdmissionPolicyList =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList.dhall
, ValidatingAdmissionPolicySpec =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec.dhall
, ValidatingAdmissionPolicyStatus =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus.dhall
, ValidatingWebhook =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhook.dhall
, ValidatingWebhookConfiguration =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration.dhall
, ValidatingWebhookConfigurationList =
    ./schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList.dhall
, Validation =
    ./schemas/io.k8s.api.admissionregistration.v1.Validation.dhall
, Variable =
    ./schemas/io.k8s.api.admissionregistration.v1.Variable.dhall
, ServerStorageVersion =
    ./schemas/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion.dhall
, StorageVersion =
    ./schemas/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion.dhall
, StorageVersionCondition =
    ./schemas/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition.dhall
, StorageVersionList =
    ./schemas/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList.dhall
, StorageVersionStatus =
    ./schemas/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus.dhall
, ControllerRevision =
    ./schemas/io.k8s.api.apps.v1.ControllerRevision.dhall
, ControllerRevisionList =
    ./schemas/io.k8s.api.apps.v1.ControllerRevisionList.dhall
, DaemonSet =
    ./schemas/io.k8s.api.apps.v1.DaemonSet.dhall
, DaemonSetCondition =
    ./schemas/io.k8s.api.apps.v1.DaemonSetCondition.dhall
, DaemonSetList =
    ./schemas/io.k8s.api.apps.v1.DaemonSetList.dhall
, DaemonSetSpec =
    ./schemas/io.k8s.api.apps.v1.DaemonSetSpec.dhall
, DaemonSetStatus =
    ./schemas/io.k8s.api.apps.v1.DaemonSetStatus.dhall
, DaemonSetUpdateStrategy =
    ./schemas/io.k8s.api.apps.v1.DaemonSetUpdateStrategy.dhall
, Deployment =
    ./schemas/io.k8s.api.apps.v1.Deployment.dhall
, DeploymentCondition =
    ./schemas/io.k8s.api.apps.v1.DeploymentCondition.dhall
, DeploymentList =
    ./schemas/io.k8s.api.apps.v1.DeploymentList.dhall
, DeploymentSpec =
    ./schemas/io.k8s.api.apps.v1.DeploymentSpec.dhall
, DeploymentStatus =
    ./schemas/io.k8s.api.apps.v1.DeploymentStatus.dhall
, DeploymentStrategy =
    ./schemas/io.k8s.api.apps.v1.DeploymentStrategy.dhall
, ReplicaSet =
    ./schemas/io.k8s.api.apps.v1.ReplicaSet.dhall
, ReplicaSetCondition =
    ./schemas/io.k8s.api.apps.v1.ReplicaSetCondition.dhall
, ReplicaSetList =
    ./schemas/io.k8s.api.apps.v1.ReplicaSetList.dhall
, ReplicaSetSpec =
    ./schemas/io.k8s.api.apps.v1.ReplicaSetSpec.dhall
, ReplicaSetStatus =
    ./schemas/io.k8s.api.apps.v1.ReplicaSetStatus.dhall
, RollingUpdateDaemonSet =
    ./schemas/io.k8s.api.apps.v1.RollingUpdateDaemonSet.dhall
, RollingUpdateDeployment =
    ./schemas/io.k8s.api.apps.v1.RollingUpdateDeployment.dhall
, RollingUpdateStatefulSetStrategy =
    ./schemas/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy.dhall
, StatefulSet =
    ./schemas/io.k8s.api.apps.v1.StatefulSet.dhall
, StatefulSetCondition =
    ./schemas/io.k8s.api.apps.v1.StatefulSetCondition.dhall
, StatefulSetList =
    ./schemas/io.k8s.api.apps.v1.StatefulSetList.dhall
, StatefulSetOrdinals =
    ./schemas/io.k8s.api.apps.v1.StatefulSetOrdinals.dhall
, StatefulSetPersistentVolumeClaimRetentionPolicy =
    ./schemas/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy.dhall
, StatefulSetSpec =
    ./schemas/io.k8s.api.apps.v1.StatefulSetSpec.dhall
, StatefulSetStatus =
    ./schemas/io.k8s.api.apps.v1.StatefulSetStatus.dhall
, StatefulSetUpdateStrategy =
    ./schemas/io.k8s.api.apps.v1.StatefulSetUpdateStrategy.dhall
, BoundObjectReference =
    ./schemas/io.k8s.api.authentication.v1.BoundObjectReference.dhall
, SelfSubjectReview =
    ./schemas/io.k8s.api.authentication.v1.SelfSubjectReview.dhall
, SelfSubjectReviewStatus =
    ./schemas/io.k8s.api.authentication.v1.SelfSubjectReviewStatus.dhall
, TokenRequestSpec =
    ./schemas/io.k8s.api.authentication.v1.TokenRequestSpec.dhall
, TokenRequestStatus =
    ./schemas/io.k8s.api.authentication.v1.TokenRequestStatus.dhall
, TokenReview =
    ./schemas/io.k8s.api.authentication.v1.TokenReview.dhall
, TokenReviewSpec =
    ./schemas/io.k8s.api.authentication.v1.TokenReviewSpec.dhall
, TokenReviewStatus =
    ./schemas/io.k8s.api.authentication.v1.TokenReviewStatus.dhall
, UserInfo =
    ./schemas/io.k8s.api.authentication.v1.UserInfo.dhall
, FieldSelectorAttributes =
    ./schemas/io.k8s.api.authorization.v1.FieldSelectorAttributes.dhall
, LabelSelectorAttributes =
    ./schemas/io.k8s.api.authorization.v1.LabelSelectorAttributes.dhall
, LocalSubjectAccessReview =
    ./schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview.dhall
, NonResourceAttributes =
    ./schemas/io.k8s.api.authorization.v1.NonResourceAttributes.dhall
, NonResourceRule =
    ./schemas/io.k8s.api.authorization.v1.NonResourceRule.dhall
, ResourceAttributes =
    ./schemas/io.k8s.api.authorization.v1.ResourceAttributes.dhall
, ResourceRule =
    ./schemas/io.k8s.api.authorization.v1.ResourceRule.dhall
, SelfSubjectAccessReview =
    ./schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview.dhall
, SelfSubjectAccessReviewSpec =
    ./schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec.dhall
, SelfSubjectRulesReview =
    ./schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview.dhall
, SelfSubjectRulesReviewSpec =
    ./schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec.dhall
, SubjectAccessReview =
    ./schemas/io.k8s.api.authorization.v1.SubjectAccessReview.dhall
, SubjectAccessReviewSpec =
    ./schemas/io.k8s.api.authorization.v1.SubjectAccessReviewSpec.dhall
, SubjectAccessReviewStatus =
    ./schemas/io.k8s.api.authorization.v1.SubjectAccessReviewStatus.dhall
, SubjectRulesReviewStatus =
    ./schemas/io.k8s.api.authorization.v1.SubjectRulesReviewStatus.dhall
, Scale =
    ./schemas/io.k8s.api.autoscaling.v1.Scale.dhall
, ScaleSpec =
    ./schemas/io.k8s.api.autoscaling.v1.ScaleSpec.dhall
, ScaleStatus =
    ./schemas/io.k8s.api.autoscaling.v1.ScaleStatus.dhall
, ContainerResourceMetricSource =
    ./schemas/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource.dhall
, ContainerResourceMetricStatus =
    ./schemas/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus.dhall
, CrossVersionObjectReference =
    ./schemas/io.k8s.api.autoscaling.v2.CrossVersionObjectReference.dhall
, ExternalMetricSource =
    ./schemas/io.k8s.api.autoscaling.v2.ExternalMetricSource.dhall
, ExternalMetricStatus =
    ./schemas/io.k8s.api.autoscaling.v2.ExternalMetricStatus.dhall
, HPAScalingPolicy =
    ./schemas/io.k8s.api.autoscaling.v2.HPAScalingPolicy.dhall
, HPAScalingRules =
    ./schemas/io.k8s.api.autoscaling.v2.HPAScalingRules.dhall
, HorizontalPodAutoscaler =
    ./schemas/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler.dhall
, HorizontalPodAutoscalerBehavior =
    ./schemas/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior.dhall
, HorizontalPodAutoscalerCondition =
    ./schemas/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition.dhall
, HorizontalPodAutoscalerList =
    ./schemas/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList.dhall
, HorizontalPodAutoscalerSpec =
    ./schemas/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec.dhall
, HorizontalPodAutoscalerStatus =
    ./schemas/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus.dhall
, MetricIdentifier =
    ./schemas/io.k8s.api.autoscaling.v2.MetricIdentifier.dhall
, MetricSpec =
    ./schemas/io.k8s.api.autoscaling.v2.MetricSpec.dhall
, MetricStatus =
    ./schemas/io.k8s.api.autoscaling.v2.MetricStatus.dhall
, MetricTarget =
    ./schemas/io.k8s.api.autoscaling.v2.MetricTarget.dhall
, MetricValueStatus =
    ./schemas/io.k8s.api.autoscaling.v2.MetricValueStatus.dhall
, ObjectMetricSource =
    ./schemas/io.k8s.api.autoscaling.v2.ObjectMetricSource.dhall
, ObjectMetricStatus =
    ./schemas/io.k8s.api.autoscaling.v2.ObjectMetricStatus.dhall
, PodsMetricSource =
    ./schemas/io.k8s.api.autoscaling.v2.PodsMetricSource.dhall
, PodsMetricStatus =
    ./schemas/io.k8s.api.autoscaling.v2.PodsMetricStatus.dhall
, ResourceMetricSource =
    ./schemas/io.k8s.api.autoscaling.v2.ResourceMetricSource.dhall
, ResourceMetricStatus =
    ./schemas/io.k8s.api.autoscaling.v2.ResourceMetricStatus.dhall
, CronJob =
    ./schemas/io.k8s.api.batch.v1.CronJob.dhall
, CronJobList =
    ./schemas/io.k8s.api.batch.v1.CronJobList.dhall
, CronJobSpec =
    ./schemas/io.k8s.api.batch.v1.CronJobSpec.dhall
, CronJobStatus =
    ./schemas/io.k8s.api.batch.v1.CronJobStatus.dhall
, Job =
    ./schemas/io.k8s.api.batch.v1.Job.dhall
, JobCondition =
    ./schemas/io.k8s.api.batch.v1.JobCondition.dhall
, JobList =
    ./schemas/io.k8s.api.batch.v1.JobList.dhall
, JobSpec =
    ./schemas/io.k8s.api.batch.v1.JobSpec.dhall
, JobStatus =
    ./schemas/io.k8s.api.batch.v1.JobStatus.dhall
, JobTemplateSpec =
    ./schemas/io.k8s.api.batch.v1.JobTemplateSpec.dhall
, PodFailurePolicy =
    ./schemas/io.k8s.api.batch.v1.PodFailurePolicy.dhall
, PodFailurePolicyOnExitCodesRequirement =
    ./schemas/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement.dhall
, PodFailurePolicyOnPodConditionsPattern =
    ./schemas/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern.dhall
, PodFailurePolicyRule =
    ./schemas/io.k8s.api.batch.v1.PodFailurePolicyRule.dhall
, SuccessPolicy =
    ./schemas/io.k8s.api.batch.v1.SuccessPolicy.dhall
, SuccessPolicyRule =
    ./schemas/io.k8s.api.batch.v1.SuccessPolicyRule.dhall
, UncountedTerminatedPods =
    ./schemas/io.k8s.api.batch.v1.UncountedTerminatedPods.dhall
, CertificateSigningRequest =
    ./schemas/io.k8s.api.certificates.v1.CertificateSigningRequest.dhall
, CertificateSigningRequestCondition =
    ./schemas/io.k8s.api.certificates.v1.CertificateSigningRequestCondition.dhall
, CertificateSigningRequestList =
    ./schemas/io.k8s.api.certificates.v1.CertificateSigningRequestList.dhall
, CertificateSigningRequestSpec =
    ./schemas/io.k8s.api.certificates.v1.CertificateSigningRequestSpec.dhall
, CertificateSigningRequestStatus =
    ./schemas/io.k8s.api.certificates.v1.CertificateSigningRequestStatus.dhall
, ClusterTrustBundle =
    ./schemas/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle.dhall
, ClusterTrustBundleList =
    ./schemas/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList.dhall
, ClusterTrustBundleSpec =
    ./schemas/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec.dhall
, Lease =
    ./schemas/io.k8s.api.coordination.v1.Lease.dhall
, LeaseList =
    ./schemas/io.k8s.api.coordination.v1.LeaseList.dhall
, LeaseSpec =
    ./schemas/io.k8s.api.coordination.v1.LeaseSpec.dhall
, LeaseCandidate =
    ./schemas/io.k8s.api.coordination.v1alpha1.LeaseCandidate.dhall
, LeaseCandidateList =
    ./schemas/io.k8s.api.coordination.v1alpha1.LeaseCandidateList.dhall
, LeaseCandidateSpec =
    ./schemas/io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec.dhall
, AWSElasticBlockStoreVolumeSource =
    ./schemas/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource.dhall
, Affinity =
    ./schemas/io.k8s.api.core.v1.Affinity.dhall
, AppArmorProfile =
    ./schemas/io.k8s.api.core.v1.AppArmorProfile.dhall
, AttachedVolume =
    ./schemas/io.k8s.api.core.v1.AttachedVolume.dhall
, AzureDiskVolumeSource =
    ./schemas/io.k8s.api.core.v1.AzureDiskVolumeSource.dhall
, AzureFilePersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.AzureFilePersistentVolumeSource.dhall
, AzureFileVolumeSource =
    ./schemas/io.k8s.api.core.v1.AzureFileVolumeSource.dhall
, Binding =
    ./schemas/io.k8s.api.core.v1.Binding.dhall
, CSIPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.CSIPersistentVolumeSource.dhall
, CSIVolumeSource =
    ./schemas/io.k8s.api.core.v1.CSIVolumeSource.dhall
, Capabilities =
    ./schemas/io.k8s.api.core.v1.Capabilities.dhall
, CephFSPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.CephFSPersistentVolumeSource.dhall
, CephFSVolumeSource =
    ./schemas/io.k8s.api.core.v1.CephFSVolumeSource.dhall
, CinderPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.CinderPersistentVolumeSource.dhall
, CinderVolumeSource =
    ./schemas/io.k8s.api.core.v1.CinderVolumeSource.dhall
, ClientIPConfig =
    ./schemas/io.k8s.api.core.v1.ClientIPConfig.dhall
, ClusterTrustBundleProjection =
    ./schemas/io.k8s.api.core.v1.ClusterTrustBundleProjection.dhall
, ComponentCondition =
    ./schemas/io.k8s.api.core.v1.ComponentCondition.dhall
, ComponentStatus =
    ./schemas/io.k8s.api.core.v1.ComponentStatus.dhall
, ComponentStatusList =
    ./schemas/io.k8s.api.core.v1.ComponentStatusList.dhall
, ConfigMap =
    ./schemas/io.k8s.api.core.v1.ConfigMap.dhall
, ConfigMapEnvSource =
    ./schemas/io.k8s.api.core.v1.ConfigMapEnvSource.dhall
, ConfigMapKeySelector =
    ./schemas/io.k8s.api.core.v1.ConfigMapKeySelector.dhall
, ConfigMapList =
    ./schemas/io.k8s.api.core.v1.ConfigMapList.dhall
, ConfigMapNodeConfigSource =
    ./schemas/io.k8s.api.core.v1.ConfigMapNodeConfigSource.dhall
, ConfigMapProjection =
    ./schemas/io.k8s.api.core.v1.ConfigMapProjection.dhall
, ConfigMapVolumeSource =
    ./schemas/io.k8s.api.core.v1.ConfigMapVolumeSource.dhall
, Container =
    ./schemas/io.k8s.api.core.v1.Container.dhall
, ContainerImage =
    ./schemas/io.k8s.api.core.v1.ContainerImage.dhall
, ContainerPort =
    ./schemas/io.k8s.api.core.v1.ContainerPort.dhall
, ContainerResizePolicy =
    ./schemas/io.k8s.api.core.v1.ContainerResizePolicy.dhall
, ContainerState =
    ./schemas/io.k8s.api.core.v1.ContainerState.dhall
, ContainerStateRunning =
    ./schemas/io.k8s.api.core.v1.ContainerStateRunning.dhall
, ContainerStateTerminated =
    ./schemas/io.k8s.api.core.v1.ContainerStateTerminated.dhall
, ContainerStateWaiting =
    ./schemas/io.k8s.api.core.v1.ContainerStateWaiting.dhall
, ContainerStatus =
    ./schemas/io.k8s.api.core.v1.ContainerStatus.dhall
, ContainerUser =
    ./schemas/io.k8s.api.core.v1.ContainerUser.dhall
, DaemonEndpoint =
    ./schemas/io.k8s.api.core.v1.DaemonEndpoint.dhall
, DownwardAPIProjection =
    ./schemas/io.k8s.api.core.v1.DownwardAPIProjection.dhall
, DownwardAPIVolumeFile =
    ./schemas/io.k8s.api.core.v1.DownwardAPIVolumeFile.dhall
, DownwardAPIVolumeSource =
    ./schemas/io.k8s.api.core.v1.DownwardAPIVolumeSource.dhall
, EmptyDirVolumeSource =
    ./schemas/io.k8s.api.core.v1.EmptyDirVolumeSource.dhall
, EndpointAddress =
    ./schemas/io.k8s.api.core.v1.EndpointAddress.dhall
, EndpointSubset =
    ./schemas/io.k8s.api.core.v1.EndpointSubset.dhall
, Endpoints =
    ./schemas/io.k8s.api.core.v1.Endpoints.dhall
, EndpointsList =
    ./schemas/io.k8s.api.core.v1.EndpointsList.dhall
, EnvFromSource =
    ./schemas/io.k8s.api.core.v1.EnvFromSource.dhall
, EnvVar =
    ./schemas/io.k8s.api.core.v1.EnvVar.dhall
, EnvVarSource =
    ./schemas/io.k8s.api.core.v1.EnvVarSource.dhall
, EphemeralContainer =
    ./schemas/io.k8s.api.core.v1.EphemeralContainer.dhall
, EphemeralVolumeSource =
    ./schemas/io.k8s.api.core.v1.EphemeralVolumeSource.dhall
, EventSource =
    ./schemas/io.k8s.api.core.v1.EventSource.dhall
, ExecAction =
    ./schemas/io.k8s.api.core.v1.ExecAction.dhall
, FCVolumeSource =
    ./schemas/io.k8s.api.core.v1.FCVolumeSource.dhall
, FlexPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.FlexPersistentVolumeSource.dhall
, FlexVolumeSource =
    ./schemas/io.k8s.api.core.v1.FlexVolumeSource.dhall
, FlockerVolumeSource =
    ./schemas/io.k8s.api.core.v1.FlockerVolumeSource.dhall
, GCEPersistentDiskVolumeSource =
    ./schemas/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource.dhall
, GRPCAction =
    ./schemas/io.k8s.api.core.v1.GRPCAction.dhall
, GitRepoVolumeSource =
    ./schemas/io.k8s.api.core.v1.GitRepoVolumeSource.dhall
, GlusterfsPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource.dhall
, GlusterfsVolumeSource =
    ./schemas/io.k8s.api.core.v1.GlusterfsVolumeSource.dhall
, HTTPGetAction =
    ./schemas/io.k8s.api.core.v1.HTTPGetAction.dhall
, HTTPHeader =
    ./schemas/io.k8s.api.core.v1.HTTPHeader.dhall
, HostAlias =
    ./schemas/io.k8s.api.core.v1.HostAlias.dhall
, HostIP =
    ./schemas/io.k8s.api.core.v1.HostIP.dhall
, HostPathVolumeSource =
    ./schemas/io.k8s.api.core.v1.HostPathVolumeSource.dhall
, ISCSIPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.ISCSIPersistentVolumeSource.dhall
, ISCSIVolumeSource =
    ./schemas/io.k8s.api.core.v1.ISCSIVolumeSource.dhall
, ImageVolumeSource =
    ./schemas/io.k8s.api.core.v1.ImageVolumeSource.dhall
, KeyToPath =
    ./schemas/io.k8s.api.core.v1.KeyToPath.dhall
, Lifecycle =
    ./schemas/io.k8s.api.core.v1.Lifecycle.dhall
, LifecycleHandler =
    ./schemas/io.k8s.api.core.v1.LifecycleHandler.dhall
, LimitRange =
    ./schemas/io.k8s.api.core.v1.LimitRange.dhall
, LimitRangeItem =
    ./schemas/io.k8s.api.core.v1.LimitRangeItem.dhall
, LimitRangeList =
    ./schemas/io.k8s.api.core.v1.LimitRangeList.dhall
, LimitRangeSpec =
    ./schemas/io.k8s.api.core.v1.LimitRangeSpec.dhall
, LinuxContainerUser =
    ./schemas/io.k8s.api.core.v1.LinuxContainerUser.dhall
, LoadBalancerIngress =
    ./schemas/io.k8s.api.core.v1.LoadBalancerIngress.dhall
, LoadBalancerStatus =
    ./schemas/io.k8s.api.core.v1.LoadBalancerStatus.dhall
, LocalObjectReference =
    ./schemas/io.k8s.api.core.v1.LocalObjectReference.dhall
, LocalVolumeSource =
    ./schemas/io.k8s.api.core.v1.LocalVolumeSource.dhall
, ModifyVolumeStatus =
    ./schemas/io.k8s.api.core.v1.ModifyVolumeStatus.dhall
, NFSVolumeSource =
    ./schemas/io.k8s.api.core.v1.NFSVolumeSource.dhall
, Namespace =
    ./schemas/io.k8s.api.core.v1.Namespace.dhall
, NamespaceCondition =
    ./schemas/io.k8s.api.core.v1.NamespaceCondition.dhall
, NamespaceList =
    ./schemas/io.k8s.api.core.v1.NamespaceList.dhall
, NamespaceSpec =
    ./schemas/io.k8s.api.core.v1.NamespaceSpec.dhall
, NamespaceStatus =
    ./schemas/io.k8s.api.core.v1.NamespaceStatus.dhall
, Node =
    ./schemas/io.k8s.api.core.v1.Node.dhall
, NodeAddress =
    ./schemas/io.k8s.api.core.v1.NodeAddress.dhall
, NodeAffinity =
    ./schemas/io.k8s.api.core.v1.NodeAffinity.dhall
, NodeCondition =
    ./schemas/io.k8s.api.core.v1.NodeCondition.dhall
, NodeConfigSource =
    ./schemas/io.k8s.api.core.v1.NodeConfigSource.dhall
, NodeConfigStatus =
    ./schemas/io.k8s.api.core.v1.NodeConfigStatus.dhall
, NodeDaemonEndpoints =
    ./schemas/io.k8s.api.core.v1.NodeDaemonEndpoints.dhall
, NodeFeatures =
    ./schemas/io.k8s.api.core.v1.NodeFeatures.dhall
, NodeList =
    ./schemas/io.k8s.api.core.v1.NodeList.dhall
, NodeRuntimeHandler =
    ./schemas/io.k8s.api.core.v1.NodeRuntimeHandler.dhall
, NodeRuntimeHandlerFeatures =
    ./schemas/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures.dhall
, NodeSelector =
    ./schemas/io.k8s.api.core.v1.NodeSelector.dhall
, NodeSelectorRequirement =
    ./schemas/io.k8s.api.core.v1.NodeSelectorRequirement.dhall
, NodeSelectorTerm =
    ./schemas/io.k8s.api.core.v1.NodeSelectorTerm.dhall
, NodeSpec =
    ./schemas/io.k8s.api.core.v1.NodeSpec.dhall
, NodeStatus =
    ./schemas/io.k8s.api.core.v1.NodeStatus.dhall
, NodeSystemInfo =
    ./schemas/io.k8s.api.core.v1.NodeSystemInfo.dhall
, ObjectFieldSelector =
    ./schemas/io.k8s.api.core.v1.ObjectFieldSelector.dhall
, ObjectReference =
    ./schemas/io.k8s.api.core.v1.ObjectReference.dhall
, PersistentVolume =
    ./schemas/io.k8s.api.core.v1.PersistentVolume.dhall
, PersistentVolumeClaim =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaim.dhall
, PersistentVolumeClaimCondition =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaimCondition.dhall
, PersistentVolumeClaimList =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaimList.dhall
, PersistentVolumeClaimSpec =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaimSpec.dhall
, PersistentVolumeClaimStatus =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaimStatus.dhall
, PersistentVolumeClaimTemplate =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaimTemplate.dhall
, PersistentVolumeClaimVolumeSource =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource.dhall
, PersistentVolumeList =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeList.dhall
, PersistentVolumeSpec =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeSpec.dhall
, PersistentVolumeStatus =
    ./schemas/io.k8s.api.core.v1.PersistentVolumeStatus.dhall
, PhotonPersistentDiskVolumeSource =
    ./schemas/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource.dhall
, Pod =
    ./schemas/io.k8s.api.core.v1.Pod.dhall
, PodAffinity =
    ./schemas/io.k8s.api.core.v1.PodAffinity.dhall
, PodAffinityTerm =
    ./schemas/io.k8s.api.core.v1.PodAffinityTerm.dhall
, PodAntiAffinity =
    ./schemas/io.k8s.api.core.v1.PodAntiAffinity.dhall
, PodCondition =
    ./schemas/io.k8s.api.core.v1.PodCondition.dhall
, PodDNSConfig =
    ./schemas/io.k8s.api.core.v1.PodDNSConfig.dhall
, PodDNSConfigOption =
    ./schemas/io.k8s.api.core.v1.PodDNSConfigOption.dhall
, PodIP =
    ./schemas/io.k8s.api.core.v1.PodIP.dhall
, PodList =
    ./schemas/io.k8s.api.core.v1.PodList.dhall
, PodOS =
    ./schemas/io.k8s.api.core.v1.PodOS.dhall
, PodReadinessGate =
    ./schemas/io.k8s.api.core.v1.PodReadinessGate.dhall
, PodResourceClaim =
    ./schemas/io.k8s.api.core.v1.PodResourceClaim.dhall
, PodResourceClaimStatus =
    ./schemas/io.k8s.api.core.v1.PodResourceClaimStatus.dhall
, PodSchedulingGate =
    ./schemas/io.k8s.api.core.v1.PodSchedulingGate.dhall
, PodSecurityContext =
    ./schemas/io.k8s.api.core.v1.PodSecurityContext.dhall
, PodSpec =
    ./schemas/io.k8s.api.core.v1.PodSpec.dhall
, PodStatus =
    ./schemas/io.k8s.api.core.v1.PodStatus.dhall
, PodTemplate =
    ./schemas/io.k8s.api.core.v1.PodTemplate.dhall
, PodTemplateList =
    ./schemas/io.k8s.api.core.v1.PodTemplateList.dhall
, PodTemplateSpec =
    ./schemas/io.k8s.api.core.v1.PodTemplateSpec.dhall
, PortStatus =
    ./schemas/io.k8s.api.core.v1.PortStatus.dhall
, PortworxVolumeSource =
    ./schemas/io.k8s.api.core.v1.PortworxVolumeSource.dhall
, PreferredSchedulingTerm =
    ./schemas/io.k8s.api.core.v1.PreferredSchedulingTerm.dhall
, Probe =
    ./schemas/io.k8s.api.core.v1.Probe.dhall
, ProjectedVolumeSource =
    ./schemas/io.k8s.api.core.v1.ProjectedVolumeSource.dhall
, QuobyteVolumeSource =
    ./schemas/io.k8s.api.core.v1.QuobyteVolumeSource.dhall
, RBDPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.RBDPersistentVolumeSource.dhall
, RBDVolumeSource =
    ./schemas/io.k8s.api.core.v1.RBDVolumeSource.dhall
, ReplicationController =
    ./schemas/io.k8s.api.core.v1.ReplicationController.dhall
, ReplicationControllerCondition =
    ./schemas/io.k8s.api.core.v1.ReplicationControllerCondition.dhall
, ReplicationControllerList =
    ./schemas/io.k8s.api.core.v1.ReplicationControllerList.dhall
, ReplicationControllerSpec =
    ./schemas/io.k8s.api.core.v1.ReplicationControllerSpec.dhall
, ReplicationControllerStatus =
    ./schemas/io.k8s.api.core.v1.ReplicationControllerStatus.dhall
, ResourceClaim =
    ./schemas/io.k8s.api.core.v1.ResourceClaim.dhall
, ResourceFieldSelector =
    ./schemas/io.k8s.api.core.v1.ResourceFieldSelector.dhall
, ResourceHealth =
    ./schemas/io.k8s.api.core.v1.ResourceHealth.dhall
, ResourceQuota =
    ./schemas/io.k8s.api.core.v1.ResourceQuota.dhall
, ResourceQuotaList =
    ./schemas/io.k8s.api.core.v1.ResourceQuotaList.dhall
, ResourceQuotaSpec =
    ./schemas/io.k8s.api.core.v1.ResourceQuotaSpec.dhall
, ResourceQuotaStatus =
    ./schemas/io.k8s.api.core.v1.ResourceQuotaStatus.dhall
, ResourceRequirements =
    ./schemas/io.k8s.api.core.v1.ResourceRequirements.dhall
, ResourceStatus =
    ./schemas/io.k8s.api.core.v1.ResourceStatus.dhall
, SELinuxOptions =
    ./schemas/io.k8s.api.core.v1.SELinuxOptions.dhall
, ScaleIOPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource.dhall
, ScaleIOVolumeSource =
    ./schemas/io.k8s.api.core.v1.ScaleIOVolumeSource.dhall
, ScopeSelector =
    ./schemas/io.k8s.api.core.v1.ScopeSelector.dhall
, ScopedResourceSelectorRequirement =
    ./schemas/io.k8s.api.core.v1.ScopedResourceSelectorRequirement.dhall
, SeccompProfile =
    ./schemas/io.k8s.api.core.v1.SeccompProfile.dhall
, Secret =
    ./schemas/io.k8s.api.core.v1.Secret.dhall
, SecretEnvSource =
    ./schemas/io.k8s.api.core.v1.SecretEnvSource.dhall
, SecretKeySelector =
    ./schemas/io.k8s.api.core.v1.SecretKeySelector.dhall
, SecretList =
    ./schemas/io.k8s.api.core.v1.SecretList.dhall
, SecretProjection =
    ./schemas/io.k8s.api.core.v1.SecretProjection.dhall
, SecretReference =
    ./schemas/io.k8s.api.core.v1.SecretReference.dhall
, SecretVolumeSource =
    ./schemas/io.k8s.api.core.v1.SecretVolumeSource.dhall
, SecurityContext =
    ./schemas/io.k8s.api.core.v1.SecurityContext.dhall
, Service =
    ./schemas/io.k8s.api.core.v1.Service.dhall
, ServiceAccount =
    ./schemas/io.k8s.api.core.v1.ServiceAccount.dhall
, ServiceAccountList =
    ./schemas/io.k8s.api.core.v1.ServiceAccountList.dhall
, ServiceAccountTokenProjection =
    ./schemas/io.k8s.api.core.v1.ServiceAccountTokenProjection.dhall
, ServiceList =
    ./schemas/io.k8s.api.core.v1.ServiceList.dhall
, ServicePort =
    ./schemas/io.k8s.api.core.v1.ServicePort.dhall
, ServiceSpec =
    ./schemas/io.k8s.api.core.v1.ServiceSpec.dhall
, ServiceStatus =
    ./schemas/io.k8s.api.core.v1.ServiceStatus.dhall
, SessionAffinityConfig =
    ./schemas/io.k8s.api.core.v1.SessionAffinityConfig.dhall
, SleepAction =
    ./schemas/io.k8s.api.core.v1.SleepAction.dhall
, StorageOSPersistentVolumeSource =
    ./schemas/io.k8s.api.core.v1.StorageOSPersistentVolumeSource.dhall
, StorageOSVolumeSource =
    ./schemas/io.k8s.api.core.v1.StorageOSVolumeSource.dhall
, Sysctl =
    ./schemas/io.k8s.api.core.v1.Sysctl.dhall
, TCPSocketAction =
    ./schemas/io.k8s.api.core.v1.TCPSocketAction.dhall
, Taint =
    ./schemas/io.k8s.api.core.v1.Taint.dhall
, Toleration =
    ./schemas/io.k8s.api.core.v1.Toleration.dhall
, TopologySelectorLabelRequirement =
    ./schemas/io.k8s.api.core.v1.TopologySelectorLabelRequirement.dhall
, TopologySelectorTerm =
    ./schemas/io.k8s.api.core.v1.TopologySelectorTerm.dhall
, TopologySpreadConstraint =
    ./schemas/io.k8s.api.core.v1.TopologySpreadConstraint.dhall
, TypedLocalObjectReference =
    ./schemas/io.k8s.api.core.v1.TypedLocalObjectReference.dhall
, TypedObjectReference =
    ./schemas/io.k8s.api.core.v1.TypedObjectReference.dhall
, Volume =
    ./schemas/io.k8s.api.core.v1.Volume.dhall
, VolumeDevice =
    ./schemas/io.k8s.api.core.v1.VolumeDevice.dhall
, VolumeMount =
    ./schemas/io.k8s.api.core.v1.VolumeMount.dhall
, VolumeMountStatus =
    ./schemas/io.k8s.api.core.v1.VolumeMountStatus.dhall
, VolumeNodeAffinity =
    ./schemas/io.k8s.api.core.v1.VolumeNodeAffinity.dhall
, VolumeProjection =
    ./schemas/io.k8s.api.core.v1.VolumeProjection.dhall
, VolumeResourceRequirements =
    ./schemas/io.k8s.api.core.v1.VolumeResourceRequirements.dhall
, VsphereVirtualDiskVolumeSource =
    ./schemas/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource.dhall
, WeightedPodAffinityTerm =
    ./schemas/io.k8s.api.core.v1.WeightedPodAffinityTerm.dhall
, WindowsSecurityContextOptions =
    ./schemas/io.k8s.api.core.v1.WindowsSecurityContextOptions.dhall
, Endpoint =
    ./schemas/io.k8s.api.discovery.v1.Endpoint.dhall
, EndpointConditions =
    ./schemas/io.k8s.api.discovery.v1.EndpointConditions.dhall
, EndpointHints =
    ./schemas/io.k8s.api.discovery.v1.EndpointHints.dhall
, EndpointPort =
    ./schemas/io.k8s.api.discovery.v1.EndpointPort.dhall
, EndpointSlice =
    ./schemas/io.k8s.api.discovery.v1.EndpointSlice.dhall
, EndpointSliceList =
    ./schemas/io.k8s.api.discovery.v1.EndpointSliceList.dhall
, ForZone =
    ./schemas/io.k8s.api.discovery.v1.ForZone.dhall
, Event =
    ./schemas/io.k8s.api.events.v1.Event.dhall
, EventList =
    ./schemas/io.k8s.api.events.v1.EventList.dhall
, EventSeries =
    ./schemas/io.k8s.api.events.v1.EventSeries.dhall
, ExemptPriorityLevelConfiguration =
    ./schemas/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration.dhall
, FlowDistinguisherMethod =
    ./schemas/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod.dhall
, FlowSchema =
    ./schemas/io.k8s.api.flowcontrol.v1.FlowSchema.dhall
, FlowSchemaCondition =
    ./schemas/io.k8s.api.flowcontrol.v1.FlowSchemaCondition.dhall
, FlowSchemaList =
    ./schemas/io.k8s.api.flowcontrol.v1.FlowSchemaList.dhall
, FlowSchemaSpec =
    ./schemas/io.k8s.api.flowcontrol.v1.FlowSchemaSpec.dhall
, FlowSchemaStatus =
    ./schemas/io.k8s.api.flowcontrol.v1.FlowSchemaStatus.dhall
, GroupSubject =
    ./schemas/io.k8s.api.flowcontrol.v1.GroupSubject.dhall
, LimitResponse =
    ./schemas/io.k8s.api.flowcontrol.v1.LimitResponse.dhall
, LimitedPriorityLevelConfiguration =
    ./schemas/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration.dhall
, NonResourcePolicyRule =
    ./schemas/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule.dhall
, PolicyRulesWithSubjects =
    ./schemas/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects.dhall
, PriorityLevelConfiguration =
    ./schemas/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration.dhall
, PriorityLevelConfigurationCondition =
    ./schemas/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition.dhall
, PriorityLevelConfigurationList =
    ./schemas/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList.dhall
, PriorityLevelConfigurationReference =
    ./schemas/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference.dhall
, PriorityLevelConfigurationSpec =
    ./schemas/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec.dhall
, PriorityLevelConfigurationStatus =
    ./schemas/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus.dhall
, QueuingConfiguration =
    ./schemas/io.k8s.api.flowcontrol.v1.QueuingConfiguration.dhall
, ResourcePolicyRule =
    ./schemas/io.k8s.api.flowcontrol.v1.ResourcePolicyRule.dhall
, ServiceAccountSubject =
    ./schemas/io.k8s.api.flowcontrol.v1.ServiceAccountSubject.dhall
, UserSubject =
    ./schemas/io.k8s.api.flowcontrol.v1.UserSubject.dhall
, HTTPIngressPath =
    ./schemas/io.k8s.api.networking.v1.HTTPIngressPath.dhall
, HTTPIngressRuleValue =
    ./schemas/io.k8s.api.networking.v1.HTTPIngressRuleValue.dhall
, IPBlock =
    ./schemas/io.k8s.api.networking.v1.IPBlock.dhall
, Ingress =
    ./schemas/io.k8s.api.networking.v1.Ingress.dhall
, IngressBackend =
    ./schemas/io.k8s.api.networking.v1.IngressBackend.dhall
, IngressClass =
    ./schemas/io.k8s.api.networking.v1.IngressClass.dhall
, IngressClassList =
    ./schemas/io.k8s.api.networking.v1.IngressClassList.dhall
, IngressClassParametersReference =
    ./schemas/io.k8s.api.networking.v1.IngressClassParametersReference.dhall
, IngressClassSpec =
    ./schemas/io.k8s.api.networking.v1.IngressClassSpec.dhall
, IngressList =
    ./schemas/io.k8s.api.networking.v1.IngressList.dhall
, IngressLoadBalancerIngress =
    ./schemas/io.k8s.api.networking.v1.IngressLoadBalancerIngress.dhall
, IngressLoadBalancerStatus =
    ./schemas/io.k8s.api.networking.v1.IngressLoadBalancerStatus.dhall
, IngressPortStatus =
    ./schemas/io.k8s.api.networking.v1.IngressPortStatus.dhall
, IngressRule =
    ./schemas/io.k8s.api.networking.v1.IngressRule.dhall
, IngressServiceBackend =
    ./schemas/io.k8s.api.networking.v1.IngressServiceBackend.dhall
, IngressSpec =
    ./schemas/io.k8s.api.networking.v1.IngressSpec.dhall
, IngressStatus =
    ./schemas/io.k8s.api.networking.v1.IngressStatus.dhall
, IngressTLS =
    ./schemas/io.k8s.api.networking.v1.IngressTLS.dhall
, NetworkPolicy =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicy.dhall
, NetworkPolicyEgressRule =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicyEgressRule.dhall
, NetworkPolicyIngressRule =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicyIngressRule.dhall
, NetworkPolicyList =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicyList.dhall
, NetworkPolicyPeer =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicyPeer.dhall
, NetworkPolicyPort =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicyPort.dhall
, NetworkPolicySpec =
    ./schemas/io.k8s.api.networking.v1.NetworkPolicySpec.dhall
, ServiceBackendPort =
    ./schemas/io.k8s.api.networking.v1.ServiceBackendPort.dhall
, IPAddress =
    ./schemas/io.k8s.api.networking.v1beta1.IPAddress.dhall
, IPAddressList =
    ./schemas/io.k8s.api.networking.v1beta1.IPAddressList.dhall
, IPAddressSpec =
    ./schemas/io.k8s.api.networking.v1beta1.IPAddressSpec.dhall
, ParentReference =
    ./schemas/io.k8s.api.networking.v1beta1.ParentReference.dhall
, ServiceCIDR =
    ./schemas/io.k8s.api.networking.v1beta1.ServiceCIDR.dhall
, ServiceCIDRList =
    ./schemas/io.k8s.api.networking.v1beta1.ServiceCIDRList.dhall
, ServiceCIDRSpec =
    ./schemas/io.k8s.api.networking.v1beta1.ServiceCIDRSpec.dhall
, ServiceCIDRStatus =
    ./schemas/io.k8s.api.networking.v1beta1.ServiceCIDRStatus.dhall
, Overhead =
    ./schemas/io.k8s.api.node.v1.Overhead.dhall
, RuntimeClass =
    ./schemas/io.k8s.api.node.v1.RuntimeClass.dhall
, RuntimeClassList =
    ./schemas/io.k8s.api.node.v1.RuntimeClassList.dhall
, Scheduling =
    ./schemas/io.k8s.api.node.v1.Scheduling.dhall
, Eviction =
    ./schemas/io.k8s.api.policy.v1.Eviction.dhall
, PodDisruptionBudget =
    ./schemas/io.k8s.api.policy.v1.PodDisruptionBudget.dhall
, PodDisruptionBudgetList =
    ./schemas/io.k8s.api.policy.v1.PodDisruptionBudgetList.dhall
, PodDisruptionBudgetSpec =
    ./schemas/io.k8s.api.policy.v1.PodDisruptionBudgetSpec.dhall
, PodDisruptionBudgetStatus =
    ./schemas/io.k8s.api.policy.v1.PodDisruptionBudgetStatus.dhall
, AggregationRule =
    ./schemas/io.k8s.api.rbac.v1.AggregationRule.dhall
, ClusterRole =
    ./schemas/io.k8s.api.rbac.v1.ClusterRole.dhall
, ClusterRoleBinding =
    ./schemas/io.k8s.api.rbac.v1.ClusterRoleBinding.dhall
, ClusterRoleBindingList =
    ./schemas/io.k8s.api.rbac.v1.ClusterRoleBindingList.dhall
, ClusterRoleList =
    ./schemas/io.k8s.api.rbac.v1.ClusterRoleList.dhall
, PolicyRule =
    ./schemas/io.k8s.api.rbac.v1.PolicyRule.dhall
, Role =
    ./schemas/io.k8s.api.rbac.v1.Role.dhall
, RoleBinding =
    ./schemas/io.k8s.api.rbac.v1.RoleBinding.dhall
, RoleBindingList =
    ./schemas/io.k8s.api.rbac.v1.RoleBindingList.dhall
, RoleList =
    ./schemas/io.k8s.api.rbac.v1.RoleList.dhall
, RoleRef =
    ./schemas/io.k8s.api.rbac.v1.RoleRef.dhall
, Subject =
    ./schemas/io.k8s.api.rbac.v1.Subject.dhall
, AllocationResult =
    ./schemas/io.k8s.api.resource.v1alpha3.AllocationResult.dhall
, BasicDevice =
    ./schemas/io.k8s.api.resource.v1alpha3.BasicDevice.dhall
, CELDeviceSelector =
    ./schemas/io.k8s.api.resource.v1alpha3.CELDeviceSelector.dhall
, Device =
    ./schemas/io.k8s.api.resource.v1alpha3.Device.dhall
, DeviceAllocationConfiguration =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration.dhall
, DeviceAllocationResult =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceAllocationResult.dhall
, DeviceAttribute =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceAttribute.dhall
, DeviceClaim =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceClaim.dhall
, DeviceClaimConfiguration =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration.dhall
, DeviceClass =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceClass.dhall
, DeviceClassConfiguration =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceClassConfiguration.dhall
, DeviceClassList =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceClassList.dhall
, DeviceClassSpec =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceClassSpec.dhall
, DeviceConstraint =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceConstraint.dhall
, DeviceRequest =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceRequest.dhall
, DeviceRequestAllocationResult =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult.dhall
, DeviceSelector =
    ./schemas/io.k8s.api.resource.v1alpha3.DeviceSelector.dhall
, OpaqueDeviceConfiguration =
    ./schemas/io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration.dhall
, PodSchedulingContext =
    ./schemas/io.k8s.api.resource.v1alpha3.PodSchedulingContext.dhall
, PodSchedulingContextList =
    ./schemas/io.k8s.api.resource.v1alpha3.PodSchedulingContextList.dhall
, PodSchedulingContextSpec =
    ./schemas/io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec.dhall
, PodSchedulingContextStatus =
    ./schemas/io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus.dhall
, ResourceClaimConsumerReference =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference.dhall
, ResourceClaimList =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimList.dhall
, ResourceClaimSchedulingStatus =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus.dhall
, ResourceClaimSpec =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimSpec.dhall
, ResourceClaimStatus =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimStatus.dhall
, ResourceClaimTemplate =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimTemplate.dhall
, ResourceClaimTemplateList =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList.dhall
, ResourceClaimTemplateSpec =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec.dhall
, ResourcePool =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourcePool.dhall
, ResourceSlice =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceSlice.dhall
, ResourceSliceList =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceSliceList.dhall
, ResourceSliceSpec =
    ./schemas/io.k8s.api.resource.v1alpha3.ResourceSliceSpec.dhall
, PriorityClass =
    ./schemas/io.k8s.api.scheduling.v1.PriorityClass.dhall
, PriorityClassList =
    ./schemas/io.k8s.api.scheduling.v1.PriorityClassList.dhall
, CSIDriver =
    ./schemas/io.k8s.api.storage.v1.CSIDriver.dhall
, CSIDriverList =
    ./schemas/io.k8s.api.storage.v1.CSIDriverList.dhall
, CSIDriverSpec =
    ./schemas/io.k8s.api.storage.v1.CSIDriverSpec.dhall
, CSINode =
    ./schemas/io.k8s.api.storage.v1.CSINode.dhall
, CSINodeDriver =
    ./schemas/io.k8s.api.storage.v1.CSINodeDriver.dhall
, CSINodeList =
    ./schemas/io.k8s.api.storage.v1.CSINodeList.dhall
, CSINodeSpec =
    ./schemas/io.k8s.api.storage.v1.CSINodeSpec.dhall
, CSIStorageCapacity =
    ./schemas/io.k8s.api.storage.v1.CSIStorageCapacity.dhall
, CSIStorageCapacityList =
    ./schemas/io.k8s.api.storage.v1.CSIStorageCapacityList.dhall
, StorageClass =
    ./schemas/io.k8s.api.storage.v1.StorageClass.dhall
, StorageClassList =
    ./schemas/io.k8s.api.storage.v1.StorageClassList.dhall
, TokenRequest =
    ./schemas/io.k8s.api.storage.v1.TokenRequest.dhall
, VolumeAttachment =
    ./schemas/io.k8s.api.storage.v1.VolumeAttachment.dhall
, VolumeAttachmentList =
    ./schemas/io.k8s.api.storage.v1.VolumeAttachmentList.dhall
, VolumeAttachmentSource =
    ./schemas/io.k8s.api.storage.v1.VolumeAttachmentSource.dhall
, VolumeAttachmentSpec =
    ./schemas/io.k8s.api.storage.v1.VolumeAttachmentSpec.dhall
, VolumeAttachmentStatus =
    ./schemas/io.k8s.api.storage.v1.VolumeAttachmentStatus.dhall
, VolumeError =
    ./schemas/io.k8s.api.storage.v1.VolumeError.dhall
, VolumeNodeResources =
    ./schemas/io.k8s.api.storage.v1.VolumeNodeResources.dhall
, VolumeAttributesClass =
    ./schemas/io.k8s.api.storage.v1beta1.VolumeAttributesClass.dhall
, VolumeAttributesClassList =
    ./schemas/io.k8s.api.storage.v1beta1.VolumeAttributesClassList.dhall
, GroupVersionResource =
    ./schemas/io.k8s.api.storagemigration.v1alpha1.GroupVersionResource.dhall
, MigrationCondition =
    ./schemas/io.k8s.api.storagemigration.v1alpha1.MigrationCondition.dhall
, StorageVersionMigration =
    ./schemas/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration.dhall
, StorageVersionMigrationList =
    ./schemas/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList.dhall
, StorageVersionMigrationSpec =
    ./schemas/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec.dhall
, StorageVersionMigrationStatus =
    ./schemas/io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus.dhall
, CustomResourceColumnDefinition =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition.dhall
, CustomResourceConversion =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion.dhall
, CustomResourceDefinition =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition.dhall
, CustomResourceDefinitionCondition =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition.dhall
, CustomResourceDefinitionList =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList.dhall
, CustomResourceDefinitionNames =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames.dhall
, CustomResourceDefinitionSpec =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec.dhall
, CustomResourceDefinitionStatus =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus.dhall
, CustomResourceDefinitionVersion =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion.dhall
, CustomResourceSubresourceScale =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale.dhall
, CustomResourceSubresources =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources.dhall
, CustomResourceValidation =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation.dhall
, ExternalDocumentation =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation.dhall
, JSON =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON.dhall
, JSONSchemaProps =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps.dhall
, JSONSchemaPropsOrArray =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray.dhall
, JSONSchemaPropsOrBool =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool.dhall
, JSONSchemaPropsOrStringArray =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray.dhall
, SelectableField =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField.dhall
, ValidationRule =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule.dhall
, WebhookClientConfig =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig.dhall
, WebhookConversion =
    ./schemas/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion.dhall
, APIGroup =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup.dhall
, APIGroupList =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList.dhall
, APIResource =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource.dhall
, APIResourceList =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList.dhall
, APIVersions =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions.dhall
, Condition =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Condition.dhall
, DeleteOptions =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions.dhall
, FieldSelectorRequirement =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement.dhall
, GroupVersionForDiscovery =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery.dhall
, LabelSelector =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector.dhall
, LabelSelectorRequirement =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement.dhall
, ListMeta =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta.dhall
, ManagedFieldsEntry =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry.dhall
, ObjectMeta =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.dhall
, OwnerReference =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference.dhall
, Preconditions =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions.dhall
, ServerAddressByClientCIDR =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR.dhall
, Status =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status.dhall
, StatusCause =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause.dhall
, StatusDetails =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails.dhall
, WatchEvent =
    ./schemas/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent.dhall
, Info =
    ./schemas/io.k8s.apimachinery.pkg.version.Info.dhall
, APIService =
    ./schemas/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService.dhall
, APIServiceCondition =
    ./schemas/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition.dhall
, APIServiceList =
    ./schemas/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList.dhall
, APIServiceSpec =
    ./schemas/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec.dhall
, APIServiceStatus =
    ./schemas/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus.dhall
, ServiceReference =
    ./schemas/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference.dhall
}
